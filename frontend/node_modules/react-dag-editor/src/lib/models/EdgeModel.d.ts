import { $Complete } from "../utils/complete";
import { ICanvasEdge } from "./edge";
import { GraphEdgeStatus } from "./status";
export declare class EdgeModel<T = unknown> implements $Complete<ICanvasEdge> {
    readonly inner: ICanvasEdge<T>;
    get id(): string;
    get automationId(): string | undefined;
    get source(): string;
    get target(): string;
    get sourcePortId(): string;
    get targetPortId(): string;
    get status(): GraphEdgeStatus | undefined;
    get data(): Readonly<T> | undefined;
    private constructor();
    static fromJSON<D>(inner: ICanvasEdge<D>): EdgeModel<D>;
    updateStatus(f: (state: number | undefined) => number): EdgeModel<T>;
    update(f: (curEdge: ICanvasEdge<T>) => ICanvasEdge<T>): EdgeModel<T>;
    /**
     * shallow copy the model
     * example usage: mark the edge is dirty and need a re-render
     *
     * @returns shallowed edge model
     */
    shallow(): EdgeModel<T>;
    toJSON(): ICanvasEdge<T>;
}
