import * as React from "react";
export interface ITouchHandler<ExtraArgs extends unknown[] = []> {
    onStart(events: Map<number, PointerEvent>, e: PointerEvent, ...args: ExtraArgs): void;
    onMove(events: Map<number, PointerEvent>, e: PointerEvent, ...args: ExtraArgs): void;
    onEnd(e: PointerEvent, ...args: ExtraArgs): void;
}
export declare class TouchController<ExtraArgs extends unknown[] = []> {
    readonly eventHandlers: {
        onPointerDown: (e: React.PointerEvent, ...args: ExtraArgs) => void;
        onPointerMove: (e: React.PointerEvent, ...args: ExtraArgs) => void;
        onPointerUp: (e: React.PointerEvent, ...args: ExtraArgs) => void;
    };
    private pointers;
    private currentHandler;
    private readonly handlers;
    private readonly onMove;
    constructor(handlers: Map<number, ITouchHandler<ExtraArgs>>);
    private updateHandler;
}
