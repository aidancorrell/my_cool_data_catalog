import * as React from "react";
import { IGraphProps } from "../components/Graph/IGraphProps";
import { IDispatch } from "../contexts/GraphStateContext";
import { GraphController } from "../controllers/GraphController";
import type { IGraphConfig } from "../models/config/types";
import { IContainerRect } from "../models/geometry";
import { EventChannel } from "../utils/eventChannel";
import { useFeatureControl } from "./useFeatureControl";
export interface IUseEventChannelParams {
    props: IGraphProps;
    dispatch: IDispatch;
    rectRef: React.RefObject<IContainerRect | undefined>;
    svgRef: React.RefObject<SVGSVGElement>;
    containerRef: React.RefObject<HTMLDivElement>;
    featureControl: ReturnType<typeof useFeatureControl>;
    graphConfig: IGraphConfig;
    eventChannel: EventChannel;
    graphController: GraphController;
    setFocusedWithoutMouse(value: boolean): void;
    setCurHoverNode(nodeId: string | undefined): void;
    setCurHoverPort(value: [string, string] | undefined): void;
    updateViewport(): void;
}
export declare function useEventChannel({ props, dispatch, rectRef, svgRef, containerRef, featureControl, graphConfig, setFocusedWithoutMouse, setCurHoverNode, setCurHoverPort, eventChannel, updateViewport, graphController, }: IUseEventChannelParams): void;
