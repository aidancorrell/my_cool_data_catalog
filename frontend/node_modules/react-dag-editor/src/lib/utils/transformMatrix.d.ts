import { IPoint, ITransformMatrix, IViewport } from "../models/geometry";
/**
 * get transformed point
 * @param x
 * @param y
 * @param transformMatrix
 */
export declare const transformPoint: (x: number, y: number, transformMatrix: ITransformMatrix) => IPoint;
/**
 * reverse of transformPoint
 * @param x
 * @param y
 * @param transformMatrix
 */
export declare const reverseTransformPoint: (x: number, y: number, transformMatrix: ITransformMatrix) => IPoint;
export declare const getPointDeltaByClientDelta: (x: number, y: number, transformMatrix: ITransformMatrix) => IPoint;
export declare const getClientDeltaByPointDelta: (x: number, y: number, transformMatrix?: ITransformMatrix) => IPoint;
export declare const getRealPointFromClientPoint: (clientX: number, clientY: number, viewport: Required<IViewport>) => IPoint;
export declare const getClientPointFromRealPoint: (realX: number, realY: number, viewport: Required<IViewport>) => IPoint;
/**
 * get client point relative to container
 */
export declare const getContainerClientPoint: (realX: number, realY: number, viewport: Required<IViewport>) => {
    x: number;
    y: number;
};
