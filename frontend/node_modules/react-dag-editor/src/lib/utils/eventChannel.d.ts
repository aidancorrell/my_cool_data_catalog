/// <reference types="react" />
import { IEvent } from "../models/event";
export type IGraphEventHandler<T = unknown, P = unknown, U = unknown> = (event: IEvent<T, P, U>) => void;
export declare class EventChannel {
    readonly listenersRef: import("react").RefObject<IGraphEventHandler<unknown, unknown, unknown>>;
    readonly externalHandlerRef: import("react").RefObject<IGraphEventHandler<unknown, unknown, unknown> | undefined>;
    private queue;
    private working;
    trigger(event: IEvent): void;
    batch(events: IEvent[]): void;
    private callHandlers;
}
