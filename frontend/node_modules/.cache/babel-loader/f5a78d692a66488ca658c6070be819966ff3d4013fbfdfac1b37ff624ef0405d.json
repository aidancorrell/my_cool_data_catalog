{"ast":null,"code":"var _jsxFileName = \"/Users/aidancorrell/repos/data_catalog/frontend/src/pages/LineagePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport LineageGraph from \"../components/LineageGraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineagePage = () => {\n  _s();\n  const [lineageData, setLineageData] = useState(null);\n  useEffect(() => {\n    // Fetch lineage data from your backend\n    fetch(\"http://127.0.0.1:3000/lineage/model_1\").then(response => response.json()).then(data => {\n      // Convert fetched data to nodes and links format\n      const nodes = [{\n        id: data.model\n      }, ...data.dependencies.map(dep => ({\n        id: dep\n      }))];\n      const links = data.dependencies.map(dep => ({\n        source: data.model,\n        target: dep\n      }));\n      setLineageData({\n        nodes,\n        links\n      });\n    }).catch(error => console.error(\"Error fetching lineage data:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lineage Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), lineageData ? /*#__PURE__*/_jsxDEV(LineageGraph, {\n      data: lineageData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading lineage graph...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(LineagePage, \"ot1czIztuQMe2BhyPWDuh0cVMy4=\");\n_c = LineagePage;\nexport default LineagePage;\n\n// import React, { useEffect, useState } from \"react\";\n// import LineageGraph from \"../components/LineageGraph\";\n\n// const LineagePage = () => {\n//     const [models, setModels] = useState([]);\n//     const [lineageData, setLineageData] = useState(null);\n\n//     useEffect(() => {\n//         // Fetch models from the backend\n//         fetch(\"http://127.0.0.1:3000/models\")\n//             .then((response) => response.json())\n//             .then((data) => setModels(data))\n//             .catch((error) => console.error(\"Error fetching models:\", error));\n\n//         // Fetch lineage data (for the graph)\n//         fetch(\"http://127.0.0.1:3000/lineage\")\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 const graphData = {\n//                     nodes: Object.keys(data).map((key) => ({ id: key })),\n//                     links: Object.entries(data).flatMap(([key, value]) =>\n//                         value.dependencies.map((dep) => ({\n//                             source: key,\n//                             target: dep,\n//                         }))\n//                     ),\n//                 };\n\n//                 setLineageData(graphData);\n//             })\n//             .catch((error) => console.error(\"Error fetching lineage data:\", error));\n//     }, []);\n\n//     return (\n//         <div style={{ padding: \"20px\" }}>\n//             <h1>Data Lineage</h1>\n//             <h2>Models</h2>\n//             <ul>\n//                 {models.map((model, index) => (\n//                     <li key={index}>{model}</li>\n//                 ))}\n//             </ul>\n\n//             <h2>Lineage Graph</h2>\n//             <LineageGraph lineageData={lineageData} />\n//         </div>\n//     );\n// };\n\n// export default LineagePage;\nvar _c;\n$RefreshReg$(_c, \"LineagePage\");","map":{"version":3,"names":["React","useEffect","useState","LineageGraph","jsxDEV","_jsxDEV","LineagePage","_s","lineageData","setLineageData","fetch","then","response","json","data","nodes","id","model","dependencies","map","dep","links","source","target","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aidancorrell/repos/data_catalog/frontend/src/pages/LineagePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport LineageGraph from \"../components/LineageGraph\";\n\nconst LineagePage = () => {\n    const [lineageData, setLineageData] = useState(null);\n\n    useEffect(() => {\n        // Fetch lineage data from your backend\n        fetch(\"http://127.0.0.1:3000/lineage/model_1\")\n            .then((response) => response.json())\n            .then((data) => {\n                // Convert fetched data to nodes and links format\n                const nodes = [\n                    { id: data.model },\n                    ...data.dependencies.map((dep) => ({ id: dep })),\n                ];\n                const links = data.dependencies.map((dep) => ({\n                    source: data.model,\n                    target: dep,\n                }));\n\n                setLineageData({ nodes, links });\n            })\n            .catch((error) => console.error(\"Error fetching lineage data:\", error));\n    }, []);\n\n    return (\n        <div>\n            <h1>Lineage Graph</h1>\n            {lineageData ? (\n                <LineageGraph data={lineageData} />\n            ) : (\n                <p>Loading lineage graph...</p>\n            )}\n        </div>\n    );\n};\n\nexport default LineagePage;\n\n\n// import React, { useEffect, useState } from \"react\";\n// import LineageGraph from \"../components/LineageGraph\";\n\n// const LineagePage = () => {\n//     const [models, setModels] = useState([]);\n//     const [lineageData, setLineageData] = useState(null);\n\n//     useEffect(() => {\n//         // Fetch models from the backend\n//         fetch(\"http://127.0.0.1:3000/models\")\n//             .then((response) => response.json())\n//             .then((data) => setModels(data))\n//             .catch((error) => console.error(\"Error fetching models:\", error));\n\n//         // Fetch lineage data (for the graph)\n//         fetch(\"http://127.0.0.1:3000/lineage\")\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 const graphData = {\n//                     nodes: Object.keys(data).map((key) => ({ id: key })),\n//                     links: Object.entries(data).flatMap(([key, value]) =>\n//                         value.dependencies.map((dep) => ({\n//                             source: key,\n//                             target: dep,\n//                         }))\n//                     ),\n//                 };\n\n//                 setLineageData(graphData);\n//             })\n//             .catch((error) => console.error(\"Error fetching lineage data:\", error));\n//     }, []);\n\n//     return (\n//         <div style={{ padding: \"20px\" }}>\n//             <h1>Data Lineage</h1>\n//             <h2>Models</h2>\n//             <ul>\n//                 {models.map((model, index) => (\n//                     <li key={index}>{model}</li>\n//                 ))}\n//             </ul>\n\n//             <h2>Lineage Graph</h2>\n//             <LineageGraph lineageData={lineageData} />\n//         </div>\n//     );\n// };\n\n// export default LineagePage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZ;IACAS,KAAK,CAAC,uCAAuC,CAAC,CACzCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZ;MACA,MAAMC,KAAK,GAAG,CACV;QAAEC,EAAE,EAAEF,IAAI,CAACG;MAAM,CAAC,EAClB,GAAGH,IAAI,CAACI,YAAY,CAACC,GAAG,CAAEC,GAAG,KAAM;QAAEJ,EAAE,EAAEI;MAAI,CAAC,CAAC,CAAC,CACnD;MACD,MAAMC,KAAK,GAAGP,IAAI,CAACI,YAAY,CAACC,GAAG,CAAEC,GAAG,KAAM;QAC1CE,MAAM,EAAER,IAAI,CAACG,KAAK;QAClBM,MAAM,EAAEH;MACZ,CAAC,CAAC,CAAC;MAEHX,cAAc,CAAC;QAAEM,KAAK;QAAEM;MAAM,CAAC,CAAC;IACpC,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;EAC/E,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIpB,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBvB,WAAW,gBACRH,OAAA,CAACF,YAAY;MAACW,IAAI,EAAEN;IAAY;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEnC1B,OAAA;MAAAsB,QAAA,EAAG;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACxB,EAAA,CAjCID,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAmCjB,eAAeA,WAAW;;AAG1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}