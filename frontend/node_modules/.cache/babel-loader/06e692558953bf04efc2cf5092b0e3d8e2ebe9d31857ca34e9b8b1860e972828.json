{"ast":null,"code":"var _jsxFileName = \"/Users/aidancorrell/repos/data_catalog/frontend/src/components/LineageGraph.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { Graph } from \"react-d3-graph\";\n\n// const LineageGraph = ({ lineageData }) => {\n//     const graphConfig = {\n//         node: {\n//             color: \"lightblue\",\n//             size: 400,\n//             fontSize: 12,\n//         },\n//         link: {\n//             color: \"gray\",\n//         },\n//         directed: true,\n//     };\n\n// const handleNodeClick = (nodeId) => {\n//     console.log(\"Node clicked:\", nodeId);\n//     // Add your logic here\n// };\n\n//     return (\n//         <div style={{ height: \"600px\", width: \"100%\" }}>\n//             {lineageData ? (\n//                 <Graph\n//                     id=\"lineage-graph\"\n//                     data={lineageData}\n//                     config={graphConfig}\n//                     onClickNode={handleNodeClick}\n//                 />\n//             ) : (\n//                 <p>Loading lineage graph...</p>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default LineageGraph;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Graph } from \"react-d3-graph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lineage = () => {\n  _s();\n  const [models, setModels] = useState([]);\n  const [lineageData, setLineageData] = useState(null);\n  useEffect(() => {\n    // Fetch models from the backend\n    fetch(\"http://127.0.0.1:3000/models\").then(response => response.json()).then(data => setModels(data)).catch(error => console.error(\"Error fetching models:\", error));\n\n    // Fetch lineage data from the backend\n    fetch(\"http://127.0.0.1:3000/lineage\").then(response => response.json()).then(data => {\n      const graphData = {\n        nodes: Object.keys(data).map(key => ({\n          id: key\n        })),\n        links: Object.entries(data).flatMap(([key, value]) => value.dependencies.map(dep => ({\n          source: key,\n          target: dep\n        })))\n      };\n      setLineageData(graphData);\n    }).catch(error => console.error(\"Error fetching lineage data:\", error));\n  }, []);\n\n  // Handle node click\n  const handleNodeClick = nodeId => {\n    console.log(\"Node clicked:\", nodeId);\n\n    // You can perform actions here, for example:\n    // 1. Navigate to the model's details page (if you have routing set up)\n    // 2. Show more detailed information about the node\n\n    alert(`You clicked on node: ${nodeId}`); // Example of a simple action\n  };\n\n  // Define graph configuration\n  const graphConfig = {\n    node: {\n      color: \"lightblue\",\n      size: 400,\n      fontSize: 12,\n      highlightColor: \"red\",\n      // Example: color change on hover\n      highlightFontSize: 15\n    },\n    link: {\n      color: \"gray\",\n      highlightColor: \"red\",\n      highlightWidth: 3\n    },\n    directed: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lineage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Models:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: models.map((model, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: model\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Graph:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), lineageData ? /*#__PURE__*/_jsxDEV(Graph, {\n        id: \"lineage-graph\",\n        data: lineageData,\n        config: graphConfig,\n        onClickNode: handleNodeClick // Attach the click handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading graph...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(Lineage, \"ivL30fVjOB72BV695/gRYrnHfDM=\");\n_c = Lineage;\nexport default Lineage;\nvar _c;\n$RefreshReg$(_c, \"Lineage\");","map":{"version":3,"names":["React","useEffect","useState","Graph","jsxDEV","_jsxDEV","Lineage","_s","models","setModels","lineageData","setLineageData","fetch","then","response","json","data","catch","error","console","graphData","nodes","Object","keys","map","key","id","links","entries","flatMap","value","dependencies","dep","source","target","handleNodeClick","nodeId","log","alert","graphConfig","node","color","size","fontSize","highlightColor","highlightFontSize","link","highlightWidth","directed","children","fileName","_jsxFileName","lineNumber","columnNumber","model","index","config","onClickNode","_c","$RefreshReg$"],"sources":["/Users/aidancorrell/repos/data_catalog/frontend/src/components/LineageGraph.jsx"],"sourcesContent":["// import React from \"react\";\n// import { Graph } from \"react-d3-graph\";\n\n// const LineageGraph = ({ lineageData }) => {\n//     const graphConfig = {\n//         node: {\n//             color: \"lightblue\",\n//             size: 400,\n//             fontSize: 12,\n//         },\n//         link: {\n//             color: \"gray\",\n//         },\n//         directed: true,\n//     };\n\n// const handleNodeClick = (nodeId) => {\n//     console.log(\"Node clicked:\", nodeId);\n//     // Add your logic here\n// };\n\n//     return (\n//         <div style={{ height: \"600px\", width: \"100%\" }}>\n//             {lineageData ? (\n//                 <Graph\n//                     id=\"lineage-graph\"\n//                     data={lineageData}\n//                     config={graphConfig}\n//                     onClickNode={handleNodeClick}\n//                 />\n//             ) : (\n//                 <p>Loading lineage graph...</p>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default LineageGraph;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Graph } from \"react-d3-graph\";\n\nconst Lineage = () => {\n    const [models, setModels] = useState([]);\n    const [lineageData, setLineageData] = useState(null);\n\n    useEffect(() => {\n        // Fetch models from the backend\n        fetch(\"http://127.0.0.1:3000/models\")\n            .then((response) => response.json())\n            .then((data) => setModels(data))\n            .catch((error) => console.error(\"Error fetching models:\", error));\n\n        // Fetch lineage data from the backend\n        fetch(\"http://127.0.0.1:3000/lineage\")\n            .then((response) => response.json())\n            .then((data) => {\n                const graphData = {\n                    nodes: Object.keys(data).map((key) => ({ id: key })),\n                    links: Object.entries(data).flatMap(([key, value]) =>\n                        value.dependencies.map((dep) => ({\n                            source: key,\n                            target: dep,\n                        }))\n                    ),\n                };\n                setLineageData(graphData);\n            })\n            .catch((error) => console.error(\"Error fetching lineage data:\", error));\n    }, []);\n\n    // Handle node click\n    const handleNodeClick = (nodeId) => {\n        console.log(\"Node clicked:\", nodeId);\n\n        // You can perform actions here, for example:\n        // 1. Navigate to the model's details page (if you have routing set up)\n        // 2. Show more detailed information about the node\n\n        alert(`You clicked on node: ${nodeId}`);  // Example of a simple action\n    };\n\n    // Define graph configuration\n    const graphConfig = {\n        node: {\n            color: \"lightblue\",\n            size: 400,\n            fontSize: 12,\n            highlightColor: \"red\",  // Example: color change on hover\n            highlightFontSize: 15,\n        },\n        link: {\n            color: \"gray\",\n            highlightColor: \"red\",\n            highlightWidth: 3,\n        },\n        directed: true,\n    };\n\n    return (\n        <div>\n            <h1>Lineage</h1>\n            <div>\n                <h2>Models:</h2>\n                <ul>\n                    {models.map((model, index) => (\n                        <li key={index}>{model}</li>\n                    ))}\n                </ul>\n            </div>\n            <div>\n                <h2>Graph:</h2>\n                {lineageData ? (\n                    <Graph\n                        id=\"lineage-graph\"\n                        data={lineageData}\n                        config={graphConfig}\n                        onClickNode={handleNodeClick}  // Attach the click handler\n                    />\n                ) : (\n                    <p>Loading graph...</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Lineage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}