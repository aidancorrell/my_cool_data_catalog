{"ast":null,"code":"import { jsxs, jsx, Fragment } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { createContext, createRef, useRef, useContext, useLayoutEffect, useCallback, useEffect, useMemo, useState, createElement } from 'react';\nimport * as uuid from 'uuid';\nimport { v4 } from 'uuid';\nimport * as toposort from 'toposort';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport DOMPurify from 'dompurify';\nimport { EventEmitter } from 'eventemitter3';\nimport { createUseStyles } from 'react-jss';\nimport { mergeStyleSets, mergeStyles } from '@fluentui/merge-styles';\nconst has = mask => state => Boolean(pick(mask)(state));\nconst add = mask => state => {\n  const t = state || 0;\n  if (Array.isArray(mask)) {\n    return mask.reduce((c, m) => c | m, t);\n  } else {\n    return t | mask;\n  }\n};\nconst toggle = mask => state => {\n  const t = state || 0;\n  return t ^ mask;\n};\nconst pick = mask => state => {\n  const t = state || 0;\n  return t & mask;\n};\nconst remove = mask => state => {\n  const t = state || 0;\n  if (Array.isArray(mask)) {\n    return mask.reduce((c, m) => c & ~m, t);\n  } else {\n    return t & ~mask;\n  }\n};\nconst replace = state => () => state;\nvar bitset = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  has: has,\n  add: add,\n  toggle: toggle,\n  pick: pick,\n  remove: remove,\n  replace: replace\n});\nconst EMPTY_STATUS = 0;\nconst SELECTED_STATUS = 0b0001;\nconst ACTIVATED_STATUS = 0b00000010;\nvar GraphEdgeStatus;\n(function (GraphEdgeStatus) {\n  GraphEdgeStatus[GraphEdgeStatus[\"Default\"] = EMPTY_STATUS] = \"Default\";\n  GraphEdgeStatus[GraphEdgeStatus[\"Selected\"] = SELECTED_STATUS] = \"Selected\";\n  GraphEdgeStatus[GraphEdgeStatus[\"Activated\"] = ACTIVATED_STATUS] = \"Activated\";\n  GraphEdgeStatus[GraphEdgeStatus[\"ConnectedToSelected\"] = 4] = \"ConnectedToSelected\";\n  GraphEdgeStatus[GraphEdgeStatus[\"UnconnectedToSelected\"] = 8] = \"UnconnectedToSelected\";\n  GraphEdgeStatus[GraphEdgeStatus[\"Editing\"] = 16] = \"Editing\";\n})(GraphEdgeStatus || (GraphEdgeStatus = {}));\nvar GraphNodeStatus;\n(function (GraphNodeStatus) {\n  GraphNodeStatus[GraphNodeStatus[\"Default\"] = EMPTY_STATUS] = \"Default\";\n  GraphNodeStatus[GraphNodeStatus[\"Selected\"] = SELECTED_STATUS] = \"Selected\";\n  GraphNodeStatus[GraphNodeStatus[\"Activated\"] = ACTIVATED_STATUS] = \"Activated\";\n  GraphNodeStatus[GraphNodeStatus[\"Editing\"] = 4] = \"Editing\";\n  GraphNodeStatus[GraphNodeStatus[\"ConnectedToSelected\"] = 8] = \"ConnectedToSelected\";\n  GraphNodeStatus[GraphNodeStatus[\"UnconnectedToSelected\"] = 16] = \"UnconnectedToSelected\";\n})(GraphNodeStatus || (GraphNodeStatus = {}));\nvar GraphPortStatus;\n(function (GraphPortStatus) {\n  GraphPortStatus[GraphPortStatus[\"Default\"] = EMPTY_STATUS] = \"Default\";\n  GraphPortStatus[GraphPortStatus[\"Selected\"] = SELECTED_STATUS] = \"Selected\";\n  GraphPortStatus[GraphPortStatus[\"Activated\"] = ACTIVATED_STATUS] = \"Activated\";\n  GraphPortStatus[GraphPortStatus[\"Connecting\"] = 4] = \"Connecting\";\n  GraphPortStatus[GraphPortStatus[\"ConnectingAsTarget\"] = 8] = \"ConnectingAsTarget\";\n})(GraphPortStatus || (GraphPortStatus = {}));\nconst updateStatus = updater => value => {\n  var _a;\n  const next = updater((_a = value.status) !== null && _a !== void 0 ? _a : 0);\n  if (next === value.status) {\n    return value;\n  }\n  return Object.assign(Object.assign({}, value), {\n    status: next\n  });\n};\nfunction isActivated(value) {\n  return has(ACTIVATED_STATUS)(value.status);\n}\nfunction isNodeEditing(node) {\n  return has(GraphNodeStatus.Editing)(node.status);\n}\nfunction isSelected(value) {\n  return has(SELECTED_STATUS)(value.status);\n}\nfunction notSelected(value) {\n  return !isSelected(value);\n}\nconst resetConnectStatus = mask => prevStatus => {\n  return (prevStatus || 0) & GraphNodeStatus.Activated | mask;\n};\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-ignore\nconst isDev = process.env.NODE_ENV !== \"production\";\n\n/* eslint-disable no-console */\n\nclass Debug {\n  static log(message) {\n    if (isDev) {\n      console.log(message);\n    }\n  }\n  static warn(message) {\n    if (isDev) {\n      console.warn(message);\n    }\n  }\n  static error(...args) {\n    // tslint:disable-next-line: no-console\n    console.error(...args);\n  }\n  static never(value, message) {\n    throw new Error(message !== null && message !== void 0 ? message : `${value} is unexpected`);\n  }\n}\nconst getNodeConfig = (node, graphConfig) => {\n  const nodeConfig = graphConfig.getNodeConfig(node);\n  if (!nodeConfig) {\n    Debug.warn(`invalid node ${JSON.stringify(node)}`);\n    return undefined;\n  }\n  return nodeConfig;\n};\n\n/**\r\n * @param rectConfig\r\n * @param rect\r\n */\n\nfunction getRectWidth(rectConfig, rect) {\n  var _a;\n  const minWidth = (_a = rectConfig === null || rectConfig === void 0 ? void 0 : rectConfig.getMinWidth(rect)) !== null && _a !== void 0 ? _a : 0;\n  if (rect.width && rect.width >= minWidth) {\n    return rect.width;\n  }\n  return minWidth;\n}\n/**\r\n * @param rectConfig\r\n * @param rect\r\n */\n\nfunction getRectHeight(rectConfig, rect) {\n  var _a;\n  const minHeight = (_a = rectConfig === null || rectConfig === void 0 ? void 0 : rectConfig.getMinHeight(rect)) !== null && _a !== void 0 ? _a : 0;\n  if (rect.height && rect.height >= minHeight) {\n    return rect.height;\n  }\n  return minHeight;\n}\n/**\r\n * get node height and width by graphConfig\r\n *\r\n * @param node the node to get the size\r\n * @param graphConfig type IGraphConfig\r\n */\n\nfunction getNodeSize(node, graphConfig) {\n  const nodeConfig = getNodeConfig(node, graphConfig);\n  const width = getRectWidth(nodeConfig, node);\n  const height = getRectHeight(nodeConfig, node);\n  return {\n    height,\n    width\n  };\n}\n/**\r\n * @param group\r\n * @param nodes\r\n * @param graphConfig\r\n */\n\nfunction getGroupRect(group, nodes, graphConfig) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n  const childrenIds = new Set(group.nodeIds);\n  const children = Array.from(nodes.values()).filter(node => childrenIds.has(node.id));\n  const minX = Math.min(...children.map(node => node.x));\n  const maxX = Math.max(...children.map(node => node.x + getNodeSize(node, graphConfig).width));\n  const minY = Math.min(...children.map(node => node.y));\n  const maxY = Math.max(...children.map(node => node.y + getNodeSize(node, graphConfig).height));\n  const x = minX - ((_b = (_a = group.padding) === null || _a === void 0 ? void 0 : _a.left) !== null && _b !== void 0 ? _b : 0);\n  const y = minY - ((_d = (_c = group.padding) === null || _c === void 0 ? void 0 : _c.top) !== null && _d !== void 0 ? _d : 0);\n  const height = maxY - y + ((_f = (_e = group.padding) === null || _e === void 0 ? void 0 : _e.bottom) !== null && _f !== void 0 ? _f : 0);\n  const width = maxX - x + ((_h = (_g = group.padding) === null || _g === void 0 ? void 0 : _g.left) !== null && _h !== void 0 ? _h : 0);\n  return {\n    x,\n    y,\n    width,\n    height\n  };\n}\n\n/**\r\n * https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\r\n */\nvar MouseEventButton;\n(function (MouseEventButton) {\n  /**\r\n   * usually the left button or the un-initialized state\r\n   */\n  MouseEventButton[MouseEventButton[\"Primary\"] = 0] = \"Primary\";\n  /**\r\n   * usually the wheel button or the middle button (if present)\r\n   */\n\n  MouseEventButton[MouseEventButton[\"Auxiliary\"] = 1] = \"Auxiliary\";\n  /**\r\n   * usually the right button\r\n   */\n\n  MouseEventButton[MouseEventButton[\"Secondary\"] = 2] = \"Secondary\";\n  /**\r\n   * typically the Browser Back button\r\n   */\n\n  MouseEventButton[MouseEventButton[\"Fourth\"] = 4] = \"Fourth\";\n  /**\r\n   * typically the Browser Forward button\r\n   */\n\n  MouseEventButton[MouseEventButton[\"Fifth\"] = 5] = \"Fifth\";\n})(MouseEventButton || (MouseEventButton = {}));\nvar MouseEventButtons;\n(function (MouseEventButtons) {\n  MouseEventButtons[MouseEventButtons[\"None\"] = 0] = \"None\";\n  MouseEventButtons[MouseEventButtons[\"Left\"] = 1] = \"Left\";\n  MouseEventButtons[MouseEventButtons[\"Right\"] = 2] = \"Right\";\n  MouseEventButtons[MouseEventButtons[\"Middle\"] = 4] = \"Middle\";\n})(MouseEventButtons || (MouseEventButtons = {}));\nconst DEFAULT_AUTO_ALIGN_THRESHOLD = 50;\nconst COPIED_NODE_SPACING = 50;\nconst NODE_MIN_VISIBLE_LENGTH = 5;\nconst NODE_MAX_VISIBLE_LENGTH = 500;\nconst defaultColors = {\n  controlPointColor: \"#333333\",\n  primaryColor: \"#0078D4\",\n  defaultColor: \"#CCCCCC\",\n  borderColor: \"#B3B0AD\",\n  defaultBorderColor: \"#FFFFFF\",\n  unConnectableBgColor: \"#E1DFDD\",\n  defaultBackgroundColor: \"#FFFFFF\",\n  portStroke: \"#ccc\",\n  portFill: \"#fff\",\n  connectedPortColor: \"gray\",\n  nodeActivateFill: \"#ffffff\",\n  nodeActivateStroke: \"#0078D4\",\n  nodeFill: \"#ffffff\",\n  nodeStroke: \"#cccccc\",\n  contextMenuBackground: \"#FFFFFF\",\n  contextMenuBorder: \"#E1DFDD\",\n  contextMenuHoverBackground: \"rgba(0, 120, 212, 0.05)\",\n  fontColor: \"#000000\",\n  canvasBackground: \"#EDEDED\",\n  minimapBackground: \"#EDEDED\",\n  edgeColor: \"#ccc\",\n  edgeColorSelected: \"#015cda\",\n  minimapShadow: \"#000000\",\n  outlineStyle: \"none\",\n  focusOutlineColor: \"#000000\",\n  dummyNodeStroke: \"#015cda\",\n  inputFocusBorderAlt: \"#0078d4\",\n  buttonBorder: \"#797775\",\n  scrollbarColor: \"#c8c8c8\"\n};\nconst RectComponent = props => {\n  const {\n    style,\n    node,\n    width,\n    height,\n    textY\n  } = props;\n  const comment = node.data && node.data.comment ? node.data.comment : \"\";\n  const isEditing = isNodeEditing(node);\n  return jsxs(\"g\", {\n    children: [jsx(\"rect\", {\n      width: width,\n      height: height,\n      x: node.x,\n      y: node.y,\n      style: style,\n      rx: style.borderRadius\n    }), jsx(\"text\", Object.assign({\n      x: node.x,\n      y: textY,\n      fontSize: 12\n    }, {\n      children: node.name\n    })), node.data && node.data.comment && !isEditing && jsx(\"text\", Object.assign({\n      x: node.x,\n      y: textY + 20,\n      fontSize: 12,\n      className: `comment-${node.id}`\n    }, {\n      children: node.data.comment\n    })), isEditing && jsx(\"foreignObject\", Object.assign({\n      x: node.x,\n      y: textY,\n      height: height / 2.5,\n      width: width - 5\n    }, {\n      children: jsx(\"input\", {\n        value: comment,\n        placeholder: \"Input your comment here\"\n      })\n    }))]\n  }, node.id);\n};\nconst rect = {\n  getMinHeight() {\n    return 150;\n  },\n  getMinWidth() {\n    return 150;\n  },\n  render(args) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const node = args.model;\n    const width = getRectWidth(rect, node);\n    const height = getRectHeight(rect, node);\n    const style = has(GraphNodeStatus.Selected | GraphNodeStatus.Activated)(node.status) ? {\n      fill: defaultColors.nodeActivateFill,\n      stroke: defaultColors.nodeActivateStroke\n    } : {\n      fill: defaultColors.nodeFill,\n      fillOpacity: 0.1,\n      stroke: defaultColors.nodeStroke,\n      borderRadius: \"5\"\n    };\n    const textY = node.y + height / 3;\n    return jsx(RectComponent, {\n      style: style,\n      node: node,\n      width: width,\n      height: height,\n      textY: textY\n    });\n  }\n};\nconst getCurvePathD = (x1, x2, y1, y2) => {\n  // The ports are even width in px. and paths are 2 px. wide. We therefore subtract 1 from the HalfWidth to have them appear centered -- center of the path lines up with center of the port.\n  return `M${x1},${y1}C${x1},${y1 - getControlPointDistance(y1, y2)},${x2},${y2 + 5 + getControlPointDistance(y1, y2)},${x2},${y2 + 5}`;\n};\nconst getControlPointDistance = (y1, y2) => {\n  return Math.min(5 * 15,\n  // 5 is port height\n  Math.max(5 * 3, Math.abs((y1 - (y2 + 5)) / 2)));\n};\nconst line = {\n  render(args) {\n    const edge = args.model;\n    const style = {\n      cursor: \"crosshair\",\n      stroke: has(GraphEdgeStatus.Selected)(edge.status) ? defaultColors.edgeColorSelected : defaultColors.edgeColor,\n      strokeWidth: \"2\"\n    };\n    return jsx(\"path\", {\n      d: getCurvePathD(args.x2, args.x1, args.y2, args.y1),\n      fill: \"none\",\n      style: style,\n      id: `edge${edge.id}`\n    }, edge.id);\n  }\n};\nclass DefaultPort {\n  getStyle(port, _parentNode, _data, connectedAsSource, connectedAsTarget) {\n    const stroke = defaultColors.portStroke;\n    let fill = defaultColors.portFill;\n    if (connectedAsSource || connectedAsTarget) {\n      fill = defaultColors.connectedPortColor;\n    }\n    if (has(GraphPortStatus.Activated)(port.status)) {\n      fill = defaultColors.primaryColor;\n    }\n    return {\n      stroke,\n      fill\n    };\n  }\n  getIsConnectable() {\n    return true;\n  }\n  render(args) {\n    const {\n      model: port,\n      data,\n      parentNode\n    } = args;\n    const connectedAsSource = data.isPortConnectedAsSource(parentNode.id, port.id);\n    const connectedAsTarget = data.isPortConnectedAsTarget(parentNode.id, port.id);\n    const style = this.getStyle(port, parentNode, data, connectedAsSource, connectedAsTarget);\n    const {\n      x,\n      y\n    } = args;\n    const polygonPoints = `${x - 5} ${y}, ${x + 7} ${y}, ${x + 1} ${y + 8}`;\n    return connectedAsTarget ? jsx(\"polygon\", {\n      points: polygonPoints,\n      style: style\n    }) : jsx(\"circle\", {\n      r: 5,\n      cx: x,\n      cy: y,\n      style: style\n    }, `${args.parentNode.id}-${args.model.id}`);\n  }\n}\nconst defaultPort = new DefaultPort();\nclass DefaultClipboard {\n  constructor(storage) {\n    this.storage = storage;\n  }\n  write(data) {\n    this.storage.setItem(\"graph-clipboard\", JSON.stringify({\n      nodes: data.nodes.map(n => Object.assign(Object.assign({}, n), {\n        data: {}\n      })),\n      edges: data.edges.map(e => Object.assign(Object.assign({}, e), {\n        data: {}\n      }))\n    }));\n  }\n  read() {\n    const str = this.storage.getItem(\"graph-clipboard\");\n    if (!str) {\n      return null;\n    }\n    try {\n      const data = JSON.parse(str);\n      const nodeIdHash = new Map();\n      return {\n        nodes: data.nodes.map(n => {\n          const newId = uuid.v4();\n          nodeIdHash.set(n.id, newId);\n          return Object.assign(Object.assign({}, n), {\n            x: n.x + COPIED_NODE_SPACING,\n            y: n.y + COPIED_NODE_SPACING,\n            id: newId\n          });\n        }),\n        edges: data.edges.map(e => Object.assign(Object.assign({}, e), {\n          id: uuid.v4(),\n          source: nodeIdHash.get(e.source) || \"\",\n          target: nodeIdHash.get(e.target) || \"\"\n        }))\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n}\nclass DefaultStorage {\n  get length() {\n    return this.items.size;\n  }\n  constructor() {\n    this.key = () => \"DefaultLocalStorage\";\n    this.items = new Map();\n  }\n  clear() {\n    this.items = new Map();\n  }\n  setItem(key, data) {\n    this.items.set(key, data);\n  }\n  getItem(key) {\n    if (!this.items.has(key)) {\n      return null;\n    }\n    return this.items.get(key);\n  }\n  removeItem(key) {\n    this.items.delete(key);\n  }\n}\nfunction applyDefaultPortsPosition(list) {\n  const inputPorts = list.filter(p => !p.isInputDisabled);\n  const outputPorts = list.filter(p => p.isInputDisabled);\n  const inputPortsCount = inputPorts.length;\n  const outputPortsCount = outputPorts.length;\n  const inputPortsInterval = 1 / (inputPortsCount + 1);\n  const outputPortsInterval = 1 / (outputPortsCount + 1);\n  const res = [];\n  for (let i = 0; i < inputPortsCount; i += 1) {\n    res.push(Object.assign(Object.assign({}, inputPorts[i]), {\n      position: [(i + 1) * inputPortsInterval, 0]\n    }));\n  }\n  for (let i = 0; i < outputPortsCount; i += 1) {\n    const port = outputPorts[i];\n    res.push(Object.assign(Object.assign({}, port), {\n      position: [(i + 1) * outputPortsInterval, 1]\n    }));\n  }\n  return res;\n}\nfunction applyHorizontalGraphPortsPosition(list) {\n  const inputPorts = list.filter(p => !p.isInputDisabled);\n  const outputPorts = list.filter(p => !p.isOutputDisabled);\n  const inputPortsCount = inputPorts.length;\n  const outputPortsCount = outputPorts.length;\n  const inputPortsInterval = 1 / (inputPortsCount + 1);\n  const outputPortsInterval = 1 / (outputPortsCount + 1);\n  const res = [];\n  for (let i = 0; i < inputPortsCount; i += 1) {\n    res.push(Object.assign(Object.assign({}, inputPorts[i]), {\n      position: [0, (i + 1) * inputPortsInterval]\n    }));\n  }\n  for (let i = 0; i < outputPortsCount; i += 1) {\n    res.push(Object.assign(Object.assign({}, outputPorts[i]), {\n      position: [1, (i + 1) * outputPortsInterval]\n    }));\n  }\n  return res;\n}\nclass GraphConfigBuilder {\n  constructor() {\n    const storage = new DefaultStorage();\n    const defaultClipboard = new DefaultClipboard(storage);\n    this.draft = {\n      getNodeConfig: () => rect,\n      getEdgeConfig: () => line,\n      getPortConfig: () => defaultPort,\n      getGroupConfig: () => undefined,\n      getClipboard: () => defaultClipboard\n    };\n  }\n  static default() {\n    return new GraphConfigBuilder();\n  }\n  static from(graphConfig) {\n    return new GraphConfigBuilder().registerNode(graphConfig.getNodeConfig.bind(graphConfig)).registerEdge(graphConfig.getEdgeConfig.bind(graphConfig)).registerPort(graphConfig.getPortConfig.bind(graphConfig)).registerGroup(graphConfig.getGroupConfig.bind(graphConfig)).registerClipboard(graphConfig.getClipboard.bind(graphConfig));\n  }\n  registerNode(getConfig) {\n    this.draft.getNodeConfig = getConfig;\n    return this;\n  }\n  registerEdge(getConfig) {\n    this.draft.getEdgeConfig = getConfig;\n    return this;\n  }\n  registerPort(getConfig) {\n    this.draft.getPortConfig = getConfig;\n    return this;\n  }\n  registerGroup(getConfig) {\n    this.draft.getGroupConfig = getConfig;\n    return this;\n  }\n  registerClipboard(getClipboard) {\n    this.draft.getClipboard = getClipboard;\n    return this;\n  }\n  build() {\n    return this.draft;\n  }\n}\nconst GraphConfigContext = /*#__PURE__*/createContext(GraphConfigBuilder.default().build());\nvar MenuType;\n(function (MenuType) {\n  MenuType[\"Node\"] = \"node\";\n  MenuType[\"Edge\"] = \"edge\";\n  MenuType[\"Port\"] = \"port\";\n  MenuType[\"Canvas\"] = \"canvas\";\n  MenuType[\"Multi\"] = \"multi\";\n})(MenuType || (MenuType = {}));\nclass ContextMenuConfig {\n  constructor() {\n    this.contextMenu = new Map();\n  }\n  registerContextMenu(props) {\n    this.contextMenuProps = Object.assign({}, props);\n  }\n  registerMenu(element, menuType) {\n    this.contextMenu.set(menuType, element);\n  }\n  getMenu(menuType) {\n    if (this.contextMenuProps && this.contextMenu.has(menuType)) {\n      const {\n        className,\n        styles\n      } = this.contextMenuProps;\n      const reactElement = /*#__PURE__*/React.createElement(\"div\", {\n        className,\n        style: styles\n      }, this.contextMenu.get(menuType));\n      return reactElement;\n    }\n    return null;\n  }\n}\nconst ContextMenuConfigContext = /*#__PURE__*/React.createContext(new ContextMenuConfig());\nconst emptySelectBoxPosition = () => ({\n  startX: 0,\n  startY: 0,\n  height: 0,\n  width: 0\n});\nconst SelectBox = props => {\n  const {\n    selectBoxPosition,\n    style\n  } = props;\n  const selectBoxD = `m${selectBoxPosition.startX} ${selectBoxPosition.startY} v ${selectBoxPosition.height} h ${selectBoxPosition.width} v${-selectBoxPosition.height} h ${-selectBoxPosition.width}`;\n  const pathStyle = style !== null && style !== void 0 ? style : {\n    fill: \"none\",\n    stroke: defaultColors.defaultColor\n  };\n  return jsx(\"path\", {\n    style: pathStyle,\n    d: selectBoxD\n  });\n};\nvar GraphFeatures;\n(function (GraphFeatures) {\n  GraphFeatures[\"NodeDraggable\"] = \"nodeDraggable\";\n  GraphFeatures[\"NodeResizable\"] = \"nodeResizable\";\n  GraphFeatures[\"ClickNodeToSelect\"] = \"clickNodeToSelect\";\n  GraphFeatures[\"PanCanvas\"] = \"panCanvas\";\n  GraphFeatures[\"MultipleSelect\"] = \"multipleSelect\";\n  GraphFeatures[\"LassoSelect\"] = \"lassoSelect\";\n  GraphFeatures[\"Delete\"] = \"delete\";\n  GraphFeatures[\"AddNewNodes\"] = \"addNewNodes\";\n  GraphFeatures[\"AddNewEdges\"] = \"addNewEdges\";\n  GraphFeatures[\"AddNewPorts\"] = \"addNewPorts\";\n  GraphFeatures[\"AutoFit\"] = \"autoFit\";\n  GraphFeatures[\"CanvasHorizontalScrollable\"] = \"canvasHorizontalScrollable\";\n  GraphFeatures[\"CanvasVerticalScrollable\"] = \"canvasVerticalScrollable\";\n  GraphFeatures[\"NodeHoverView\"] = \"nodeHoverView\";\n  GraphFeatures[\"PortHoverView\"] = \"portHoverView\";\n  GraphFeatures[\"AddEdgesByKeyboard\"] = \"addEdgesByKeyboard\";\n  GraphFeatures[\"A11yFeatures\"] = \"a11YFeatures\";\n  GraphFeatures[\"EditNode\"] = \"editNode\";\n  GraphFeatures[\"AutoAlign\"] = \"autoAlign\";\n  GraphFeatures[\"UndoStack\"] = \"undoStack\";\n  GraphFeatures[\"CtrlKeyZoom\"] = \"ctrlKeyZoom\";\n  GraphFeatures[\"LimitBoundary\"] = \"limitBoundary\";\n  GraphFeatures[\"EditEdge\"] = \"editEdge\";\n  GraphFeatures[\"InvisibleScrollbar\"] = \"InvisibleScrollbar\";\n})(GraphFeatures || (GraphFeatures = {}));\nconst allFeatures = new Set([GraphFeatures.NodeDraggable, GraphFeatures.NodeResizable, GraphFeatures.ClickNodeToSelect, GraphFeatures.PanCanvas, GraphFeatures.MultipleSelect, GraphFeatures.LassoSelect, GraphFeatures.Delete, GraphFeatures.AddNewNodes, GraphFeatures.AddNewEdges, GraphFeatures.AddNewPorts, GraphFeatures.CanvasHorizontalScrollable, GraphFeatures.CanvasVerticalScrollable, GraphFeatures.NodeHoverView, GraphFeatures.PortHoverView, GraphFeatures.AddEdgesByKeyboard, GraphFeatures.A11yFeatures, GraphFeatures.AutoFit, GraphFeatures.EditNode, GraphFeatures.AutoAlign, GraphFeatures.UndoStack, GraphFeatures.CtrlKeyZoom, GraphFeatures.LimitBoundary, GraphFeatures.EditEdge]);\nconst defaultFeatures = new Set([GraphFeatures.NodeDraggable, GraphFeatures.NodeResizable, GraphFeatures.ClickNodeToSelect, GraphFeatures.PanCanvas, GraphFeatures.MultipleSelect, GraphFeatures.Delete, GraphFeatures.AddNewNodes, GraphFeatures.AddNewEdges, GraphFeatures.AddNewPorts, GraphFeatures.CanvasHorizontalScrollable, GraphFeatures.CanvasVerticalScrollable, GraphFeatures.NodeHoverView, GraphFeatures.PortHoverView, GraphFeatures.AddEdgesByKeyboard, GraphFeatures.A11yFeatures, GraphFeatures.EditNode, GraphFeatures.AutoAlign, GraphFeatures.UndoStack, GraphFeatures.CtrlKeyZoom, GraphFeatures.LimitBoundary]);\nconst dataReadonlyMode = new Set([GraphFeatures.NodeDraggable, GraphFeatures.NodeResizable, GraphFeatures.ClickNodeToSelect, GraphFeatures.PanCanvas, GraphFeatures.MultipleSelect, GraphFeatures.CanvasHorizontalScrollable, GraphFeatures.CanvasVerticalScrollable, GraphFeatures.NodeHoverView, GraphFeatures.PortHoverView, GraphFeatures.A11yFeatures, GraphFeatures.CtrlKeyZoom, GraphFeatures.LimitBoundary]);\nconst GanttChartFeatures = new Set([GraphFeatures.ClickNodeToSelect, GraphFeatures.CanvasHorizontalScrollable, GraphFeatures.CanvasVerticalScrollable, GraphFeatures.NodeHoverView, GraphFeatures.PortHoverView, GraphFeatures.A11yFeatures, GraphFeatures.LassoSelect, GraphFeatures.LimitBoundary]);\nconst previewMode = new Set([GraphFeatures.NodeHoverView, GraphFeatures.PortHoverView, GraphFeatures.AutoFit]);\nconst emptyDummyNodes = () => ({\n  dx: 0,\n  dy: 0,\n  dWidth: 0,\n  dHeight: 0,\n  alignedDX: undefined,\n  alignedDY: undefined,\n  nodes: [],\n  isVisible: false\n});\nconst is$1 = Object.is;\nclass MapIterator {\n  constructor(upstream, f) {\n    this.upstream = upstream;\n    this.f = f;\n  }\n  [Symbol.iterator]() {\n    return this;\n  }\n  next() {\n    const next = this.upstream.next();\n    if (next.done) {\n      return next;\n    }\n    return {\n      done: false,\n      value: this.f(next.value)\n    };\n  }\n}\n\n/* eslint-disable no-param-reassign */\nvar NodeType$1;\n(function (NodeType) {\n  NodeType[NodeType[\"Bitmap\"] = 0] = \"Bitmap\";\n  NodeType[NodeType[\"Collision\"] = 1] = \"Collision\";\n})(NodeType$1 || (NodeType$1 = {}));\nconst HASH_CODE_LENGTH = 30;\nconst BIT_PARTITION_SIZE = 5;\nconst FULL_MASK = 0x3fffffff;\n/**\r\n * @param mask\r\n */\n\nfunction bitPosFrom(mask) {\n  return 1 << mask;\n}\n/**\r\n * @param bitmap\r\n * @param mask\r\n * @param bitPos\r\n */\n\nfunction indexFrom(bitmap, mask, bitPos) {\n  return bitmap === FULL_MASK ? mask : bitCount(bitmap & bitPos - 1);\n}\n/**\r\n * @param hash\r\n * @param shift\r\n */\n\nfunction maskFrom(hash, shift) {\n  return hash >>> shift & 0b11111;\n}\n/**\r\n * https://jsperf.com/hamming-weight/19\r\n *\r\n * @param x uint32\r\n */\n\nfunction bitCount(x) {\n  x |= 0;\n  x -= x >>> 1 & 0x55555555; // put count of each 2 bits into those 2 bits\n\n  x = (x & 0x33333333) + (x >>> 2 & 0x33333333); // put count of each 4 bits into those 4 bits\n\n  x = x + (x >>> 4) & 0x0f0f0f0f; // put count of each 8 bits into those 8 bits\n\n  x += x >>> 8; // put count of each 16 bits into their lowest 8 bits\n\n  x += x >>> 16; // put count of each 32 bits into their lowest 8 bits\n\n  return x & 0x7f;\n} // tslint:enable:no-parameter-reassignment comment-format\n\nclass BitmapIndexedNode {\n  get valueCount() {\n    return this.values.length;\n  }\n  get nodeCount() {\n    return this.children.length;\n  }\n  constructor(owner, dataMap, nodeMap, keys, values, children, hashes, size) {\n    this.type = NodeType$1.Bitmap;\n    this.owner = owner;\n    this.dataMap = dataMap;\n    this.nodeMap = nodeMap;\n    this.keys = keys;\n    this.values = values;\n    this.children = children;\n    this.hashes = hashes;\n    this.size = size;\n  }\n  static empty(owner) {\n    return new BitmapIndexedNode(owner, 0, 0, [], [], [], [], 0);\n  }\n  getKey(index) {\n    return this.keys[index];\n  }\n  getValue(index) {\n    return this.values[index];\n  }\n  getHash(index) {\n    return this.hashes[index];\n  }\n  getNode(index) {\n    return this.children[index];\n  }\n  contains(key, keyHash, shift) {\n    const mask = maskFrom(keyHash, shift);\n    const bitPos = bitPosFrom(mask);\n    const {\n      dataMap,\n      nodeMap\n    } = this;\n    if ((dataMap & bitPos) !== 0) {\n      const index = indexFrom(dataMap, mask, bitPos);\n      const key0 = this.getKey(index);\n      return is$1(key0, key);\n    } else if ((nodeMap & bitPos) !== 0) {\n      const index = indexFrom(nodeMap, mask, bitPos);\n      return this.getNode(index).contains(key, keyHash, shift + BIT_PARTITION_SIZE);\n    }\n    return false;\n  }\n  get(key, keyHash, shift) {\n    const mask = maskFrom(keyHash, shift);\n    const bitPos = bitPosFrom(mask);\n    const {\n      dataMap,\n      nodeMap\n    } = this;\n    if ((dataMap & bitPos) !== 0) {\n      const index = indexFrom(dataMap, mask, bitPos);\n      const key0 = this.getKey(index);\n      return is$1(key0, key) ? this.getValue(index) : undefined;\n    } else if ((nodeMap & bitPos) !== 0) {\n      const index = indexFrom(nodeMap, mask, bitPos);\n      return this.getNode(index).get(key, keyHash, shift + BIT_PARTITION_SIZE);\n    }\n    return undefined;\n  }\n  insert(owner, key, value, hash, shift) {\n    const mask = maskFrom(hash, shift);\n    const bitPos = bitPosFrom(mask);\n    const {\n      dataMap,\n      nodeMap\n    } = this;\n    if ((dataMap & bitPos) !== 0) {\n      const index = indexFrom(dataMap, mask, bitPos);\n      const key0 = this.getKey(index);\n      const value0 = this.getValue(index);\n      const key0Hash = this.getHash(index);\n      if (key0Hash === hash && is$1(key0, key)) {\n        return is$1(value0, value) ? this : this.setValue(owner, value, index);\n      } else {\n        const subNodeNew = mergeTwoKeyValPairs(owner, key0, value0, key0Hash, key, value, hash, shift + BIT_PARTITION_SIZE);\n        return this.migrateInlineToNode(owner, bitPos, subNodeNew);\n      }\n    } else if ((nodeMap & bitPos) !== 0) {\n      const index = indexFrom(nodeMap, mask, bitPos);\n      const subNode = this.getNode(index);\n      const subNodeNew = subNode.insert(owner, key, value, hash, shift + BIT_PARTITION_SIZE);\n      return this.setNode(owner, 1, subNodeNew, bitPos);\n    }\n    return this.insertValue(owner, bitPos, key, hash, value);\n  }\n  update(owner, key, updater, hash, shift) {\n    const mask = maskFrom(hash, shift);\n    const bitPos = bitPosFrom(mask);\n    const {\n      dataMap,\n      nodeMap\n    } = this;\n    if ((dataMap & bitPos) !== 0) {\n      const index = indexFrom(dataMap, mask, bitPos);\n      const key0 = this.getKey(index);\n      const key0Hash = this.getHash(index);\n      if (key0Hash === hash && is$1(key0, key)) {\n        const value0 = this.getValue(index);\n        const value = updater(value0);\n        return is$1(value0, value) ? this : this.setValue(owner, value, index);\n      }\n    } else if ((nodeMap & bitPos) !== 0) {\n      const index = indexFrom(nodeMap, mask, bitPos);\n      const subNode = this.getNode(index);\n      const subNodeNew = subNode.update(owner, key, updater, hash, shift + BIT_PARTITION_SIZE);\n      return subNodeNew === subNode ? this : this.setNode(owner, 0, subNodeNew, bitPos);\n    }\n    return this;\n  }\n  remove(owner, key, keyHash, shift) {\n    const mask = maskFrom(keyHash, shift);\n    const bitPos = bitPosFrom(mask);\n    if ((this.dataMap & bitPos) !== 0) {\n      const index = indexFrom(this.dataMap, mask, bitPos);\n      const key0 = this.getKey(index);\n      if (is$1(key0, key)) {\n        return this.removeValue(owner, bitPos);\n      }\n      return undefined;\n    } else if ((this.nodeMap & bitPos) !== 0) {\n      const index = indexFrom(this.nodeMap, mask, bitPos);\n      const subNode = this.getNode(index);\n      const remove = subNode.remove(owner, key, keyHash, shift + BIT_PARTITION_SIZE);\n      if (remove === undefined) {\n        return undefined;\n      }\n      const [subNodeNew, removedValue] = remove;\n      const subNodeNewSize = subNodeNew.size;\n      if (subNodeNewSize === 1) {\n        if (this.size === subNode.size) {\n          return [new BitmapIndexedNode(owner, bitPos, 0, [subNodeNew.getKey(0)], [subNodeNew.getValue(0)], [], [subNodeNew.getHash(0)], 1), removedValue];\n        }\n        return [this.migrateNodeToInline(owner, bitPos, subNodeNew), removedValue];\n      }\n      return [this.setNode(owner, -1, subNodeNew, bitPos), removedValue];\n    }\n    return undefined;\n  }\n  toOwned(owner) {\n    return this.owner === owner ? this : new BitmapIndexedNode(owner, this.dataMap, this.nodeMap, this.keys.slice(), this.values.slice(), this.children.slice(), this.hashes.slice(), this.size);\n  }\n  iter() {\n    return new BitmapIndexedNodeIterator(this);\n  }\n  map(owner, f) {\n    const valueCount = this.valueCount;\n    const keys = [];\n    const values = [];\n    const children = [];\n    let same = true;\n    for (let i = 0; i < valueCount; i += 1) {\n      const key = this.getKey(i);\n      const value0 = this.getValue(i);\n      const value = f(value0, key);\n      same = same && is$1(value0, value);\n      keys.push(key);\n      values.push(value);\n    }\n    for (let i = 0; i < this.children.length; i += 1) {\n      const node0 = this.getNode(i);\n      const node = node0.map(owner, f);\n      same = same && node === node0;\n      children.push(node);\n    }\n    return same ? this : new BitmapIndexedNode(owner, this.dataMap, this.nodeMap, keys, values, children, this.hashes, this.size);\n  }\n  forEach(f) {\n    for (let i = 0; i < this.values.length; i += 1) {\n      const key = this.getKey(i);\n      const value = this.getValue(i);\n      f(value, key);\n    }\n    for (let i = 0; i < this.children.length; i += 1) {\n      const child = this.getNode(i);\n      child.forEach(f);\n    }\n  }\n  find(predicate) {\n    for (let i = 0; i < this.values.length; i += 1) {\n      const value = this.getValue(i);\n      if (predicate(value)) {\n        return value;\n      }\n    }\n    for (let i = 0; i < this.children.length; i += 1) {\n      const child = this.getNode(i);\n      const found = child.find(predicate);\n      if (found) {\n        return found;\n      }\n    }\n    return undefined;\n  }\n  dataIndex(bitPos) {\n    return bitCount(this.dataMap & bitPos - 1);\n  }\n  nodeIndex(bitPos) {\n    return bitCount(this.nodeMap & bitPos - 1);\n  }\n  setValue(owner, value, index) {\n    const next = this.toOwned(owner);\n    next.values[index] = value;\n    return next;\n  }\n  insertValue(owner, bitPos, key, originalHash, value) {\n    const index = this.dataIndex(bitPos);\n    const next = this.toOwned(owner);\n    next.size += 1;\n    next.dataMap |= bitPos;\n    next.keys.splice(index, 0, key);\n    next.values.splice(index, 0, value);\n    next.hashes.splice(index, 0, originalHash);\n    return next;\n  }\n  migrateInlineToNode(owner, bitPos, child) {\n    const indexOld = this.dataIndex(bitPos);\n    const indexNew = this.nodeIndex(bitPos);\n    const next = this.toOwned(owner);\n    next.dataMap ^= bitPos;\n    next.nodeMap |= bitPos;\n    next.keys.splice(indexOld, 1);\n    next.values.splice(indexOld, 1);\n    next.children.splice(indexNew, 0, child);\n    next.hashes.splice(indexOld, 1);\n    next.size += 1;\n    return next;\n  }\n  migrateNodeToInline(owner, bitPos, node) {\n    const indexOld = this.nodeIndex(bitPos);\n    const indexNew = this.dataIndex(bitPos);\n    const key = node.getKey(0);\n    const value = node.getValue(0);\n    const hash = node.getHash(0);\n    const next = this.toOwned(owner);\n    next.dataMap = next.dataMap | bitPos;\n    next.nodeMap = next.nodeMap ^ bitPos;\n    next.children.splice(indexOld, 1);\n    next.keys.splice(indexNew, 0, key);\n    next.values.splice(indexNew, 0, value);\n    next.size -= 1;\n    next.hashes.splice(indexNew, 0, hash);\n    return next;\n  }\n  setNode(owner, sizeDelta, newNode, bitPos) {\n    const index = this.nodeIndex(bitPos);\n    const next = this.toOwned(owner);\n    next.children[index] = newNode;\n    next.size = next.size + sizeDelta;\n    return next;\n  }\n  removeValue(owner, bitPos) {\n    const index = this.dataIndex(bitPos);\n    const value = this.getValue(index);\n    const next = this.toOwned(owner);\n    next.dataMap ^= bitPos;\n    next.keys.splice(index, 1);\n    next.values.splice(index, 1);\n    next.hashes.splice(index, 1);\n    next.size -= 1;\n    return [next, value];\n  }\n}\n/**\r\n * @param owner\r\n * @param key0\r\n * @param value0\r\n * @param keyHash0\r\n * @param key1\r\n * @param value1\r\n * @param keyHash1\r\n * @param shift\r\n */\n\nfunction mergeTwoKeyValPairs(owner, key0, value0, keyHash0, key1, value1, keyHash1, shift) {\n  if (shift >= HASH_CODE_LENGTH) {\n    return new HashCollisionNode(owner, keyHash0, [key0, key1], [value0, value1]);\n  } else {\n    const mask0 = maskFrom(keyHash0, shift);\n    const mask1 = maskFrom(keyHash1, shift);\n    if (mask0 !== mask1) {\n      const dataMap = bitPosFrom(mask0) | bitPosFrom(mask1);\n      if (mask0 < mask1) {\n        return new BitmapIndexedNode(owner, dataMap, 0, [key0, key1], [value0, value1], [], [keyHash0, keyHash1], 2);\n      }\n      return new BitmapIndexedNode(owner, dataMap, 0, [key1, key0], [value1, value0], [], [keyHash1, keyHash0], 2);\n    } else {\n      const nodeMap = bitPosFrom(mask0);\n      const node = mergeTwoKeyValPairs(owner, key0, value0, keyHash0, key1, value1, keyHash1, shift + BIT_PARTITION_SIZE);\n      return new BitmapIndexedNode(owner, 0, nodeMap, [], [], [node], [], node.size);\n    }\n  }\n}\nclass HashCollisionNode {\n  get size() {\n    return this.keys.length;\n  }\n  constructor(owner, hash, keys, values) {\n    this.type = NodeType$1.Collision;\n    this.owner = owner;\n    this.hash = hash;\n    this.keys = keys;\n    this.values = values;\n  }\n  toOwned(owner) {\n    return this.owner === owner ? this : new HashCollisionNode(owner, this.hash, this.keys.slice(), this.values.slice());\n  }\n  contains(key) {\n    return this.keys.includes(key);\n  }\n  get(key) {\n    const index = this.keys.findIndex(it => is$1(it, key));\n    return index >= 0 ? this.values[index] : undefined;\n  }\n  insert(owner, key, value) {\n    const index = this.keys.findIndex(it => is$1(it, key));\n    if (index >= 0) {\n      const value0 = this.values[index];\n      if (is$1(value0, value)) {\n        return this;\n      }\n      const next = this.toOwned(owner);\n      next.values[index] = value;\n      return next;\n    } else {\n      const next = this.toOwned(owner);\n      next.keys.push(key);\n      next.values.push(value);\n      return next;\n    }\n  }\n  update(owner, key, updater) {\n    const index = this.keys.findIndex(it => is$1(it, key));\n    if (index >= 0) {\n      const value0 = this.values[index];\n      const value = updater(value0);\n      if (is$1(value0, value)) {\n        return this;\n      }\n      const next = this.toOwned(owner);\n      next.values[index] = value;\n      return next;\n    }\n    return this;\n  }\n  remove(owner, key) {\n    const index = this.keys.findIndex(it => is$1(it, key));\n    if (index === -1) {\n      return undefined;\n    }\n    const value = this.getValue(index);\n    return [new HashCollisionNode(owner, this.hash, this.keys.filter((_, i) => i !== index), this.values.filter((_, i) => i !== index)), value];\n  }\n  getKey(index) {\n    return this.keys[index];\n  }\n  getValue(index) {\n    return this.values[index];\n  }\n  getHash() {\n    return this.hash;\n  }\n  iter() {\n    return new HashCollisionNodeIterator(this);\n  }\n  map(owner, f) {\n    const len = this.size;\n    const values = [];\n    let update = false;\n    for (let i = 0; i < len; i += 1) {\n      const key = this.getKey(i);\n      const value0 = this.getValue(i);\n      const value = f(value0, key);\n      values.push(value);\n      update = is$1(value0, value);\n    }\n    return update ? new HashCollisionNode(owner, this.hash, this.keys, values) : this;\n  }\n  forEach(f) {\n    const len = this.size;\n    for (let i = 0; i < len; i += 1) {\n      const key = this.getKey(i);\n      const value0 = this.getValue(i);\n      f(value0, key);\n    }\n  }\n  find(predicate) {\n    return this.values.find(predicate);\n  }\n}\nclass BitmapIndexedNodeIterator {\n  constructor(node) {\n    this.index = 0;\n    this.delegate = null;\n    this.done = false;\n    this.node = node;\n    this.valueCount = node.valueCount;\n    this.nodeCount = node.nodeCount;\n    this.size = this.valueCount + this.nodeCount;\n  }\n  [Symbol.iterator]() {\n    return this.clone();\n  }\n  next() {\n    if (this.done) {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n    if (this.index < this.valueCount) {\n      const key = this.node.getKey(this.index);\n      const value = this.node.getValue(this.index);\n      this.index += 1;\n      return {\n        done: false,\n        value: [key, value]\n      };\n    }\n    if (this.index < this.size) {\n      if (this.delegate === null) {\n        this.delegate = this.node.getNode(this.index - this.valueCount).iter();\n      }\n      const next = this.delegate.next();\n      if (next.done) {\n        this.index += 1;\n        this.delegate = null;\n        return this.next();\n      }\n      return next;\n    }\n    this.done = true;\n    return {\n      done: true,\n      value: undefined\n    };\n  }\n  clone() {\n    const iter = new BitmapIndexedNodeIterator(this.node);\n    iter.index = this.index;\n    iter.delegate = this.delegate;\n    iter.done = this.done;\n    return iter;\n  }\n}\nclass HashCollisionNodeIterator {\n  constructor(node) {\n    this.index = 0;\n    this.node = node;\n  }\n  [Symbol.iterator]() {\n    return this.clone();\n  }\n  next() {\n    if (this.index >= this.node.size) {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n    const key = this.node.getKey(this.index);\n    const value = this.node.getValue(this.index);\n    this.index += 1;\n    return {\n      done: false,\n      value: [key, value]\n    };\n  }\n  clone() {\n    const iter = new HashCollisionNodeIterator(this.node);\n    iter.index = this.index;\n    return iter;\n  }\n}\n\n/* eslint-disable no-plusplus */\n\n/**\r\n * keep the hash function the same as immutable.js\r\n *\r\n * @param o\r\n */\nfunction hashing(o) {\n  if (o === null) {\n    return 0x42108422;\n  }\n  switch (typeof o) {\n    case \"boolean\":\n      // The hash values for built-in constants are a 1 value for each 5-byte\n      // shift region expect for the first, which encodes the value. This\n      // reduces the odds of a hash collision for these common values.\n      return o ? 0x32108421 : 0x32108420;\n    case \"number\":\n      return hashNumber(o);\n    case \"string\":\n      return hashString(o);\n    case \"object\":\n    case \"function\":\n    case \"symbol\":\n      throw new Error(\"Using object, function and symbol as hash map key is not supported\");\n    case \"undefined\":\n      return 0x32108423;\n    default:\n      return hashString(String(o));\n  }\n} // http://jsperf.com/hashing-strings\n\n/**\r\n * @param str\r\n */\n\nfunction hashString(str) {\n  // This is the hash from JVM\n  // The hash code for a string is computed as\n  // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n  // where s[i] is the ith character of the string and n is the length of\n  // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n  // (exclusive) by dropping high bits.\n  let hashed = 0;\n  for (let ii = 0; ii < str.length; ii++) {\n    hashed = hashed * 31 + str.charCodeAt(ii) | 0;\n  }\n  return smi(hashed);\n}\n/**\r\n * @param n\r\n */\n\nfunction hashNumber(n) {\n  if (!isFinite(n)) {\n    return 0;\n  }\n  let hash = n | 0;\n  if (hash !== n) {\n    hash ^= n * 0xffffffff;\n  }\n  while (n > 0xffffffff) {\n    // eslint-disable-next-line no-param-reassign\n    n /= 0xffffffff;\n    hash ^= n;\n  }\n  return smi(hash);\n}\n/**\r\n * retain 30 bits of number\r\n *\r\n * @param value\r\n */\n\nfunction smi(value) {\n  return value & 0x3fffffff;\n}\nclass Uid {\n  constructor() {\n    this.id = 0;\n  }\n  take() {\n    this.id += 1;\n    return this.id;\n  }\n  peek() {\n    return this.id + 1;\n  }\n}\n\n/* eslint-disable max-classes-per-file */\nconst uid$1 = new Uid();\nclass HashMap {\n  get size() {\n    return this.root.size;\n  }\n  /**\r\n   * @param root\r\n   * @internal\r\n   */\n\n  constructor(root) {\n    this.id = uid$1.take();\n    this.root = root;\n  }\n  static empty() {\n    return HashMapBuilder.empty().finish();\n  }\n  static from(iterable) {\n    return HashMapBuilder.from(iterable).finish();\n  }\n  get(key) {\n    const h = hashing(key);\n    return this.root.get(key, h, 0);\n  }\n  has(key) {\n    const h = hashing(key);\n    return this.root.contains(key, h, 0);\n  }\n  set(key, value) {\n    return this.withRoot(this.root.insert(uid$1.peek(), key, value, hashing(key), 0));\n  }\n  update(key, updater) {\n    return this.withRoot(this.root.update(uid$1.peek(), key, updater, hashing(key), 0));\n  }\n  delete(key) {\n    const h = hashing(key);\n    const id = uid$1.peek();\n    const remove = this.root.remove(id, key, h, 0);\n    return remove === undefined ? this : new HashMap(remove[0]);\n  }\n  clone() {\n    return new HashMap(this.root);\n  }\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n  entries() {\n    return this.root.iter();\n  }\n  values() {\n    return new MapIterator(this.entries(), ([, v]) => v);\n  }\n  mutate() {\n    return new HashMapBuilder(this.root);\n  }\n  map(f) {\n    return new HashMap(this.root.map(uid$1.peek(), f));\n  }\n  filter(predicate) {\n    const map = this.mutate();\n    this.forEach((value, key) => {\n      if (!predicate(value, key)) {\n        map.delete(key);\n      }\n    });\n    return map.finish();\n  }\n  forEach(f) {\n    this.root.forEach(f);\n  }\n  find(predicate) {\n    return this.root.find(predicate);\n  }\n  withRoot(newRoot) {\n    return newRoot === this.root ? this : new HashMap(newRoot);\n  }\n}\nclass HashMapBuilder {\n  /**\r\n   * @param root\r\n   * @internal\r\n   */\n  constructor(root) {\n    this.id = uid$1.take();\n    this.root = root;\n  }\n  static empty() {\n    const id = uid$1.peek();\n    const root = BitmapIndexedNode.empty(id);\n    return new HashMapBuilder(root);\n  }\n  static from(iterable) {\n    if (Array.isArray(iterable)) {\n      return HashMapBuilder.fromArray(iterable);\n    }\n    const iter = iterable[Symbol.iterator]();\n    const builder = HashMapBuilder.empty();\n    let next = iter.next();\n    while (!next.done) {\n      const [key, value] = next.value;\n      builder.set(key, value);\n      next = iter.next();\n    }\n    return builder;\n  }\n  static fromArray(list) {\n    const builder = HashMapBuilder.empty(); // eslint-disable-next-line @typescript-eslint/prefer-for-of\n\n    for (let i = 0; i < list.length; i += 1) {\n      const [key, value] = list[i];\n      builder.set(key, value);\n    }\n    return builder;\n  }\n  get(key) {\n    const h = hashing(key);\n    return this.root.get(key, h, 0);\n  }\n  has(key) {\n    const h = hashing(key);\n    return this.root.contains(key, h, 0);\n  }\n  set(key, value) {\n    this.root = this.root.insert(this.id, key, value, hashing(key), 0);\n    return this;\n  }\n  update(key, updater) {\n    const h = hashing(key);\n    this.root = this.root.update(this.id, key, updater, h, 0);\n    return this;\n  }\n  delete(key) {\n    const h = hashing(key);\n    const remove = this.root.remove(this.id, key, h, 0);\n    if (remove !== undefined) {\n      this.root = remove[0];\n    }\n    return this;\n  }\n  finish() {\n    return new HashMap(this.root);\n  }\n}\nvar NodeType;\n(function (NodeType) {\n  NodeType[NodeType[\"Internal\"] = 0] = \"Internal\";\n  NodeType[NodeType[\"Leaf\"] = 1] = \"Leaf\";\n})(NodeType || (NodeType = {}));\nconst MAX_SIZE = 31;\nconst MIN_SIZE = 15;\nconst HALF_NODE_SPLIT = 7;\n/**\r\n * @param list\r\n * @param key\r\n */\n\nfunction binaryFind(list, key) {\n  let start = 0;\n  let end = list.length; // eslint-disable-next-line no-constant-condition\n\n  while (true) {\n    if (start + 1 === end) {\n      return list[start] >= key ? start : end;\n    }\n    const mid = start + end >>> 1;\n    if (list[mid] === key) {\n      return mid;\n    }\n    if (key < list[mid]) {\n      end = mid;\n    } else {\n      start = mid;\n    }\n  }\n}\nclass InternalNode {\n  get selfSize() {\n    return this.keys.length;\n  }\n  constructor(owner, keys, values, children, size) {\n    this.type = NodeType.Internal;\n    this.owner = owner;\n    this.keys = keys;\n    this.values = values;\n    this.children = children;\n    this.size = size;\n  }\n  iter() {\n    return new BTreeIterator(this);\n  }\n  toOwned(owner) {\n    return this.owner === owner ? this : new InternalNode(owner, this.keys.slice(), this.values.slice(), this.children.slice(), this.size);\n  }\n  getKey(index) {\n    return this.keys[index];\n  }\n  getValue(index) {\n    return this.values[index];\n  }\n  getChild(index) {\n    return this.children[index];\n  }\n  get(key) {\n    const size = this.selfSize;\n    const index = binaryFind(this.keys, key);\n    if (index !== size) {\n      const key0 = this.getKey(index);\n      if (key0 === key) {\n        return this.getValue(index);\n      }\n    }\n    return this.getChild(index).get(key);\n  }\n  contains(key) {\n    const size = this.selfSize;\n    const index = binaryFind(this.keys, key);\n    if (index !== size) {\n      const key0 = this.getKey(index);\n      if (key0 === key) {\n        return true;\n      }\n    }\n    return this.getChild(index).contains(key);\n  }\n  insert(owner, key, value) {\n    const size = this.selfSize;\n    const index = binaryFind(this.keys, key);\n    const key0 = this.getKey(index);\n    const value0 = this.getValue(index);\n    if (key0 === key) {\n      if (is$1(value0, value)) {\n        return [this];\n      }\n      const next = this.toOwned(owner);\n      next.values[index] = value;\n      return [next];\n    } else {\n      const child0 = this.getChild(index);\n      const insert = child0.insert(owner, key, value);\n      if (insert.length === 1) {\n        const child = insert[0];\n        if (child === child0) {\n          return [this];\n        }\n        const next = this.toOwned(owner);\n        next.children[index] = child;\n        return [next];\n      } else if (size === MAX_SIZE) {\n        return this.updateWithSplit(owner, insert[0], insert[1], insert[2], insert[3], index);\n      } else {\n        const next = this.toOwned(owner);\n        next.keys.splice(index, 0, insert[2]);\n        next.values.splice(index, 0, insert[3]);\n        next.children.splice(index, 1, insert[0], insert[1]);\n        next.size += 1;\n        return [next];\n      }\n    }\n  }\n  update(owner, key, updater) {\n    const index = binaryFind(this.keys, key);\n    const key0 = this.getKey(index);\n    const value0 = this.getValue(index);\n    if (key0 === key) {\n      const value = updater(value0);\n      if (is$1(value0, value)) {\n        return this;\n      }\n      const next = this.toOwned(owner);\n      next.values[index] = value;\n      return next;\n    } else {\n      const child0 = this.getChild(index);\n      const child = child0.update(owner, key, updater);\n      if (child === child0) {\n        return this;\n      }\n      const next = this.toOwned(owner);\n      next.children[index] = child;\n      return next;\n    }\n  }\n  remove(owner, key) {\n    const index = binaryFind(this.keys, key);\n    const size = this.selfSize;\n    const child0 = this.getChild(index);\n    const originalSize = child0.size;\n    const key0 = this.getKey(index);\n    if (key0 === key) {\n      const [removedKey, value, child] = child0.removeMostRight(owner);\n      const next = this.toOwned(owner);\n      next.size -= 1;\n      next.keys[index] = removedKey;\n      next.values[index] = value;\n      next.children[index] = child;\n      return next.balanceChild(owner, child, removedKey, value, index);\n    } else {\n      const child = child0.remove(owner, key);\n      if (child.size === originalSize) {\n        return this;\n      }\n      const next = this.toOwned(owner);\n      next.size -= 1;\n      next.children[index] = child;\n      if (child.selfSize >= MIN_SIZE) {\n        return next;\n      }\n      if (index === size) {\n        next.balanceTail(child);\n        return next;\n      }\n      const value0 = this.getValue(index);\n      return next.balanceChild(owner, child, key0, value0, index);\n    }\n  }\n  removeMostRight(owner) {\n    const size = this.selfSize;\n    const [key, value, child] = this.getChild(size).removeMostRight(owner);\n    const next = this.toOwned(owner);\n    next.size -= 1;\n    next.children[size] = child;\n    if (child.selfSize < MIN_SIZE) {\n      next.balanceTail(child);\n    }\n    return [key, value, next];\n  }\n  map(owner, f) {\n    const values = [];\n    const children = [];\n    let same = true;\n    for (let i = 0; i < this.keys.length; i += 1) {\n      const key = this.getKey(i);\n      const value0 = this.getValue(i);\n      const value = f(value0, key);\n      values.push(value);\n      same = same && is$1(value0, value);\n    }\n    for (let i = 0; i < this.children.length; i += 1) {\n      const child0 = this.getChild(i);\n      const child = child0.map(owner, f);\n      children.push(child);\n      same = same && child0 === child;\n    }\n    return same ? this : new InternalNode(owner, this.keys, values, children, this.size);\n  }\n  forEach(f) {\n    for (let i = 0; i < this.keys.length; i += 1) {\n      const key = this.getKey(i);\n      const value = this.getValue(i);\n      f(value, key);\n    }\n    for (let i = 0; i < this.children.length; i += 1) {\n      const child = this.getChild(i);\n      child.forEach(f);\n    }\n  }\n  find(predicate) {\n    for (let i = 0; i < this.keys.length; i += 1) {\n      const value = this.getValue(i);\n      if (predicate(value)) {\n        return value;\n      }\n    }\n    for (let i = 0; i < this.children.length; i += 1) {\n      const child = this.getChild(i);\n      const found = child.find(predicate);\n      if (found) {\n        return found;\n      }\n    }\n    return undefined;\n  }\n  balanceChild(owner, child, key0, value0, index) {\n    if (index === 0) {\n      this.balanceHead(child);\n      return this;\n    }\n    const isChildInternal = child.type === NodeType.Internal;\n    const left0 = this.getChild(index - 1);\n    const right0 = this.getChild(index + 1);\n    if (left0.selfSize > MIN_SIZE) {\n      this.rotateRight(child, left0, index, isChildInternal);\n    } else if (right0.selfSize > MIN_SIZE) {\n      this.rotateLeft(child, right0, index, isChildInternal);\n    } else {\n      const left = left0.toOwned(owner);\n      const right = right0.toOwned(owner);\n      const key = child.getKey(HALF_NODE_SPLIT);\n      const value = child.getValue(HALF_NODE_SPLIT);\n      left.keys.push(this.getKey(index - 1));\n      left.values.push(this.getValue(index - 1));\n      left.keys.push(...child.keys.slice(0, HALF_NODE_SPLIT));\n      left.values.push(...child.values.slice(0, HALF_NODE_SPLIT));\n      right.keys.unshift(key0);\n      right.values.unshift(value0);\n      right.keys.unshift(...child.keys.slice(HALF_NODE_SPLIT + 1, MIN_SIZE));\n      right.values.unshift(...child.values.slice(HALF_NODE_SPLIT + 1, MIN_SIZE));\n      this.keys.splice(index - 1, 2, key);\n      this.values.splice(index - 1, 2, value);\n      this.children.splice(index - 1, 3, left, right);\n      if (isChildInternal) {\n        left.children.push(...child.children.slice(0, HALF_NODE_SPLIT + 1));\n        right.children.unshift(...child.children.slice(HALF_NODE_SPLIT + 1, MIN_SIZE + 1));\n        left.updateSize();\n        right.updateSize();\n      }\n    }\n    return this;\n  }\n  rotateLeft(child, right0, index, isChildInternal) {\n    const right = right0.toOwned(this.owner);\n    const newKey = right.keys.shift();\n    const newValue = right.values.shift();\n    const key0 = this.getKey(index);\n    const value0 = this.getValue(index);\n    child.keys.push(key0);\n    child.values.push(value0);\n    this.keys[index] = newKey;\n    this.values[index] = newValue;\n    this.children[index + 1] = right;\n    if (isChildInternal) {\n      const grandChild = right.children.shift();\n      child.children.push(grandChild);\n      const delta = grandChild.size + 1;\n      child.size += delta;\n      right.size -= delta;\n    }\n  }\n  rotateRight(child, left0, index, isChildInternal) {\n    const left = left0.toOwned(this.owner);\n    const newKey = left.keys.pop();\n    const newValue = left.values.pop();\n    const key0 = this.getKey(index - 1);\n    const value0 = this.getValue(index - 1);\n    child.keys.unshift(key0);\n    child.values.unshift(value0);\n    this.keys[index - 1] = newKey;\n    this.values[index - 1] = newValue;\n    this.children[index - 1] = left;\n    if (isChildInternal) {\n      const grandChild = left.children.pop();\n      child.children.unshift(grandChild);\n      const delta = grandChild.size + 1;\n      child.size += delta;\n      left.size -= delta;\n    }\n  }\n  balanceTail(child) {\n    const index = this.selfSize;\n    const left0 = this.getChild(index - 1);\n    const isChildInternal = child.type === NodeType.Internal;\n    if (left0.selfSize === MIN_SIZE) {\n      child.keys.unshift(this.getKey(index - 1));\n      child.values.unshift(this.getValue(index - 1));\n      child.keys.unshift(...left0.keys);\n      child.values.unshift(...left0.values);\n      this.keys.splice(index - 1, 1);\n      this.values.splice(index - 1, 1);\n      this.children.splice(index - 1, 1);\n      if (isChildInternal) {\n        child.children.unshift(...left0.children); // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n\n        child.size += left0.size + 1;\n      }\n    } else {\n      this.rotateRight(child, left0, index, isChildInternal);\n    }\n  }\n  balanceHead(child) {\n    const right0 = this.getChild(1);\n    const isChildInternal = child.type === NodeType.Internal;\n    if (right0.selfSize === MIN_SIZE) {\n      child.keys.push(this.getKey(0));\n      child.values.push(this.getValue(0));\n      child.keys.push(...right0.keys);\n      child.values.push(...right0.values);\n      this.keys.splice(0, 1);\n      this.values.splice(0, 1);\n      this.children.splice(1, 1);\n      if (isChildInternal) {\n        child.children.push(...right0.children); // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n\n        child.size += right0.size + 1;\n      }\n    } else {\n      this.rotateLeft(child, right0, 0, isChildInternal);\n    }\n  }\n  updateWithSplit(owner, child1, child2, key, value, index) {\n    const next1 = this.toOwned(owner);\n    next1.keys.splice(index, 0, key);\n    next1.values.splice(index, 0, value);\n    next1.children.splice(index, 1, child1, child2);\n    const next2 = new InternalNode(owner, next1.keys.splice(16, 16), next1.values.splice(16, 16), next1.children.splice(16, 17), 0);\n    const nextKey = next1.keys.pop();\n    const nextValue = next1.values.pop();\n    next1.updateSize();\n    next2.updateSize();\n    return [next1, next2, nextKey, nextValue];\n  }\n  updateSize() {\n    let sum = this.selfSize;\n    const len = this.children.length;\n    for (let i = 0; i < len; i += 1) {\n      sum += this.children[i].size;\n    }\n    this.size = sum;\n  }\n}\nclass LeafNode {\n  get size() {\n    return this.keys.length;\n  }\n  get selfSize() {\n    return this.size;\n  }\n  constructor(owner, keys, values) {\n    this.type = NodeType.Leaf;\n    this.owner = owner;\n    this.keys = keys;\n    this.values = values;\n  }\n  toOwned(owner) {\n    return this.owner === owner ? this : new LeafNode(owner, this.keys.slice(), this.values.slice());\n  }\n  getKey(index) {\n    return this.keys[index];\n  }\n  getValue(index) {\n    return this.values[index];\n  }\n  get(key) {\n    const size = this.selfSize;\n    const index = binaryFind(this.keys, key);\n    if (index !== size) {\n      const key0 = this.getKey(index);\n      return key0 === key ? this.getValue(index) : undefined;\n    }\n    return undefined;\n  }\n  contains(key) {\n    const size = this.selfSize;\n    const index = binaryFind(this.keys, key);\n    if (index !== size) {\n      const key0 = this.getKey(index);\n      return key0 === key;\n    }\n    return false;\n  }\n  insert(owner, key, value) {\n    const size = this.selfSize;\n    const index = binaryFind(this.keys, key);\n    const key0 = index === size ? undefined : this.getKey(index);\n    if (key0 === key) {\n      const value0 = this.getValue(index);\n      if (is$1(value, value0)) {\n        return [this];\n      }\n      const next = this.toOwned(owner);\n      next.values[index] = value;\n      return [next];\n    } else {\n      if (size === MAX_SIZE) {\n        return this.updateWithSplit(owner, key, value, index);\n      }\n      const next = this.toOwned(owner);\n      next.keys.splice(index, 0, key);\n      next.values.splice(index, 0, value);\n      return [next];\n    }\n  }\n  update(owner, key, updater) {\n    const size = this.selfSize;\n    const index = binaryFind(this.keys, key);\n    const key0 = index === size ? undefined : this.getKey(index);\n    if (key0 === key) {\n      const value0 = this.getValue(index);\n      const value = updater(value0);\n      if (is$1(value, value0)) {\n        return this;\n      }\n      const next = this.toOwned(owner);\n      next.values[index] = value;\n      return next;\n    }\n    return this;\n  }\n  remove(owner, key) {\n    const index = binaryFind(this.keys, key);\n    const size = this.selfSize;\n    if (index === size) {\n      return this;\n    }\n    return this.removeIndex(owner, index);\n  }\n  removeMostRight(owner) {\n    const index = this.selfSize - 1;\n    const key = this.getKey(index);\n    const value = this.getValue(index);\n    const next = this.removeIndex(owner, index);\n    return [key, value, next];\n  }\n  map(owner, f) {\n    const values = [];\n    let same = true;\n    for (let i = 0; i < this.keys.length; i += 1) {\n      const key = this.getKey(i);\n      const value0 = this.getValue(i);\n      const value = f(value0, key);\n      values.push(value);\n      same = same && is$1(value0, value);\n    }\n    return same ? this : new LeafNode(owner, this.keys, values);\n  }\n  forEach(f) {\n    for (let i = 0; i < this.keys.length; i += 1) {\n      const key = this.getKey(i);\n      const value = this.getValue(i);\n      f(value, key);\n    }\n  }\n  find(predicate) {\n    return this.values.find(predicate);\n  }\n  updateWithSplit(owner, key, value, index) {\n    const next1 = this.toOwned(owner);\n    next1.keys.splice(index, 0, key);\n    next1.values.splice(index, 0, value);\n    const next2 = new LeafNode(owner, next1.keys.splice(16, 16), next1.values.splice(16, 16));\n    const nextKey = next1.keys.pop();\n    const nextValue = next1.values.pop();\n    return [next1, next2, nextKey, nextValue];\n  }\n  removeIndex(owner, index) {\n    const next = this.toOwned(owner);\n    next.keys.splice(index, 1);\n    next.values.splice(index, 1);\n    return next;\n  }\n}\n/**\r\n * @param owner\r\n */\n\nfunction emptyRoot(owner) {\n  return new LeafNode(owner, [], []);\n}\n/**\r\n * @param owner\r\n * @param root\r\n * @param key\r\n * @param value\r\n */\n\nfunction rootInsert(owner, root, key, value) {\n  if (root.selfSize === 0) {\n    return new LeafNode(owner, [key], [value]);\n  }\n  const insert = root.insert(owner, key, value);\n  if (insert.length === 1) {\n    return insert[0];\n  }\n  const [next1, next2, newKey, newValue] = insert;\n  return new InternalNode(owner, [newKey], [newValue], [next1, next2], next1.size + next2.size + 1);\n}\n/**\r\n * @param owner\r\n * @param root\r\n * @param key\r\n */\n\nfunction rootRemove(owner, root, key) {\n  const newRoot = root.remove(owner, key);\n  if (newRoot.type === NodeType.Internal && newRoot.selfSize === 0) {\n    return newRoot.getChild(0);\n  }\n  return newRoot;\n}\nclass BTreeIterator {\n  constructor(node) {\n    this.delegate = null;\n    this.index = 0;\n    this.done = false;\n    this.node = node;\n    this.setDelegate(this.index);\n  }\n  [Symbol.iterator]() {\n    return this.clone();\n  }\n  next() {\n    if (this.delegate === null) {\n      return this.yieldValue();\n    }\n    const next = this.delegate.next();\n    if (!next.done) {\n      return {\n        done: false,\n        value: next.value\n      };\n    }\n    const y = this.yieldValue();\n    if (this.index <= this.node.selfSize) {\n      this.setDelegate(this.index);\n    } else {\n      this.done = true;\n      this.delegate = null;\n    }\n    return y;\n  }\n  clone() {\n    const iter = new BTreeIterator(this.node);\n    iter.delegate = this.delegate;\n    iter.index = this.index;\n    iter.done = this.done;\n    return iter;\n  }\n  setDelegate(index) {\n    if (this.node.type !== NodeType.Internal) {\n      return;\n    }\n    const child = this.node.getChild(index);\n    this.delegate = new BTreeIterator(child);\n  }\n  yieldValue() {\n    if (!this.done && this.index < this.node.selfSize) {\n      const key = this.node.getKey(this.index);\n      const value = this.node.getValue(this.index);\n      this.index += 1;\n      return {\n        done: false,\n        value: [key, value]\n      };\n    }\n    this.done = true;\n    return {\n      done: true,\n      value: undefined\n    };\n  }\n}\n\n/* eslint-disable max-classes-per-file */\nnew Uid();\n\n/* eslint-disable max-classes-per-file */\nconst uid = new Uid();\n/**\r\n * preserve insertion order\r\n */\n\nclass OrderedMap {\n  get size() {\n    return this.hashRoot.size;\n  }\n  /**\r\n   * @param itemId\r\n   * @param hashRoot\r\n   * @param sortedRoot\r\n   * @param itemId\r\n   * @param hashRoot\r\n   * @param sortedRoot\r\n   * @param itemId\r\n   * @param hashRoot\r\n   * @param sortedRoot\r\n   * @internal\r\n   */\n\n  constructor(itemId, hashRoot, sortedRoot) {\n    this.id = uid.take();\n    this.itemId = itemId;\n    this.hashRoot = hashRoot;\n    this.sortedRoot = sortedRoot;\n  }\n  static empty() {\n    return OrderedMapBuilder.empty().finish();\n  }\n  static from(iterable) {\n    return OrderedMapBuilder.from(iterable).finish();\n  }\n  delete(key) {\n    const tempId = uid.peek();\n    const h = hashing(key);\n    const remove = this.hashRoot.remove(tempId, key, h, 0);\n    if (remove === undefined) {\n      return this;\n    }\n    const [hashRoot, valueId] = remove;\n    const sortedRoot = this.sortedRoot.remove(tempId, valueId);\n    return new OrderedMap(this.itemId, hashRoot, sortedRoot);\n  }\n  get(key) {\n    const h = hashing(key);\n    const id = this.hashRoot.get(key, h, 0);\n    if (id === undefined) {\n      return undefined;\n    }\n    const got = this.sortedRoot.get(id);\n    return got === null || got === void 0 ? void 0 : got[1];\n  }\n  has(key) {\n    const h = hashing(key);\n    return this.hashRoot.contains(key, h, 0);\n  }\n  set(key, value) {\n    const temp = uid.peek();\n    let itemId = this.hashRoot.get(key, hashing(key), 0);\n    let hashRoot = this.hashRoot;\n    if (!itemId) {\n      itemId = this.itemId + 1;\n      hashRoot = this.hashRoot.insert(temp, key, itemId, hashing(key), 0);\n    }\n    const sortedRoot = rootInsert(temp, this.sortedRoot, itemId, [key, value]);\n    return this.withRoot(this.itemId + 1, hashRoot, sortedRoot);\n  }\n  update(key, updater) {\n    const itemId = this.hashRoot.get(key, hashing(key), 0);\n    if (!itemId) {\n      return this;\n    }\n    const sortedRoot = this.sortedRoot.update(uid.peek(), itemId, prev => {\n      const [prevKey, prevValue] = prev;\n      const value = updater(prevValue);\n      return is$1(value, prevValue) ? prev : [prevKey, value];\n    });\n    return this.withRoot(this.itemId, this.hashRoot, sortedRoot);\n  }\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n  clone() {\n    return new OrderedMap(this.itemId, this.hashRoot, this.sortedRoot);\n  }\n  entries() {\n    return new OrderedMapIterator(new BTreeIterator(this.sortedRoot));\n  }\n  values() {\n    return new MapIterator(this.entries(), ([, v]) => v);\n  }\n  mutate() {\n    return new OrderedMapBuilder(this.itemId, this.hashRoot, this.sortedRoot);\n  }\n  map(f) {\n    const id = uid.peek();\n    const g = prev => {\n      const [key, value0] = prev;\n      const value = f(value0, key);\n      return is$1(value0, value) ? prev : [key, value];\n    };\n    const sortedRoot = this.sortedRoot.map(id, g);\n    return new OrderedMap(this.itemId, this.hashRoot, sortedRoot);\n  }\n  forEach(f) {\n    this.sortedRoot.forEach(([key, value]) => {\n      f(value, key);\n    });\n  }\n  find(predicate) {\n    const found = this.sortedRoot.find(([, value]) => predicate(value));\n    return found ? found[1] : undefined;\n  }\n  first() {\n    const next = this.entries().next();\n    if (next.done) {\n      return undefined;\n    }\n    return next.value[1];\n  }\n  filter(predicate) {\n    const map = this.mutate();\n    this.forEach((value, key) => {\n      if (!predicate(value, key)) {\n        map.delete(key);\n      }\n    });\n    return map.finish();\n  }\n  withRoot(itemId, hashRoot, sortedRoot) {\n    return hashRoot === this.hashRoot && sortedRoot === this.sortedRoot ? this : new OrderedMap(itemId, hashRoot, sortedRoot);\n  }\n}\nclass OrderedMapIterator {\n  /**\r\n   * @param delegate\r\n   * @internal\r\n   */\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n  [Symbol.iterator]() {\n    return this.clone();\n  }\n  next() {\n    const next = this.delegate.next();\n    if (next.done) {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n    return {\n      done: false,\n      value: next.value[1]\n    };\n  }\n  clone() {\n    return new OrderedMapIterator(this.delegate.clone());\n  }\n}\nclass OrderedMapBuilder {\n  constructor(itemId, hashRoot, sortedRoot) {\n    this.id = uid.take();\n    this.itemId = itemId;\n    this.hashRoot = hashRoot;\n    this.sortedRoot = sortedRoot;\n  }\n  static empty() {\n    const tempId = uid.peek();\n    const hashRoot = BitmapIndexedNode.empty(tempId);\n    const sortedRoot = emptyRoot(tempId);\n    return new OrderedMapBuilder(0, hashRoot, sortedRoot);\n  }\n  static from(iterable) {\n    if (Array.isArray(iterable)) {\n      return OrderedMapBuilder.fromArray(iterable);\n    }\n    const builder = OrderedMapBuilder.empty();\n    const iterator = iterable[Symbol.iterator]();\n    let next = iterator.next();\n    while (!next.done) {\n      const [key, value] = next.value;\n      builder.set(key, value);\n      next = iterator.next();\n    }\n    return builder;\n  }\n  static fromArray(list) {\n    const builder = OrderedMapBuilder.empty(); // eslint-disable-next-line @typescript-eslint/prefer-for-of\n\n    for (let i = 0; i < list.length; i += 1) {\n      const [key, value] = list[i];\n      builder.set(key, value);\n    }\n    return builder;\n  }\n  delete(key) {\n    const h = hashing(key);\n    const remove = this.hashRoot.remove(this.id, key, h, 0);\n    if (remove === undefined) {\n      return this;\n    }\n    const id = remove[1];\n    this.hashRoot = remove[0];\n    this.sortedRoot = rootRemove(this.id, this.sortedRoot, id);\n    return this;\n  }\n  get(key) {\n    var _a;\n    const h = hashing(key);\n    const id = this.hashRoot.get(key, h, 0);\n    if (id === undefined) {\n      return undefined;\n    }\n    return (_a = this.sortedRoot.get(id)) === null || _a === void 0 ? void 0 : _a[1];\n  }\n  has(key) {\n    const h = hashing(key);\n    return this.hashRoot.contains(key, h, 0);\n  }\n  set(key, value) {\n    let itemId = this.hashRoot.get(key, hashing(key), 0);\n    if (itemId === undefined) {\n      itemId = this.itemId + 1;\n      this.itemId += 1;\n      this.hashRoot = this.hashRoot.insert(this.id, key, itemId, hashing(key), 0);\n    }\n    this.sortedRoot = rootInsert(this.id, this.sortedRoot, itemId, [key, value]);\n    return this;\n  }\n  update(key, updater) {\n    const itemId = this.hashRoot.get(key, hashing(key), 0);\n    if (!itemId) {\n      return this;\n    }\n    this.sortedRoot = this.sortedRoot.update(this.id, itemId, prev => {\n      const [prevKey, prevValue] = prev;\n      const value = updater(prevValue);\n      return is$1(value, prevValue) ? prev : [prevKey, value];\n    });\n    return this;\n  }\n  finish() {\n    return new OrderedMap(this.itemId, this.hashRoot, this.sortedRoot);\n  }\n}\nconst getPortPosition = (node, port, nodeConfig) => {\n  const width = getRectWidth(nodeConfig, node);\n  const height = getRectHeight(nodeConfig, node);\n  const xOffset = port.position ? port.position[0] * width : width * 0.5;\n  const x = node.x + xOffset;\n  const yOffset = port.position ? port.position[1] * height : height;\n  const y = node.y + yOffset;\n  return {\n    x,\n    y\n  };\n};\nconst getPortPositionByPortId = (node, portId, graphConfig) => {\n  const nodeConfig = getNodeConfig(node, graphConfig);\n  if (!nodeConfig) {\n    return undefined;\n  }\n  const ports = node.ports || [];\n  const port = ports.find(p => p.id === portId);\n  if (!port) {\n    Debug.warn(`invalid port id ${JSON.stringify(port)}`);\n    return undefined;\n  }\n  return getPortPosition(node, port, nodeConfig);\n};\nconst identical = data => data;\nconst isMobile = () => {\n  const toMatch = [/Android/i, /webOS/i, /iPhone/i, /iPad/i, /iPod/i, /BlackBerry/i, /Windows Phone/i];\n  return toMatch.some(toMatchItem => {\n    return navigator.userAgent.match(toMatchItem);\n  });\n};\nvar BrowserType;\n(function (BrowserType) {\n  BrowserType[\"Unknown\"] = \"Unknown\";\n  BrowserType[\"Edge\"] = \"Edge\";\n  BrowserType[\"EdgeChromium\"] = \"EdgeChromium\";\n  BrowserType[\"Opera\"] = \"Opera\";\n  BrowserType[\"Chrome\"] = \"Chrome\";\n  BrowserType[\"IE\"] = \"IE\";\n  BrowserType[\"Firefox\"] = \"Firefox\";\n  BrowserType[\"Safari\"] = \"Safari\";\n  BrowserType[\"Electron\"] = \"Electron\";\n})(BrowserType || (BrowserType = {}));\nconst getBrowser = () => {\n  const agent = navigator.userAgent.toLowerCase();\n  if (agent.indexOf(\"electron\") > -1) {\n    return BrowserType.Electron; // UserAgent of electron is weird.\n  }\n  switch (true) {\n    case agent.indexOf(\"edge\") > -1:\n      return BrowserType.Edge;\n    case agent.indexOf(\"edg\") > -1:\n      return BrowserType.EdgeChromium;\n    case agent.indexOf(\"opr\") > -1 && !!window.opr:\n      return BrowserType.Opera;\n    case agent.indexOf(\"chrome\") > -1 && !!window.chrome:\n      return BrowserType.Chrome;\n    case agent.indexOf(\"trident\") > -1:\n      return BrowserType.IE;\n    case agent.indexOf(\"firefox\") > -1:\n      return BrowserType.Firefox;\n    case agent.indexOf(\"safari\") > -1:\n      return BrowserType.Safari;\n    default:\n      return BrowserType.Unknown;\n  }\n};\nconst isSupported = () => {\n  if (isMobile()) {\n    return false;\n  }\n  const browser = getBrowser();\n  const supported = [BrowserType.Chrome, BrowserType.EdgeChromium, BrowserType.Firefox, BrowserType.Safari, BrowserType.Electron];\n  return supported.indexOf(browser) > -1;\n};\nconst isMacOs = navigator.userAgent.includes(\"Macintosh\");\nconst metaControl = e => isMacOs ? e.metaKey : e.ctrlKey;\nconst checkIsMultiSelect = e => e.shiftKey || metaControl(e);\n\n/**\r\n * get transformed point\r\n * @param x\r\n * @param y\r\n * @param transformMatrix\r\n */\nconst transformPoint = (x, y, transformMatrix) => {\n  return {\n    x: transformMatrix[0] * x + transformMatrix[2] * y + transformMatrix[4],\n    y: transformMatrix[1] * x + transformMatrix[3] * y + transformMatrix[5]\n  };\n};\n/**\r\n * reverse of transformPoint\r\n * @param x\r\n * @param y\r\n * @param transformMatrix\r\n */\n\nconst reverseTransformPoint = (x, y, transformMatrix) => {\n  const [t0, t1, t2, t3, t4, t5] = transformMatrix;\n  return {\n    x: ((x - t4) * t3 - (y - t5) * t2) / (t0 * t3 - t1 * t2),\n    y: ((x - t4) * t1 - (y - t5) * t0) / (t1 * t2 - t0 * t3)\n  };\n};\nconst getPointDeltaByClientDelta = (x, y, transformMatrix) => {\n  const [a, b, c, d] = transformMatrix;\n  const realDx = d * x / (a * d - b * c) + c * y / (b * c - a * d);\n  const realDy = b * x / (b * c - a * d) + a * y / (a * d - b * c);\n  return {\n    x: realDx,\n    y: realDy\n  };\n};\nconst getClientDeltaByPointDelta = (x, y, transformMatrix) => {\n  if (!transformMatrix) {\n    return {\n      x,\n      y\n    };\n  }\n  const [a, b, c, d] = transformMatrix;\n  return transformPoint(x, y, [a, b, c, d, 0, 0]);\n};\nconst getRealPointFromClientPoint = (clientX, clientY, viewport) => {\n  const {\n    rect\n  } = viewport;\n  const x = clientX - rect.left;\n  const y = clientY - rect.top;\n  return reverseTransformPoint(x, y, viewport.transformMatrix);\n};\nconst getClientPointFromRealPoint = (realX, realY, viewport) => {\n  const {\n    x,\n    y\n  } = transformPoint(realX, realY, viewport.transformMatrix);\n  const {\n    rect\n  } = viewport;\n  return {\n    x: x + rect.left,\n    y: y + rect.top\n  };\n};\n/**\r\n * get client point relative to container\r\n */\n\nconst getContainerClientPoint = (realX, realY, viewport) => {\n  const client = getClientPointFromRealPoint(realX, realY, viewport);\n  const {\n    rect\n  } = viewport;\n  return {\n    x: client.x - rect.left,\n    y: client.y - rect.top\n  };\n};\n\n/**\r\n * shallow copy to mark edge dirty, in order to trigger a re-render\r\n *\r\n * @param edges\r\n * @param id\r\n * @param edges\r\n * @param id\r\n */\n\nfunction markEdgeDirty(edges, id) {\n  edges.update(id, edge => edge.shallow());\n}\nconst getNearestConnectablePort = params => {\n  const {\n    parentNode: node,\n    clientX,\n    clientY,\n    graphConfig,\n    viewport\n  } = params;\n  let minDistance = Infinity;\n  let nearestPort;\n  if (!node.ports) {\n    return undefined;\n  }\n  const point = getRealPointFromClientPoint(clientX, clientY, viewport);\n  node.ports.forEach(port => {\n    if (isConnectable(graphConfig, Object.assign(Object.assign({}, params), {\n      model: port\n    }))) {\n      const portPos = getPortPositionByPortId(node, port.id, graphConfig);\n      if (!portPos) {\n        return;\n      }\n      const diffX = point.x - portPos.x;\n      const diffY = point.y - portPos.y;\n      const distance = diffX * diffX + diffY * diffY;\n      if (distance < minDistance) {\n        minDistance = distance;\n        nearestPort = port;\n      }\n    }\n  });\n  return nearestPort;\n};\nconst isConnectable = (graphConfig, params) => {\n  const portConfig = graphConfig.getPortConfig(params.model);\n  return portConfig ? portConfig.getIsConnectable(params) : false;\n};\n/**\r\n * @param node\r\n */\n\nfunction resetNodePortsState(node) {\n  return node.updatePorts(updateStatus(replace(GraphPortStatus.Default)));\n}\nconst filterSelectedItems = data => {\n  const nodes = new Map();\n  const edges = [];\n  data.nodes.forEach(({\n    inner\n  }) => {\n    if (isSelected(inner)) {\n      nodes.set(inner.id, inner);\n    }\n  });\n  data.edges.forEach(({\n    inner\n  }) => {\n    if (isSelected(inner) || nodes.has(inner.source) && nodes.has(inner.target)) {\n      edges.push(inner);\n    }\n  });\n  return {\n    nodes: Array.from(nodes.values()),\n    edges\n  };\n};\nconst getNeighborPorts = (data, nodeId, portId) => {\n  const neighbors = [];\n  const edgesBySource = data.getEdgesBySource(nodeId, portId);\n  const edgesByTarget = data.getEdgesByTarget(nodeId, portId);\n  edgesBySource === null || edgesBySource === void 0 ? void 0 : edgesBySource.forEach(edgeId => {\n    const edge = data.edges.get(edgeId);\n    if (edge) {\n      neighbors.push({\n        nodeId: edge.target,\n        portId: edge.targetPortId\n      });\n    }\n  });\n  edgesByTarget === null || edgesByTarget === void 0 ? void 0 : edgesByTarget.forEach(edgeId => {\n    const edge = data.edges.get(edgeId);\n    if (edge) {\n      neighbors.push({\n        nodeId: edge.source,\n        portId: edge.sourcePortId\n      });\n    }\n  });\n  return neighbors;\n};\nconst unSelectAllEntity = () => {\n  return data => data.mapNodes(n => n.update(curNode => {\n    var _a;\n    const nextNode = Object.assign(Object.assign({}, curNode), {\n      ports: (_a = curNode.ports) === null || _a === void 0 ? void 0 : _a.map(updateStatus(replace(GraphPortStatus.Default)))\n    });\n    return updateStatus(replace(GraphNodeStatus.Default))(nextNode);\n  })).mapEdges(e => e.update(updateStatus(replace(GraphEdgeStatus.Default))));\n};\nconst nodeSelection = (e, target) => {\n  if (isNodeEditing(target)) {\n    return identical;\n  }\n  const isMultiSelect = checkIsMultiSelect(e);\n  if (isSelected(target) && !isMultiSelect) {\n    return identical;\n  }\n  return data => {\n    const predicate = isMultiSelect ? node => {\n      if (node.id !== target.id) {\n        return isSelected(node);\n      } else if (e.button === MouseEventButton.Secondary) {\n        return true;\n      } else {\n        // use target.state here which is node's original state before onNodeMouseDown\n        return !isSelected(target);\n      }\n    } : node => node.id === target.id;\n    return data.selectNodes(predicate, target.id);\n  };\n};\nconst getNodeAutomationId = node => {\n  var _a;\n  return `node-container-${(_a = node.name) !== null && _a !== void 0 ? _a : \"unnamed\"}-${node.id}`;\n};\nconst getPortAutomationId = (port, parentNode) => {\n  return `port-${parentNode.name}-${parentNode.id}-${port.name}-${port.id}`;\n};\nconst getNodeUid = (graphId, node) => {\n  return `node:${graphId}:${node.id}`;\n};\nconst getPortUid = (graphId, node, port) => {\n  return `port:${graphId}:${node.id}:${port.id}`;\n};\nconst getEdgeUid = (graphId, edge) => {\n  return `edge:${graphId}:${edge.id}`;\n};\n\n/* eslint-disable @typescript-eslint/ban-types */\n/**\r\n * @param obj\r\n */\n\nfunction preventSpread(obj) {\n  Object.defineProperty(obj, \"__preventSpread\", {\n    enumerable: true,\n    configurable: false,\n    get() {\n      /**\r\n       * silent warning if caused by browser extension, eg. react devtool\r\n       * if this is caused by browser extension, document.currentScript is null\r\n       */\n      if (document.currentScript) {\n        Debug.error(`${obj.constructor.name} is a class, which should not be used in the spread syntax or argument of Object.assign`);\n      }\n      return undefined;\n    }\n  });\n}\nclass EdgeModel {\n  get id() {\n    return this.inner.id;\n  }\n  get automationId() {\n    return this.inner.automationId;\n  }\n  get source() {\n    return this.inner.source;\n  }\n  get target() {\n    return this.inner.target;\n  }\n  get sourcePortId() {\n    return this.inner.sourcePortId;\n  }\n  get targetPortId() {\n    return this.inner.targetPortId;\n  }\n  get status() {\n    return this.inner.status;\n  }\n  get data() {\n    return this.inner.data;\n  }\n  constructor(edge) {\n    this.inner = edge;\n    preventSpread(this);\n  }\n  static fromJSON(inner) {\n    return new EdgeModel(inner);\n  }\n  updateStatus(f) {\n    return this.update(updateStatus(f));\n  }\n  update(f) {\n    const edge = f(this.inner);\n    return edge === this.inner ? this : new EdgeModel(edge);\n  }\n  /**\r\n   * shallow copy the model\r\n   * example usage: mark the edge is dirty and need a re-render\r\n   *\r\n   * @returns shallowed edge model\r\n   */\n\n  shallow() {\n    return new EdgeModel(this.inner);\n  }\n  toJSON() {\n    return this.inner;\n  }\n}\n\n// accessing Object's static property is very slow in safari\nconst is = Object.is;\nfunction mapCow(list, f) {\n  const values = [];\n  let same = true;\n  for (let i = 0; i < list.length; i += 1) {\n    const value0 = list[i];\n    const value = f(value0, i);\n    same = same && is(value0, value);\n    values.push(value);\n  }\n  return same ? list : values;\n}\nclass NodeModel {\n  get id() {\n    return this.inner.id;\n  }\n  get status() {\n    return this.inner.status;\n  }\n  get ports() {\n    return this.inner.ports;\n  }\n  get ariaLabel() {\n    return this.inner.ariaLabel;\n  }\n  get name() {\n    return this.inner.name;\n  }\n  get x() {\n    return this.inner.x;\n  }\n  get y() {\n    return this.inner.y;\n  }\n  get automationId() {\n    return this.inner.automationId;\n  }\n  get isInSearchResults() {\n    return this.inner.isInSearchResults;\n  }\n  get isCurrentSearchResult() {\n    return this.inner.isCurrentSearchResult;\n  }\n  get data() {\n    return this.inner.data;\n  }\n  get height() {\n    return this.inner.height;\n  }\n  get width() {\n    return this.inner.width;\n  }\n  get layer() {\n    var _a;\n    return (_a = this.inner.layer) !== null && _a !== void 0 ? _a : 0;\n  }\n  constructor(node, portPositionCache, prev, next) {\n    this.inner = node;\n    this.portPositionCache = portPositionCache;\n    this.prev = prev;\n    this.next = next;\n    preventSpread(this);\n  }\n  static fromJSON(node, prev, next) {\n    return new NodeModel(node, new Map(), prev, next);\n  }\n  getPort(id) {\n    var _a;\n    return (_a = this.ports) === null || _a === void 0 ? void 0 : _a.find(port => port.id === id);\n  }\n  link({\n    prev,\n    next\n  }) {\n    if (prev === this.prev && next === this.next) {\n      return this;\n    }\n    return new NodeModel(this.inner, this.portPositionCache, prev !== null && prev !== void 0 ? prev : this.prev, next !== null && next !== void 0 ? next : this.next);\n  }\n  updateStatus(f) {\n    return this.update(updateStatus(f));\n  }\n  update(f) {\n    const node = f(this.inner);\n    return node === this.inner ? this : new NodeModel(node, new Map(), this.prev, this.next);\n  }\n  updateData(f) {\n    if (!this.data) {\n      return this;\n    }\n    return this.update(inner => {\n      const data = f(inner.data);\n      if (data === inner.data) {\n        return inner;\n      }\n      return Object.assign(Object.assign({}, inner), {\n        data\n      });\n    });\n  }\n  getPortPosition(portId, graphConfig) {\n    let point = this.portPositionCache.get(portId);\n    if (!point) {\n      point = getPortPositionByPortId(this.inner, portId, graphConfig);\n      this.portPositionCache.set(portId, point);\n    }\n    return point;\n  }\n  hasPort(id) {\n    var _a;\n    return Boolean((_a = this.inner.ports) === null || _a === void 0 ? void 0 : _a.find(port => port.id === id));\n  }\n  /**\r\n   * @internal\r\n   */\n\n  updatePositionAndSize(dummy) {\n    const {\n      x,\n      y,\n      width,\n      height\n    } = dummy;\n    const node = Object.assign(Object.assign({}, this.inner), {\n      x,\n      y,\n      width: width !== null && width !== void 0 ? width : this.inner.width,\n      height: height !== null && height !== void 0 ? height : this.inner.height\n    });\n    return new NodeModel(node, new Map(), this.prev, this.next);\n  }\n  updatePorts(f) {\n    if (!this.inner.ports) {\n      return this;\n    }\n    const ports = mapCow(this.inner.ports, f);\n    const node = this.inner.ports === ports ? this.inner : Object.assign(Object.assign({}, this.inner), {\n      ports\n    });\n    return node === this.inner ? this : new NodeModel(node, new Map(), this.prev, this.next);\n  }\n  invalidCache() {\n    return new NodeModel(this.inner, new Map(), this.prev, this.next);\n  }\n  toJSON() {\n    return this.inner;\n  }\n}\n\n/**\r\n * Things preferred to be implemented as methods here:\r\n * * widely shared functions, eg. `updateNode`\r\n * * including multiple operations that must happen atomically\r\n * * improve performance by internal mutability\r\n */\n\nclass GraphModel {\n  constructor(init) {\n    this.nodes = init.nodes;\n    this.edges = init.edges;\n    this.groups = init.groups;\n    this.head = init.head;\n    this.tail = init.tail;\n    this.edgesBySource = init.edgesBySource;\n    this.edgesByTarget = init.edgesByTarget;\n    this.selectedNodes = init.selectedNodes;\n    preventSpread(this);\n  }\n  static empty() {\n    return new GraphModel({\n      nodes: OrderedMap.empty(),\n      edges: HashMap.empty(),\n      groups: [],\n      head: undefined,\n      tail: undefined,\n      edgesBySource: HashMap.empty(),\n      edgesByTarget: HashMap.empty(),\n      selectedNodes: new Set()\n    });\n  }\n  static fromJSON(init) {\n    var _a;\n    const nodes = OrderedMap.empty().mutate();\n    const edges = HashMap.empty().mutate();\n    let head;\n    let tail;\n    if (init.nodes.length === 0) {\n      head = undefined;\n      tail = undefined;\n    } else if (init.nodes.length === 1) {\n      const node = init.nodes[0];\n      nodes.set(node.id, NodeModel.fromJSON(node, undefined, undefined));\n      head = node.id;\n      tail = node.id;\n    } else {\n      const first = init.nodes[0];\n      const second = init.nodes[1];\n      const last = init.nodes[init.nodes.length - 1];\n      head = first.id;\n      tail = last.id;\n      nodes.set(first.id, NodeModel.fromJSON(first, undefined, second.id));\n      let prev = init.nodes[0];\n      if (init.nodes.length > 2) {\n        for (let i = 1; i < init.nodes.length - 1; i += 1) {\n          const node = init.nodes[i];\n          const next = init.nodes[i + 1];\n          nodes.set(node.id, NodeModel.fromJSON(node, prev.id, next.id));\n          prev = node;\n        }\n      }\n      nodes.set(last.id, NodeModel.fromJSON(last, prev.id, undefined));\n    }\n    const edgesBySource = HashMapBuilder.empty();\n    const edgesByTarget = HashMapBuilder.empty();\n    for (const edge of init.edges) {\n      edges.set(edge.id, EdgeModel.fromJSON(edge));\n      setEdgeByPortMutable(edgesBySource, edge.id, edge.source, edge.sourcePortId);\n      setEdgeByPortMutable(edgesByTarget, edge.id, edge.target, edge.targetPortId);\n    }\n    return new GraphModel({\n      nodes: nodes.finish(),\n      edges: edges.finish(),\n      groups: (_a = init.groups) !== null && _a !== void 0 ? _a : [],\n      head,\n      tail,\n      edgesBySource: edgesBySource.finish(),\n      edgesByTarget: edgesByTarget.finish(),\n      selectedNodes: new Set()\n    });\n  }\n  getNavigationFirstNode() {\n    if (this.head === undefined) {\n      return undefined;\n    }\n    return this.nodes.get(this.head);\n  }\n  updateNode(id, f) {\n    var _a, _b;\n    const nodes = this.nodes.update(id, node => node.update(f));\n    if (nodes === this.nodes) {\n      return this;\n    }\n    const edges = this.edges.mutate();\n    (_a = this.edgesBySource.get(id)) === null || _a === void 0 ? void 0 : _a.forEach(edgeIds => {\n      edgeIds.forEach(edgeId => {\n        markEdgeDirty(edges, edgeId);\n      });\n    });\n    (_b = this.edgesByTarget.get(id)) === null || _b === void 0 ? void 0 : _b.forEach(edgeIds => {\n      edgeIds.forEach(edgeId => {\n        markEdgeDirty(edges, edgeId);\n      });\n    });\n    return this.merge({\n      nodes,\n      edges: edges.finish()\n    });\n  }\n  updateNodeData(id, f) {\n    return this.merge({\n      nodes: this.nodes.update(id, node => node.updateData(f))\n    });\n  }\n  updatePort(nodeId, portId, f) {\n    const nodes = this.nodes.update(nodeId, node => node.updatePorts(port => port.id === portId ? f(port) : port));\n    return this.merge({\n      nodes\n    });\n  }\n  insertNode(node) {\n    const nodes = this.nodes.mutate().set(node.id, NodeModel.fromJSON(node, this.tail, undefined));\n    if (this.tail && !this.nodes.has(node.id)) {\n      nodes.update(this.tail, tail => tail.link({\n        next: node.id\n      }));\n    }\n    return this.merge({\n      nodes: nodes.finish(),\n      head: this.nodes.size === 0 ? node.id : this.head,\n      tail: node.id\n    });\n  }\n  deleteItems(predicate) {\n    var _a;\n    const deleted = new Set();\n    const nodes = this.nodes.mutate();\n    let first = this.head === undefined ? undefined : this.nodes.get(this.head);\n    let node = first;\n    let prev;\n    const edgesBySource = this.edgesBySource.mutate();\n    const edgesByTarget = this.edgesByTarget.mutate();\n    while (node !== undefined) {\n      const next = node.next ? this.nodes.get(node.next) : undefined;\n      if (!((_a = predicate.node) === null || _a === void 0 ? void 0 : _a.call(predicate, node.inner))) {\n        nodes.delete(node.id);\n        edgesBySource.delete(node.id);\n        edgesByTarget.delete(node.id);\n        deleted.add(node.id);\n        if (prev) {\n          nodes.update(prev.id, prevNode => prevNode.link({\n            next: node === null || node === void 0 ? void 0 : node.next\n          }));\n        }\n        if (next) {\n          nodes.update(next.id, nextNode => nextNode.link({\n            prev: prev === null || prev === void 0 ? void 0 : prev.id\n          }));\n        }\n        if (node === first) {\n          first = next;\n        }\n      } else {\n        nodes.update(node.id, current => current.link({\n          prev: prev === null || prev === void 0 ? void 0 : prev.id\n        }).update(n => {\n          if (has(GraphNodeStatus.Editing)(n.status)) {\n            return n;\n          }\n          return Object.assign(Object.assign({}, n), {\n            status: GraphNodeStatus.Default\n          });\n        }));\n        prev = node;\n      }\n      node = next;\n    }\n    const edges = this.edges.mutate();\n    this.edges.forEach(edge => {\n      var _a, _b;\n      if (!deleted.has(edge.source) && !deleted.has(edge.target) && ((_b = (_a = predicate.edge) === null || _a === void 0 ? void 0 : _a.call(predicate, edge)) !== null && _b !== void 0 ? _b : true)) {\n        edges.update(edge.id, e => e.update(updateStatus(replace(GraphEdgeStatus.Default))));\n      } else {\n        edges.delete(edge.id);\n        deleteEdgeByPort(edgesBySource, edge.id, edge.source, edge.sourcePortId);\n        deleteEdgeByPort(edgesByTarget, edge.id, edge.target, edge.targetPortId);\n      }\n    });\n    return this.merge({\n      nodes: nodes.finish(),\n      edges: edges.finish(),\n      head: first === null || first === void 0 ? void 0 : first.id,\n      tail: prev === null || prev === void 0 ? void 0 : prev.id,\n      edgesBySource: edgesBySource.finish(),\n      edgesByTarget: edgesByTarget.finish()\n    });\n  }\n  insertEdge(edge) {\n    if (this.isEdgeExist(edge.source, edge.sourcePortId, edge.target, edge.targetPortId) || !this.nodes.has(edge.source) || !this.nodes.has(edge.target)) {\n      return this;\n    }\n    const edgesBySource = setEdgeByPort(this.edgesBySource, edge.id, edge.source, edge.sourcePortId);\n    const edgesByTarget = setEdgeByPort(this.edgesByTarget, edge.id, edge.target, edge.targetPortId);\n    return this.merge({\n      nodes: this.nodes.update(edge.source, node => node.invalidCache()).update(edge.target, node => node.invalidCache()),\n      edges: this.edges.set(edge.id, EdgeModel.fromJSON(edge)).map(e => e.updateStatus(replace(GraphEdgeStatus.Default))),\n      edgesBySource,\n      edgesByTarget\n    });\n  }\n  updateEdge(id, f) {\n    return this.merge({\n      edges: this.edges.update(id, e => e.update(f))\n    });\n  }\n  deleteEdge(id) {\n    const edge = this.edges.get(id);\n    if (!edge) {\n      return this;\n    }\n    return this.merge({\n      edges: this.edges.delete(id),\n      edgesBySource: deleteEdgeByPort(this.edgesBySource, edge.id, edge.source, edge.sourcePortId),\n      edgesByTarget: deleteEdgeByPort(this.edgesByTarget, edge.id, edge.target, edge.targetPortId)\n    });\n  }\n  /**\r\n   * @internal\r\n   */\n\n  updateNodesPositionAndSize(dummies) {\n    const updates = new Set();\n    const nodes = this.nodes.mutate();\n    const edges = this.edges.mutate();\n    dummies.forEach(dummy => {\n      var _a, _b;\n      updates.add(dummy.id);\n      nodes.update(dummy.id, node => node.updatePositionAndSize(dummy));\n      (_a = this.edgesBySource.get(dummy.id)) === null || _a === void 0 ? void 0 : _a.forEach(ids => {\n        ids.forEach(id => {\n          markEdgeDirty(edges, id);\n        });\n      });\n      (_b = this.edgesByTarget.get(dummy.id)) === null || _b === void 0 ? void 0 : _b.forEach(ids => {\n        ids.forEach(id => {\n          markEdgeDirty(edges, id);\n        });\n      });\n    });\n    return this.merge({\n      nodes: nodes.finish(),\n      edges: edges.finish()\n    });\n  }\n  mapNodes(f) {\n    return this.merge({\n      nodes: this.nodes.map(f)\n    });\n  }\n  mapEdges(f) {\n    return this.merge({\n      edges: this.edges.map(f)\n    });\n  }\n  selectNodes(predicate, topNode) {\n    const selected = new Set();\n    const nodes = this.nodes.map(node => {\n      const isNodeSelected = predicate(node.inner);\n      if (isNodeSelected) {\n        selected.add(node.id);\n      }\n      return node.updatePorts(updateStatus(replace(GraphPortStatus.Default))).updateStatus(resetConnectStatus(isNodeSelected ? GraphNodeStatus.Selected : GraphNodeStatus.UnconnectedToSelected));\n    }).mutate();\n    if (selected.size === 0) {\n      this.nodes.forEach(n => nodes.update(n.id, it => it.updateStatus(replace(GraphNodeStatus.Default))));\n    } else if (topNode) {\n      const n = nodes.get(topNode);\n      if (n) {\n        nodes.delete(topNode);\n        nodes.set(n.id, n);\n      }\n    }\n    const setConnected = id => {\n      nodes.update(id, node => node.updateStatus(replace(isSelected(node) ? GraphNodeStatus.Selected : GraphNodeStatus.ConnectedToSelected)));\n    };\n    const edges = selected.size ? this.edges.map(edge => {\n      let state = GraphEdgeStatus.UnconnectedToSelected;\n      if (selected.has(edge.source)) {\n        setConnected(edge.target);\n        state = GraphEdgeStatus.ConnectedToSelected;\n      }\n      if (selected.has(edge.target)) {\n        setConnected(edge.source);\n        state = GraphEdgeStatus.ConnectedToSelected;\n      }\n      return edge.updateStatus(replace(state));\n    }) : this.edges.map(edge => edge.updateStatus(replace(GraphEdgeStatus.Default)));\n    return this.merge({\n      nodes: nodes.finish(),\n      edges,\n      selectedNodes: selected\n    });\n  }\n  getEdgesBySource(nodeId, portId) {\n    var _a;\n    return (_a = this.edgesBySource.get(nodeId)) === null || _a === void 0 ? void 0 : _a.get(portId);\n  }\n  getEdgesByTarget(nodeId, portId) {\n    var _a;\n    return (_a = this.edgesByTarget.get(nodeId)) === null || _a === void 0 ? void 0 : _a.get(portId);\n  }\n  isPortConnectedAsSource(nodeId, portId) {\n    var _a, _b;\n    return ((_b = (_a = this.getEdgesBySource(nodeId, portId)) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : 0) > 0;\n  }\n  isPortConnectedAsTarget(nodeId, portId) {\n    var _a, _b;\n    return ((_b = (_a = this.getEdgesByTarget(nodeId, portId)) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : 0) > 0;\n  }\n  shallow() {\n    return this.merge({});\n  }\n  toJSON() {\n    const nodes = [];\n    let current = this.head && this.nodes.get(this.head);\n    while (current) {\n      nodes.push(current.inner);\n      current = current.next && this.nodes.get(current.next);\n    }\n    const edges = Array.from(this.edges.values()).map(it => it.inner);\n    return {\n      nodes,\n      edges\n    };\n  }\n  isEdgeExist(source, sourcePortId, target, targetPortId) {\n    const sources = this.getEdgesBySource(source, sourcePortId);\n    const targets = this.getEdgesByTarget(target, targetPortId);\n    if (!sources || !targets) {\n      return false;\n    }\n    let exist = false;\n    sources.forEach(id => {\n      if (targets.has(id)) {\n        exist = true;\n      }\n    });\n    return exist;\n  }\n  merge(partial) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    return new GraphModel({\n      nodes: (_a = partial.nodes) !== null && _a !== void 0 ? _a : this.nodes,\n      edges: (_b = partial.edges) !== null && _b !== void 0 ? _b : this.edges,\n      groups: (_c = partial.groups) !== null && _c !== void 0 ? _c : this.groups,\n      head: (_d = partial.head) !== null && _d !== void 0 ? _d : this.head,\n      tail: (_e = partial.tail) !== null && _e !== void 0 ? _e : this.tail,\n      edgesBySource: (_f = partial.edgesBySource) !== null && _f !== void 0 ? _f : this.edgesBySource,\n      edgesByTarget: (_g = partial.edgesByTarget) !== null && _g !== void 0 ? _g : this.edgesByTarget,\n      selectedNodes: (_h = partial.selectedNodes) !== null && _h !== void 0 ? _h : this.selectedNodes\n    });\n  }\n}\n/**\r\n * @param edgesByPort\r\n * @param edgeId\r\n * @param nodeId\r\n * @param portId\r\n */\n\nfunction setEdgeByPort(edgesByPort, edgeId, nodeId, portId) {\n  return edgesByPort.has(nodeId) ? edgesByPort.update(nodeId, map => {\n    const edges = map.get(portId);\n    return new Map(map).set(portId, (edges ? new Set(edges) : new Set()).add(edgeId));\n  }) : edgesByPort.set(nodeId, new Map([[portId, new Set([edgeId])]]));\n}\n/**\r\n * @param edgesByPort\r\n * @param edgeId\r\n * @param nodeId\r\n * @param portId\r\n */\n\nfunction setEdgeByPortMutable(edgesByPort, edgeId, nodeId, portId) {\n  if (edgesByPort.has(nodeId)) {\n    edgesByPort.update(nodeId, map => {\n      let set = map.get(portId);\n      if (!set) {\n        set = new Set();\n        map.set(portId, set);\n      }\n      set.add(edgeId);\n      return map;\n    });\n  } else {\n    edgesByPort.set(nodeId, new Map([[portId, new Set([edgeId])]]));\n  }\n}\n/**\r\n * @param edgesByPort\r\n * @param edgeId\r\n * @param nodeId\r\n * @param portId\r\n */\n\nfunction deleteEdgeByPort(edgesByPort, edgeId, nodeId, portId) {\n  if (!edgesByPort.has(nodeId)) {\n    return edgesByPort;\n  }\n  return edgesByPort.update(nodeId, edgeByPortsMap => {\n    const edgeIds = edgeByPortsMap.get(portId);\n    if (!edgeIds) {\n      return edgeByPortsMap;\n    }\n    const set = new Set(edgeIds);\n    set.delete(edgeId);\n    return new Map(edgeByPortsMap).set(portId, set);\n  });\n}\nvar CanvasMouseMode;\n(function (CanvasMouseMode) {\n  CanvasMouseMode[\"Pan\"] = \"Pan\";\n  CanvasMouseMode[\"Select\"] = \"Select\";\n})(CanvasMouseMode || (CanvasMouseMode = {}));\nvar GraphBehavior;\n(function (GraphBehavior) {\n  GraphBehavior[\"Default\"] = \"default\";\n  GraphBehavior[\"Dragging\"] = \"dragging\";\n  GraphBehavior[\"Panning\"] = \"panning\";\n  GraphBehavior[\"MultiSelect\"] = \"multiSelect\";\n  GraphBehavior[\"Connecting\"] = \"connecting\";\n  GraphBehavior[\"AddingNode\"] = \"addingNode\";\n})(GraphBehavior || (GraphBehavior = {}));\n\n/**\r\n * @param a\r\n * @param b\r\n */\nfunction arrayEquals(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  } // eslint-disable-next-line no-plusplus\n\n  for (let i = 0; i < a.length; i++) {\n    if (!Object.is(a[i], b[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\r\n * @param min\r\n * @param max\r\n * @param value\r\n */\nfunction clamp(min, max, value) {\n  if (min > value) {\n    return min;\n  }\n  if (max < value) {\n    return max;\n  }\n  return value;\n}\n\n/**\r\n * @param v\r\n */\nfunction isDef(v) {\n  return v !== undefined && v !== null;\n}\nconst debounce = (callback, timeout, options) => {\n  const {\n    instance,\n    maxWait\n  } = options || {};\n  let timer = 0;\n  let firstInvokeTime;\n  return (...args) => {\n    window.clearTimeout(timer);\n    if (isDef(maxWait)) {\n      const now = Date.now();\n      if (!isDef(firstInvokeTime)) {\n        firstInvokeTime = now;\n      } else {\n        if (now - firstInvokeTime >= maxWait) {\n          firstInvokeTime = undefined;\n          invokeCallback(args);\n          return;\n        }\n      }\n    }\n    timer = window.setTimeout(() => {\n      invokeCallback(args);\n    }, timeout);\n  };\n  /**\r\n   * @param args\r\n   */\n\n  function invokeCallback(args) {\n    callback.apply(instance, args);\n  }\n};\nconst diffGraphEdge = (preData, data) => {\n  const isAdded = data.edges.length > preData.edges.length;\n  const larger = isAdded ? data : preData;\n  const smaller = isAdded ? preData : data;\n  const edgeIdSet = new Set();\n  smaller.edges.forEach(n => edgeIdSet.add(n.id));\n  const edges = larger.edges.filter(n => !edgeIdSet.has(n.id));\n  return {\n    isAdded,\n    edges\n  };\n};\nconst diffGraphNode = (preData, data) => {\n  const isAdded = data.nodes.length > preData.nodes.length;\n  const larger = isAdded ? data : preData;\n  const smaller = isAdded ? preData : data;\n  const nodeIdSet = new Set();\n  smaller.nodes.forEach(n => nodeIdSet.add(n.id));\n  const nodes = larger.nodes.filter(n => !nodeIdSet.has(n.id));\n  return {\n    isAdded,\n    nodes\n  };\n};\n\n/**\r\n * one action can just add ports or remove ports,\r\n * can not add some ports meanwhile remove some ports\r\n */\nconst diffGraphPort = (preData, data) => {\n  const prePortIdSet = new Set();\n  const preNodes = new Map();\n  const portIdSet = new Set();\n  const nodes = new Map();\n  const CONNECT = \"--CONNECT--\";\n  preData.nodes.forEach(n => {\n    preNodes.set(n.id, n);\n    if (n.ports) {\n      n.ports.forEach(p => prePortIdSet.add(`${n.id}${CONNECT}${p.id}`));\n    }\n  });\n  data.nodes.forEach(n => {\n    nodes.set(n.id, n);\n    if (n.ports) {\n      n.ports.forEach(p => portIdSet.add(`${n.id}${CONNECT}${p.id}`));\n    }\n  });\n  const isAdded = portIdSet.size > prePortIdSet.size;\n  const small = isAdded ? prePortIdSet : portIdSet;\n  const large = isAdded ? portIdSet : prePortIdSet;\n  const largeNodes = isAdded ? nodes : preNodes;\n  const map = new Map();\n  large.forEach(id => {\n    var _a;\n    if (!small.has(id)) {\n      const [nodeId, portId] = id.split(CONNECT);\n      const node = largeNodes.get(nodeId);\n      if (node && node.ports) {\n        if (!map.get(nodeId)) {\n          map.set(nodeId, {\n            node,\n            ports: []\n          });\n        }\n        const [port] = node.ports.filter(p => p.id === portId);\n        (_a = map.get(nodeId)) === null || _a === void 0 ? void 0 : _a.ports.push(port);\n      }\n    }\n  });\n  const diffPorts = Array.from(map.values());\n  return {\n    isAdded,\n    diffPorts\n  };\n};\nconst emptyArrayInstance = [];\n/**\r\n *\r\n */\n\nfunction constantEmptyArray() {\n  return emptyArrayInstance;\n}\nfunction isEdgeEvent(event) {\n  return event.type.startsWith(\"onEdge\");\n}\nfunction isNodeEvent(event) {\n  return event.type.startsWith(\"onNode\");\n}\nfunction isPortEvent(event) {\n  return event.type.startsWith(\"onPort\");\n}\nfunction isCanvasEvent(event) {\n  return event.type.startsWith(\"onCanvas\");\n}\n\n/**\r\n * Critical path method\r\n */\nlet maxCost;\nclass Task {\n  constructor(name, cost, dependencies) {\n    // the earliest start\n    this.earlyStart = 0; // the latest start\n\n    this.latestStart = 0; // the latest finish\n\n    this.latestFinish = 0; // the cost of the task along the critical path\n\n    this.criticalCost = 0; // the tasks on which this task is dependant\n\n    this.dependencies = new Set();\n    this.name = name;\n    this.cost = cost;\n    dependencies === null || dependencies === void 0 ? void 0 : dependencies.forEach(t => {\n      this.dependencies.add(t);\n    });\n    this.earlyFinish = -1;\n  }\n  isDependent(t) {\n    if (this.dependencies.has(t)) {\n      return true;\n    }\n    return Array.from(this.dependencies).some(dep => dep.isDependent(t));\n  }\n}\nconst criticalPath = tasks => {\n  const completed = new Set();\n  const remaining = new Set(tasks); // while there are tasks whose critical cost isn't calculated.\n\n  while (remaining.size !== 0) {\n    let progress = false; // find a new task to calculate\n\n    remaining.forEach(task => {\n      if (containAll(completed, task.dependencies)) {\n        let critical = 0;\n        task.dependencies.forEach(t => {\n          if (t.criticalCost > critical) {\n            critical = t.criticalCost;\n          }\n        });\n        task.criticalCost = critical + task.cost;\n        completed.add(task);\n        remaining.delete(task);\n        progress = true;\n      }\n    });\n    if (!progress) {\n      throw new Error(\"Cyclic dependency, algorithm stopped!\");\n    }\n  }\n  getMaxCost(tasks);\n  calculateEarly(tasks); // get the tasks\n\n  const ret = Array.from(completed);\n  ret.sort((o1, o2) => {\n    const i = o2.criticalCost - o1.criticalCost;\n    if (i !== 0) {\n      return i;\n    }\n    if (o1.isDependent(o2)) {\n      return -1;\n    }\n    if (o2.isDependent(o1)) {\n      return 1;\n    }\n    return 0;\n  });\n  return ret[0];\n};\nconst setEarly = task => {\n  const completionTime = task.earlyFinish;\n  task.dependencies.forEach(t => {\n    if (completionTime >= t.earlyStart) {\n      t.earlyStart = completionTime;\n      t.earlyFinish = completionTime + t.cost;\n    }\n    setEarly(t);\n  });\n};\nconst setLatest = task => {\n  task.latestStart = maxCost - task.criticalCost;\n  task.latestFinish = task.latestStart + task.cost;\n};\nconst calculateEarly = tasks => {\n  tasks.forEach(t => {\n    t.earlyStart = 0;\n    t.earlyFinish = t.cost;\n    setEarly(t);\n  });\n};\nconst getMaxCost = tasks => {\n  let max = -1;\n  tasks.forEach(t => {\n    if (t.criticalCost > max) {\n      max = t.criticalCost;\n    }\n  });\n  maxCost = max;\n  tasks.forEach(t => {\n    setLatest(t);\n  });\n};\nconst containAll = (AllItems, items) => {\n  return Array.from(items).every(item => AllItems.has(item));\n};\nconst getTopoSortingNodes = canvasData => {\n  const {\n    edges,\n    nodes\n  } = canvasData;\n  if (!nodes.length) {\n    return [];\n  }\n  if (!edges.length) {\n    return [...nodes];\n  }\n  const edgesForTopo = edges.map(edge => [edge.source, edge.target]);\n  const nodesForTopo = nodes.map(node => node.id);\n  const orderOfNodeIds = toposort.array(nodesForTopo, edgesForTopo);\n  const newNodes = [];\n  orderOfNodeIds.forEach(id => {\n    const node = nodes.find(it => it.id === id);\n    if (node) {\n      newNodes.push(node);\n    }\n  });\n  return newNodes;\n};\nconst getCriticalPath = (canvasData, durations, isNodesSorted) => {\n  const {\n    edges\n  } = canvasData;\n  const nodesSorted = isNodesSorted ? [...canvasData.nodes] : getTopoSortingNodes(canvasData);\n  const allTasks = new Set();\n  const curAllTasksMap = new Map();\n  nodesSorted.reverse().forEach(node => {\n    allTasks === null || allTasks === void 0 ? void 0 : allTasks.forEach(t => {\n      if (!curAllTasksMap.has(t.name)) {\n        curAllTasksMap.set(t.name, t);\n      }\n    });\n    const task = new Task(node.id, durations.get(node.id) || 0, getSuccessors(node.id, edges, curAllTasksMap));\n    allTasks.add(task);\n  });\n  const path = criticalPath(allTasks);\n  const result = new Map();\n  markCriticalPath(path, result, true);\n  return result;\n};\nconst markCriticalPath = (path, ret, isCritical = true, parentTask) => {\n  var _a; // set as critical, only if it's parent task is in the critical path\n\n  if (isCritical && (!parentTask || ((_a = ret.get(parentTask.name)) === null || _a === void 0 ? void 0 : _a.isCritical))) {\n    ret.set(path.name, {\n      task: path,\n      isCritical\n    });\n  } else if (!ret.has(path.name)) {\n    ret.set(path.name, {\n      task: path,\n      isCritical: false\n    });\n  }\n  const {\n    dependencies\n  } = path;\n  if (dependencies.size) {\n    const criticalCostTask = getMaxCriticalCostTask(path.dependencies);\n    markCriticalPath(criticalCostTask, ret, true, path);\n    dependencies.forEach(t => {\n      if (criticalCostTask.name !== t.name) {\n        markCriticalPath(t, ret, false, path);\n      }\n    });\n  }\n}; // get max \"criticalCost\" task among the dependencies\n\nconst getMaxCriticalCostTask = tasks => {\n  let max = -Infinity;\n  let criticalTask = tasks.values().next().value;\n  tasks.forEach(t => {\n    if (t.criticalCost > max) {\n      max = t.criticalCost;\n      criticalTask = t;\n    }\n  });\n  return criticalTask;\n}; // get successor dependencies\n\nconst getSuccessors = (nodeId, edges, allTasksMap) => {\n  const successors = new Set();\n  edges.forEach(e => {\n    if (nodeId === e.source) {\n      const task = allTasksMap.get(e.target);\n      if (task) {\n        successors.add(task);\n      }\n    }\n  });\n  return successors;\n};\nconst checkRectIntersect = (rectA, rectB) => {\n  const isALeftOfB = rectA.maxX < rectB.minX;\n  const isARightOfB = rectA.minX > rectB.maxX;\n  const isABelowB = rectA.minY > rectB.maxY;\n  const isAAboveB = rectA.maxY < rectB.minY;\n  return !(isALeftOfB || isARightOfB || isABelowB || isAAboveB);\n};\nconst isPointInRect = (rect, point) => {\n  const {\n    minX,\n    minY,\n    maxX,\n    maxY\n  } = rect;\n  const {\n    x,\n    y\n  } = point;\n  return x > minX && x < maxX && y > minY && y < maxY;\n};\nconst square = x => Math.pow(x, 2);\nconst distance = (x1, y1, x2, y2) => {\n  return Math.sqrt(square(x2 - x1) + square(y2 - y1));\n};\nconst getLinearFunction = (x1, y1, x2, y2) => {\n  if (x1 === x2) {\n    return () => Number.MAX_SAFE_INTEGER;\n  }\n  return x => (y2 - y1) / (x2 - x1) * x + (y1 * x2 - y2 * x1) / (x2 - x1);\n};\n/**\r\n * (y1 - y2) * x + (x2 - x1) * y + (x1 * y2 - x2 * y1) = 0\r\n * a = y1 - y2\r\n * b = -(x2 - x1) = x1 - x2\r\n * c = -(x1 * y2 - x2 * y1) = x2 * y1 - x1 * y2\r\n *\r\n * a * x - b * y = c\r\n * x = (b * y + c) / a\r\n * y = (a * x - c) / b\r\n */\n\nclass LinearEquation {\n  constructor(x1, y1, x2, y2) {\n    this.a = y1 - y2;\n    this.b = x1 - x2;\n    this.c = x2 * y1 - x1 * y2;\n  }\n  getX(y) {\n    if (this.a === 0) {\n      return undefined;\n    }\n    return (this.b * y + this.c) / this.a;\n  }\n  getY(x) {\n    if (this.b === 0) {\n      return undefined;\n    }\n    return (this.a * x - this.c) / this.b;\n  }\n}\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nconst shallowEqual = (a, b) => {\n  if (!a) {\n    return false;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; i += 1) {\n    if (!is(a[i], b[i])) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction memoize(f, selector) {\n  let prev;\n  let value;\n  return (...args) => {\n    const selectedArgs = selector ? Array.isArray(selector) ? selector : selector.apply(undefined, args) : args;\n    if (shallowEqual(prev, selectedArgs)) {\n      return value;\n    }\n    prev = selectedArgs;\n    value = f.apply(undefined, args);\n    return value;\n  };\n}\nvar Direction;\n(function (Direction) {\n  Direction[Direction[\"X\"] = 0] = \"X\";\n  Direction[Direction[\"Y\"] = 1] = \"Y\";\n  /**\r\n   * zoom to fit in the X and Y directions, maybe the scaleX and the scaleY will different\r\n   */\n\n  Direction[Direction[\"XY\"] = 2] = \"XY\";\n})(Direction || (Direction = {}));\nconst isViewportComplete = viewport => {\n  return !!viewport.rect;\n};\nconst isViewportEmpty = viewport => {\n  if (!isViewportComplete(viewport)) {\n    return true;\n  }\n  return !viewport.rect.width || !viewport.rect.height;\n};\nconst getNodeRect = (node, graphConfig) => {\n  const {\n    x,\n    y\n  } = node;\n  const {\n    width,\n    height\n  } = getNodeSize(node, graphConfig);\n  return {\n    x,\n    y,\n    width,\n    height\n  };\n};\nconst isNodeVisible = (node, viewport, graphConfig) => {\n  return isRectVisible(getNodeRect(node, graphConfig), viewport);\n};\nconst isRectVisible = (shapeRect, viewport) => {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = shapeRect;\n  return isPointVisible({\n    x,\n    y\n  }, viewport) || isPointVisible({\n    x: x + width,\n    y\n  }, viewport) || isPointVisible({\n    x: x + width,\n    y: y + height\n  }, viewport) || isPointVisible({\n    x,\n    y: y + height\n  }, viewport);\n};\nconst isPointVisible = (point, viewport) => {\n  const {\n    x,\n    y\n  } = getContainerClientPoint(point.x, point.y, viewport);\n  const {\n    height,\n    width\n  } = viewport.rect;\n  return x > 0 && x < width && y > 0 && y < height;\n};\nconst getVisibleNodes = (nodes, viewport, graphConfig) => {\n  const result = [];\n  nodes.forEach(n => {\n    if (isNodeVisible(n, viewport, graphConfig)) {\n      result.push(n.inner);\n    }\n  });\n  return result;\n}; // Get rendered nodes count\n\nconst getRenderedNodes = (nodes, viewport) => {\n  const result = [];\n  const renderedArea = getRenderedArea(viewport);\n  nodes.forEach(n => {\n    if (isNodeInRenderedArea(n, renderedArea)) {\n      result.push(n.inner);\n    }\n  });\n  return result;\n};\nconst isNodeInRenderedArea = (node, renderedArea) => {\n  return isPointInRect(renderedArea, node);\n}; // Get rendered edges count\n\nconst getRenderedEdges = (edges, nodes, graphConfig, viewport) => {\n  const result = [];\n  const renderedArea = getRenderedArea(viewport);\n  edges.forEach(e => {\n    const edgeCoordinate = getEdgeSourceTargetCoordinate(e, nodes, graphConfig);\n    if (edgeCoordinate.source && edgeCoordinate.target && isEdgeInRenderedArea(edgeCoordinate.source, edgeCoordinate.target, renderedArea)) {\n      result.push(e.inner);\n    }\n  });\n  return result;\n};\nconst isEdgeInRenderedArea = (source, target, renderedArea) => {\n  const isSourceVisible = isPointInRect(renderedArea, source);\n  const isTargetVisible = isPointInRect(renderedArea, target);\n  return isSourceVisible || isTargetVisible;\n};\nconst getVisibleArea = viewport => {\n  if (!isViewportComplete(viewport)) {\n    return {\n      minX: 0,\n      minY: 0,\n      maxX: 0,\n      maxY: 0\n    };\n  }\n  const {\n    rect,\n    transformMatrix\n  } = viewport;\n  const minX = 0;\n  const minY = 0;\n  const maxX = rect.width;\n  const maxY = rect.height;\n  const min = reverseTransformPoint(minX, minY, transformMatrix);\n  const max = reverseTransformPoint(maxX, maxY, transformMatrix);\n  return {\n    minX: min.x,\n    minY: min.y,\n    maxX: max.x,\n    maxY: max.y\n  };\n};\nconst getRenderedArea = viewport => {\n  if (!isViewportComplete(viewport)) {\n    return {\n      minX: 0,\n      minY: 0,\n      maxX: 0,\n      maxY: 0\n    };\n  }\n  const {\n    rect,\n    transformMatrix\n  } = viewport;\n  const minX = 0;\n  const minY = 0;\n  const maxX = rect.width;\n  const maxY = rect.height;\n  const min = reverseTransformPoint(minX - rect.width, minY - rect.height, transformMatrix);\n  const max = reverseTransformPoint(maxX + rect.width, maxY + rect.height, transformMatrix);\n  return {\n    minX: min.x,\n    minY: min.y,\n    maxX: max.x,\n    maxY: max.y\n  };\n};\nconst getEdgeSourceTargetCoordinate = (edge, nodes, graphConfig) => {\n  var _a, _b;\n  return {\n    source: (_a = nodes.get(edge.source)) === null || _a === void 0 ? void 0 : _a.getPortPosition(edge.sourcePortId, graphConfig),\n    target: (_b = nodes.get(edge.target)) === null || _b === void 0 ? void 0 : _b.getPortPosition(edge.targetPortId, graphConfig)\n  };\n};\nconst normalizeSpacing = spacing => {\n  if (!spacing) {\n    return {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    };\n  }\n  if (typeof spacing === \"number\") {\n    return {\n      top: spacing,\n      right: spacing,\n      bottom: spacing,\n      left: spacing\n    };\n  }\n  return Object.assign({\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }, spacing);\n};\n/**\r\n * zoom to [scale]\r\n */\n\nconst zoomTo = ({\n  scale,\n  anchor,\n  direction,\n  limitScale\n}) => {\n  return prevState => {\n    const scaleX = limitScale(scale) / prevState.transformMatrix[0];\n    const scaleY = limitScale(scale) / prevState.transformMatrix[3];\n    const {\n      x,\n      y\n    } = anchor;\n    const dx = x * (1 - scaleX);\n    const dy = y * (1 - scaleY);\n    let transformMatrix;\n    switch (direction) {\n      case Direction.X:\n        transformMatrix = [scale, 0, 0, prevState.transformMatrix[3], prevState.transformMatrix[4] * scaleX + dx, prevState.transformMatrix[5]];\n        break;\n      case Direction.Y:\n        transformMatrix = [prevState.transformMatrix[0], 0, 0, scale, prevState.transformMatrix[4], prevState.transformMatrix[5] * scaleY + dy];\n        break;\n      case Direction.XY:\n      default:\n        transformMatrix = [scale, 0, 0, scale, prevState.transformMatrix[4] * scaleX + dx, prevState.transformMatrix[5] * scaleY + dy];\n    }\n    return Object.assign(Object.assign({}, prevState), {\n      transformMatrix\n    });\n  };\n};\nconst zoom = ({\n  scale,\n  anchor,\n  direction,\n  limitScale\n}) => {\n  if (scale === 1) {\n    return identical;\n  }\n  return prevState => {\n    let transformMatrix;\n    switch (direction) {\n      case Direction.X:\n        return zoomTo({\n          anchor,\n          direction,\n          limitScale,\n          scale: prevState.transformMatrix[0] * scale\n        })(prevState);\n      case Direction.Y:\n        return zoomTo({\n          anchor,\n          direction,\n          limitScale,\n          scale: prevState.transformMatrix[3] * scale\n        })(prevState);\n      case Direction.XY:\n      default:\n        {\n          const resultX = limitScale(prevState.transformMatrix[0] * scale);\n          const resultY = limitScale(prevState.transformMatrix[3] * scale);\n          const scaleX = resultX / prevState.transformMatrix[0];\n          const scaleY = resultY / prevState.transformMatrix[3];\n          const {\n            x,\n            y\n          } = anchor;\n          const dx = x * (1 - scaleX);\n          const dy = y * (1 - scaleY);\n          transformMatrix = [resultX, 0, 0, resultY, prevState.transformMatrix[4] * scaleX + dx, prevState.transformMatrix[5] * scaleY + dy];\n        }\n    }\n    return Object.assign(Object.assign({}, prevState), {\n      transformMatrix\n    });\n  };\n};\nconst pan = (dx, dy) => {\n  if (dx === 0 && dy === 0) {\n    return identical;\n  }\n  return prevState => {\n    return Object.assign(Object.assign({}, prevState), {\n      transformMatrix: [prevState.transformMatrix[0], prevState.transformMatrix[1], prevState.transformMatrix[2], prevState.transformMatrix[3], prevState.transformMatrix[4] + dx, prevState.transformMatrix[5] + dy]\n    });\n  };\n};\nconst minimapPan = (dx, dy) => {\n  if (dx === 0 && dy === 0) {\n    return identical;\n  }\n  return prevState => {\n    const [a, b, c, d] = prevState.transformMatrix;\n    return Object.assign(Object.assign({}, prevState), {\n      transformMatrix: [a, b, c, d, prevState.transformMatrix[4] + a * dx + b * dy, prevState.transformMatrix[5] + c * dx + d * dy]\n    });\n  };\n};\nconst getContentArea$1 = (data, graphConfig, nodeIds) => {\n  let minNodeWidth = Infinity;\n  let minNodeHeight = Infinity;\n  let minNodeX = Infinity;\n  let minNodeY = Infinity;\n  let maxNodeX = -Infinity;\n  let maxNodeY = -Infinity;\n  const forEachNode = fn => data.nodes.forEach(fn);\n  const forEachByIds = fn => nodeIds === null || nodeIds === void 0 ? void 0 : nodeIds.forEach(id => {\n    const node = data.nodes.get(id);\n    if (node) {\n      fn(node);\n    }\n  });\n  const forEach = nodeIds === undefined ? forEachNode : forEachByIds;\n  forEach(node => {\n    const {\n      width: nodeWidth,\n      height: nodeHeight\n    } = getNodeSize(node, graphConfig);\n    if (node.x < minNodeX) {\n      minNodeX = node.x;\n    }\n    if (node.y < minNodeY) {\n      minNodeY = node.y;\n    }\n    if (node.x + nodeWidth > maxNodeX) {\n      maxNodeX = node.x + nodeWidth;\n    }\n    if (node.y + nodeHeight > maxNodeY) {\n      maxNodeY = node.y + nodeHeight;\n    }\n    if (nodeWidth < minNodeWidth) {\n      minNodeWidth = nodeWidth;\n    }\n    if (nodeHeight < minNodeHeight) {\n      minNodeHeight = nodeHeight;\n    }\n  });\n  return {\n    minNodeWidth,\n    minNodeHeight,\n    minNodeX,\n    minNodeY,\n    maxNodeX,\n    maxNodeY\n  };\n};\nconst normalizeNodeVisibleMinMax = ({\n  nodeMinVisibleSize,\n  nodeMaxVisibleSize\n}) => {\n  let {\n    width: nodeMinVisibleWidth,\n    height: nodeMinVisibleHeight\n  } = nodeMinVisibleSize;\n  let {\n    width: nodeMaxVisibleWidth,\n    height: nodeMaxVisibleHeight\n  } = nodeMaxVisibleSize;\n  if (nodeMinVisibleWidth > nodeMaxVisibleWidth) {\n    const temp = nodeMinVisibleWidth;\n    nodeMinVisibleWidth = nodeMaxVisibleWidth;\n    nodeMaxVisibleWidth = temp;\n  }\n  if (nodeMinVisibleHeight > nodeMaxVisibleHeight) {\n    const temp = nodeMinVisibleHeight;\n    nodeMinVisibleHeight = nodeMaxVisibleHeight;\n    nodeMaxVisibleHeight = temp;\n  }\n  return {\n    nodeMinVisibleWidth,\n    nodeMinVisibleHeight,\n    nodeMaxVisibleWidth,\n    nodeMaxVisibleHeight\n  };\n};\nconst getScaleRange = (params, {\n  width: minNodeWidth,\n  height: minNodeHeight\n}) => {\n  const {\n    nodeMinVisibleWidth,\n    nodeMinVisibleHeight,\n    nodeMaxVisibleWidth,\n    nodeMaxVisibleHeight\n  } = normalizeNodeVisibleMinMax(params);\n  let minScaleX = 0;\n  let minScaleY = 0;\n  let maxScaleX = Infinity;\n  let maxScaleY = Infinity;\n  if (minNodeWidth) {\n    minScaleX = nodeMinVisibleWidth / minNodeWidth;\n    maxScaleX = nodeMaxVisibleWidth / minNodeWidth;\n  }\n  if (minNodeHeight) {\n    minScaleY = nodeMinVisibleHeight / minNodeHeight;\n    maxScaleY = nodeMaxVisibleHeight / minNodeHeight;\n  }\n  return {\n    minScaleX,\n    minScaleY,\n    maxScaleX,\n    maxScaleY\n  };\n};\nconst getZoomFitMatrix = args => {\n  const {\n    data,\n    graphConfig,\n    disablePan,\n    direction,\n    rect\n  } = args;\n  const {\n    nodes\n  } = data; // istanbul ignore next\n\n  if (nodes.size === 0) {\n    return [1, 0, 0, 1, 0, 0];\n  }\n  const {\n    minNodeWidth,\n    minNodeHeight,\n    minNodeX,\n    minNodeY,\n    maxNodeX,\n    maxNodeY\n  } = getContentArea$1(data, graphConfig);\n  const {\n    minScaleX,\n    minScaleY,\n    maxScaleX,\n    maxScaleY\n  } = getScaleRange(args, {\n    width: minNodeWidth,\n    height: minNodeHeight\n  });\n  const spacing = normalizeSpacing(args.spacing);\n  const {\n    width,\n    height\n  } = rect;\n  const scaleX = width / (maxNodeX - minNodeX + spacing.left + spacing.right);\n  const scaleY = height / (maxNodeY - minNodeY + spacing.top + spacing.bottom);\n  const scaleCommon = direction === Direction.Y ? Math.min(Math.max(minScaleX, minScaleY, scaleY), maxScaleX, maxScaleY) : Math.min(Math.max(minScaleX, minScaleY, Math.min(scaleX, scaleY)), maxScaleY, maxScaleY);\n  const newScaleX = direction === Direction.XY ? Math.min(Math.max(minScaleX, scaleX), maxScaleX) : scaleCommon;\n  const newScaleY = direction === Direction.XY ? Math.min(Math.max(minScaleY, scaleY), maxScaleY) : scaleCommon;\n  if (disablePan) {\n    return [newScaleX, 0, 0, newScaleY, 0, 0];\n  }\n  const dx = -newScaleX * (minNodeX - spacing.left);\n  const dy = -newScaleY * (minNodeY - spacing.top);\n  const visibleNodes = getVisibleNodes(data.nodes, {\n    rect,\n    transformMatrix: [newScaleX, 0, 0, newScaleY, dx, dy]\n  }, graphConfig);\n  if (visibleNodes.length > 0) {\n    return [newScaleX, 0, 0, newScaleY, dx, dy];\n  } // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n  let focusNode = data.nodes.first();\n  if (focusNode) {\n    data.nodes.forEach(node => {\n      if (focusNode.y > node.y) {\n        focusNode = node;\n      }\n    });\n  }\n  return [newScaleX, 0, 0, newScaleY, -newScaleX * (focusNode.x - spacing.left), -newScaleY * (focusNode.y - spacing.top)];\n};\nconst focusArea = (minX, minY, maxX, maxY, viewport) => {\n  const width = maxX - minX;\n  const height = maxY - minY;\n  const scale = Math.min(viewport.rect.width / width, viewport.rect.height / height);\n  const dx = -scale * (minX + width / 2) + viewport.rect.width / 2;\n  const dy = -scale * (minY + height / 2) + viewport.rect.height / 2;\n  return Object.assign(Object.assign({}, viewport), {\n    transformMatrix: [scale, 0, 0, scale, dx, dy]\n  });\n};\nconst getContainer = svgRef => {\n  var _a;\n  return (_a = svgRef.current) === null || _a === void 0 ? void 0 : _a.closest(\".react-dag-editor-container\");\n};\n/**\r\n * @param rectRef\r\n */\n\nfunction getContainerCenter(rectRef) {\n  const rect = rectRef.current;\n  if (!rect) {\n    return undefined;\n  }\n  const x = rect.width / 2;\n  const y = rect.height / 2;\n  return {\n    x,\n    y\n  };\n}\n/**\r\n * @param rect\r\n * @param e\r\n */\n\nfunction getRelativePoint(rect, e) {\n  const x = e.clientX - rect.left;\n  const y = e.clientY - rect.top;\n  return {\n    x,\n    y\n  };\n} // scroll the (x,y) to the center of the viewport, or to the specific position if provide\n\nconst scrollIntoView = (x, y, rect, alwaysScroll, position) => {\n  // istanbul ignore next\n  if (!rect) {\n    return identical;\n  }\n  const {\n    width,\n    height\n  } = rect;\n  const shouldScroll = x < 0 || x > width || y < 0 || y > height;\n  if (!shouldScroll && !alwaysScroll) {\n    return identical;\n  }\n  return prevState => {\n    const dx = position ? position.x - x : width / 2 - x;\n    const dy = position ? position.y - y : height / 2 - y;\n    return Object.assign(Object.assign({}, prevState), {\n      transformMatrix: [prevState.transformMatrix[0], prevState.transformMatrix[1], prevState.transformMatrix[2], prevState.transformMatrix[3], prevState.transformMatrix[4] + dx, prevState.transformMatrix[5] + dy]\n    });\n  };\n};\nconst getScaleLimit = (data, settings) => {\n  const {\n    minNodeWidth,\n    minNodeHeight\n  } = getContentArea$1(data, settings.graphConfig);\n  const {\n    minScaleX,\n    minScaleY\n  } = getScaleRange(settings, {\n    width: minNodeWidth,\n    height: minNodeHeight\n  });\n  return Math.max(minScaleX, minScaleY);\n};\nconst getContentArea = memoize(getContentArea$1);\nconst getOffsetLimit = ({\n  data,\n  graphConfig,\n  rect,\n  transformMatrix,\n  canvasBoundaryPadding,\n  groupPadding\n}) => {\n  var _a, _b, _c, _d;\n  const contentArea = getContentArea(data, graphConfig);\n  const nodeMin = getClientDeltaByPointDelta(contentArea.minNodeX - ((groupPadding === null || groupPadding === void 0 ? void 0 : groupPadding.left) || 0), contentArea.minNodeY - ((groupPadding === null || groupPadding === void 0 ? void 0 : groupPadding.top) || 0), transformMatrix);\n  nodeMin.x -= (_a = canvasBoundaryPadding === null || canvasBoundaryPadding === void 0 ? void 0 : canvasBoundaryPadding.left) !== null && _a !== void 0 ? _a : 0;\n  nodeMin.y -= (_b = canvasBoundaryPadding === null || canvasBoundaryPadding === void 0 ? void 0 : canvasBoundaryPadding.top) !== null && _b !== void 0 ? _b : 0;\n  const nodeMax = getClientDeltaByPointDelta(contentArea.maxNodeX + ((groupPadding === null || groupPadding === void 0 ? void 0 : groupPadding.right) || 0), contentArea.maxNodeY + ((groupPadding === null || groupPadding === void 0 ? void 0 : groupPadding.bottom) || 0), transformMatrix);\n  nodeMax.x += (_c = canvasBoundaryPadding === null || canvasBoundaryPadding === void 0 ? void 0 : canvasBoundaryPadding.right) !== null && _c !== void 0 ? _c : 0;\n  nodeMax.y += (_d = canvasBoundaryPadding === null || canvasBoundaryPadding === void 0 ? void 0 : canvasBoundaryPadding.bottom) !== null && _d !== void 0 ? _d : 0;\n  let minX = -nodeMin.x || 0;\n  let minY = -nodeMin.y || 0;\n  let maxX = rect.width - nodeMax.x || 0;\n  let maxY = rect.height - nodeMax.y || 0;\n  if (maxX < minX) {\n    const temp = maxX;\n    maxX = minX;\n    minX = temp;\n  }\n  if (maxY < minY) {\n    const temp = maxY;\n    maxY = minY;\n    minY = temp;\n  }\n  return {\n    minX,\n    minY,\n    maxX,\n    maxY\n  };\n};\nconst pushHistory = (history, data, mapPresent = identical) => {\n  return {\n    present: data,\n    past: {\n      next: history.past,\n      value: mapPresent(history.present)\n    },\n    future: null\n  };\n};\nconst undo = history => {\n  if (!history.past) {\n    return history;\n  }\n  return {\n    present: history.past.value,\n    past: history.past.next,\n    future: {\n      next: history.future,\n      value: history.present\n    }\n  };\n};\nconst redo = history => {\n  if (!history.future) {\n    return history;\n  }\n  return {\n    present: history.future.value,\n    past: {\n      next: history.past,\n      value: history.present\n    },\n    future: history.future.next\n  };\n};\nconst resetUndoStack = data => {\n  return {\n    present: data,\n    future: null,\n    past: null\n  };\n};\nconst canUndo = history => history.past !== null;\nconst canRedo = history => history.future !== null;\nconst isWithinThreshold = (dx, dy, threshold) => {\n  return Math.abs(dx) < threshold && Math.abs(dy) < threshold;\n};\nconst isWithinRect = (p0, p, w, h) => {\n  const {\n    x: x0,\n    y: y0\n  } = p0;\n  const {\n    x,\n    y\n  } = p;\n  if (x0 < x && x0 + w > x && y0 < y && y0 + h > y) {\n    return true;\n  }\n  return false;\n};\nfunction stopPropagation(e) {\n  e.stopPropagation();\n}\n\n/**\r\n * @param valueOrCallback\r\n * @param c\r\n */\nfunction resolveValueOrCallback(valueOrCallback, c) {\n  if (typeof valueOrCallback === \"function\") {\n    return valueOrCallback(c);\n  }\n  return valueOrCallback;\n}\nconst EMPTY_TRANSFORM_MATRIX = [1, 0, 0, 1, 0, 0];\nconst EMPTY_VIEW_PORT = {\n  rect: undefined,\n  transformMatrix: EMPTY_TRANSFORM_MATRIX\n};\nconst EMPTY_GAP = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\nconst DEFAULT_NODE_MIN_VISIBLE_SIZE = {\n  width: NODE_MIN_VISIBLE_LENGTH,\n  height: NODE_MIN_VISIBLE_LENGTH\n};\nconst DEFAULT_NODE_MAX_VISIBLE_SIZE = {\n  width: NODE_MAX_VISIBLE_LENGTH,\n  height: NODE_MAX_VISIBLE_LENGTH\n};\nconst DEFAULT_GRAPH_SETTINGS = {\n  features: defaultFeatures,\n  graphConfig: GraphConfigBuilder.default().build(),\n  canvasBoundaryPadding: EMPTY_GAP,\n  nodeMinVisibleSize: DEFAULT_NODE_MIN_VISIBLE_SIZE,\n  nodeMaxVisibleSize: DEFAULT_NODE_MAX_VISIBLE_SIZE\n};\nconst EMPTY_GRAPH_STATE = createGraphState({});\nfunction createGraphState(params) {\n  const {\n    data,\n    transformMatrix,\n    settings\n  } = params;\n  return {\n    settings: Object.assign(Object.assign({}, DEFAULT_GRAPH_SETTINGS), settings),\n    data: resetUndoStack(data !== null && data !== void 0 ? data : GraphModel.empty()),\n    viewport: {\n      rect: undefined,\n      transformMatrix: transformMatrix !== null && transformMatrix !== void 0 ? transformMatrix : EMPTY_TRANSFORM_MATRIX\n    },\n    behavior: GraphBehavior.Default,\n    dummyNodes: emptyDummyNodes(),\n    alignmentLines: [],\n    activeKeys: new Set(),\n    selectBoxPosition: emptySelectBoxPosition(),\n    connectState: undefined\n  };\n}\nconst ViewportContext = /*#__PURE__*/createContext(EMPTY_VIEW_PORT);\n\n/**\r\n *\r\n */\n\nfunction warnGraphStateContext() {\n  Debug.warn(\"Missing GraphStateContext, GraphStateContext must be used as child of GraphStateStore\");\n}\nconst defaultGraphStateContext = {\n  get state() {\n    warnGraphStateContext();\n    return EMPTY_GRAPH_STATE;\n  },\n  dispatch: () => {\n    warnGraphStateContext();\n  }\n};\nconst EMPTY_CONNECT_STATE = {\n  sourceNode: undefined,\n  sourcePort: undefined,\n  targetNode: undefined,\n  targetPort: undefined,\n  movingPoint: {\n    x: 0,\n    y: 0\n  }\n};\n/**\r\n * use separate context for now to improve performance\r\n * until https://github.com/reactjs/rfcs/pull/119 or something equivalent\r\n */\n\nconst GraphValueContext = /*#__PURE__*/React.createContext(new Proxy(GraphModel.empty(), {\n  get: (target, prop) => {\n    // eslint-disable-next-line no-console\n    console.warn(\"Default graph data value is being used. Please check if you forget rendering Graph component\");\n    return Reflect.get(target, prop);\n  }\n}));\nconst GraphStateContext = /*#__PURE__*/React.createContext(defaultGraphStateContext);\nconst setData = (state, data) => Object.assign(Object.assign({}, state), {\n  data: Object.assign(Object.assign({}, state.data), {\n    present: data\n  })\n});\nconst updateData = (state, f) => Object.assign(Object.assign({}, state), {\n  data: Object.assign(Object.assign({}, state.data), {\n    present: f(state.data.present)\n  })\n});\nconst SlotsContext = /*#__PURE__*/createContext({});\nclass EventChannel {\n  constructor() {\n    this.listenersRef = /*#__PURE__*/createRef();\n    this.externalHandlerRef = /*#__PURE__*/createRef();\n    this.queue = [];\n    this.working = false;\n  }\n  trigger(event) {\n    if (this.working) {\n      this.queue.push(event);\n    } else {\n      this.working = true;\n      unstable_batchedUpdates(() => {\n        this.callHandlers(event); // eslint-disable-next-line @typescript-eslint/prefer-for-of\n\n        for (let i = 0; i < this.queue.length; i += 1) {\n          const e = this.queue[i];\n          this.callHandlers(e);\n        }\n        this.queue = [];\n      });\n      this.working = false;\n    }\n  }\n  batch(events) {\n    if (this.working) {\n      this.queue.push(...events);\n    } else {\n      const first = events[0];\n      if (!first) {\n        return;\n      }\n      this.queue.push(...events.slice(1));\n      this.trigger(first);\n    }\n  }\n  callHandlers(e) {\n    var _a, _b, _c, _d;\n    (_b = (_a = this.listenersRef).current) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n    if (!e.intercepted) {\n      (_d = (_c = this.externalHandlerRef).current) === null || _d === void 0 ? void 0 : _d.call(_c, e);\n    }\n  }\n}\n\n/**\r\n * event handlers must get/set GraphBehavior immediately\r\n * to determine how to treat event objects (eg. preventDefault)\r\n * but dispatch/setState can be asynchronous\r\n * thus GraphBehavior is mirrored here\r\n */\n\nclass GraphController {\n  constructor(state, dispatch) {\n    /**\r\n     * since we don't have a detailed specification for touch handling\r\n     * temporarily store the pointerId here for most single point events\r\n     */\n    this.pointerId = null;\n    /**\r\n     * simulate canvas click event once\r\n     */\n\n    this.canvasClickOnce = false;\n    this.nodeClickOnce = null;\n    this.eventChannel = new EventChannel();\n    this.behavior = GraphBehavior.Default;\n    this.dispatch = (action, callback) => {\n      this.dispatchDelegate(action, callback);\n    };\n    this.state = state;\n    this.UNSAFE_latestState = state;\n    this.dispatchDelegate = dispatch;\n  }\n  setMouseClientPosition(pos) {\n    this.mouseClientPoint = pos;\n  }\n  unsetMouseClientPosition() {\n    this.mouseClientPoint = undefined;\n  }\n  getMouseClientPosition() {\n    return this.mouseClientPoint;\n  }\n  getEnabledFeatures() {\n    return this.state.settings.features;\n  }\n  getBehavior() {\n    return this.behavior;\n  }\n  setBehavior(value) {\n    this.behavior = value;\n  }\n  getData() {\n    return this.state.data.present;\n  }\n  getGlobalEventTarget() {\n    var _a, _b;\n    return (_b = (_a = this.getGlobalEventTargetDelegate) === null || _a === void 0 ? void 0 : _a.call(this)) !== null && _b !== void 0 ? _b : window;\n  }\n}\n\n/**\r\n * useConst providers a guaranteed singleton\r\n * useMemo may be invalidated by React\r\n * https://reactjs.org/docs/hooks-faq.html#how-to-memoize-calculations\r\n * @param init\r\n */\n\nfunction useConst(init) {\n  const ref = useRef();\n  if (ref.current === undefined) {\n    ref.current = init();\n  }\n  return ref.current;\n}\nconst noop = () => {// noop\n};\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true,\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n    this.setState({\n      error,\n      errorInfo\n    });\n  }\n  render() {\n    var _a, _b;\n    if (!this.state.hasError) {\n      return this.props.children;\n    }\n    if (this.props.renderOnError) {\n      return (_a = this.props.renderOnError(this.state.error, this.state.errorInfo, this.props.children)) !== null && _a !== void 0 ? _a : null;\n    }\n    const componentStackLines = this.state.errorInfo ? (_b = this.state.errorInfo.componentStack) === null || _b === void 0 ? void 0 : _b.split(\"\\n\") : [];\n    return jsxs(\"div\", Object.assign({\n      style: {\n        color: \"red\"\n      }\n    }, {\n      children: [jsx(\"h1\", {\n        children: \"Something went wrong.\"\n      }), jsx(\"p\", {\n        children: `Error: ${this.state.error}`\n      }), jsx(\"p\", {\n        children: `ErrorInfo: ${JSON.stringify(this.state.errorInfo)}`\n      }), jsx(\"h2\", {\n        children: \"Component Stack\"\n      }), (componentStackLines !== null && componentStackLines !== void 0 ? componentStackLines : []).map((line, index) => jsx(\"p\", {\n        children: line\n      }, index))]\n    }));\n  }\n}\nconst EMPTY_CONNECT_CONTEXT = {\n  sourceNode: undefined,\n  sourcePort: undefined,\n  targetNode: undefined,\n  targetPort: undefined\n};\nconst ConnectingStateContext = /*#__PURE__*/createContext(EMPTY_CONNECT_CONTEXT);\nConnectingStateContext.displayName = \"ConnectingStateContext\";\nconst ConnectingState = ({\n  children,\n  data,\n  connectState\n}) => {\n  let sourceNode;\n  let sourcePort;\n  let targetNode;\n  let targetPort;\n  if (connectState) {\n    sourceNode = data.nodes.get(connectState.sourceNode);\n    sourcePort = sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.getPort(connectState.sourcePort);\n    targetNode = connectState.targetNode ? data.nodes.get(connectState.targetNode) : undefined;\n    targetPort = connectState.targetPort ? targetNode === null || targetNode === void 0 ? void 0 : targetNode.getPort(connectState.targetPort) : undefined;\n  }\n  const context = React.useMemo(() => ({\n    sourceNode,\n    sourcePort,\n    targetNode,\n    targetPort\n  }), [sourceNode, sourcePort, targetNode, targetPort]);\n  return jsx(ConnectingStateContext.Provider, Object.assign({\n    value: context\n  }, {\n    children: children\n  }));\n};\nConnectingState.displayName = \"ConnectingState\";\nconst AlignmentLinesContext = /*#__PURE__*/createContext([]);\nconst GraphControllerContext = /*#__PURE__*/createContext(new GraphController(EMPTY_GRAPH_STATE, noop));\nfunction GraphStateStore(props) {\n  const {\n    graphController,\n    state,\n    dispatch,\n    children\n  } = props;\n  const contextValue = React.useMemo(() => ({\n    state: state,\n    dispatch\n  }), [state, dispatch]);\n  return jsx(GraphConfigContext.Provider, Object.assign({\n    value: state.settings.graphConfig\n  }, {\n    children: jsx(GraphControllerContext.Provider, Object.assign({\n      value: graphController\n    }, {\n      children: jsx(ConnectingState, Object.assign({\n        data: state.data.present,\n        connectState: state.connectState\n      }, {\n        children: jsx(GraphStateContext.Provider, Object.assign({\n          value: contextValue\n        }, {\n          children: jsx(ViewportContext.Provider, Object.assign({\n            value: state.viewport\n          }, {\n            children: jsx(GraphValueContext.Provider, Object.assign({\n              value: state.data.present\n            }, {\n              children: jsx(AlignmentLinesContext.Provider, Object.assign({\n                value: state.alignmentLines\n              }, {\n                children: children\n              }))\n            }))\n          }))\n        }))\n      }))\n    }))\n  }));\n}\n\n/**\r\n * ReactDagEditor top level container component\r\n *\r\n * @param props\r\n */\n\nconst ReactDagEditor = props => {\n  var _a;\n  React.useEffect(() => {\n    if (props.handleWarning) {\n      Debug.warn = props.handleWarning;\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleError = (_a = props.handleError) === null || _a === void 0 ? void 0 : _a.bind(null);\n  const {\n    state,\n    dispatch,\n    getGlobalEventTarget\n  } = props;\n  const graphController = useConst(() => new GraphController(state, dispatch));\n  graphController.UNSAFE_latestState = state;\n  React.useLayoutEffect(() => {\n    graphController.state = state;\n    graphController.dispatchDelegate = dispatch;\n    graphController.getGlobalEventTargetDelegate = getGlobalEventTarget;\n  }, [dispatch, getGlobalEventTarget, graphController, state]);\n  React.useEffect(() => {\n    return () => {\n      graphController.dispatchDelegate = noop;\n    };\n  }, [graphController]);\n  return jsx(ErrorBoundary, Object.assign({\n    renderOnError: handleError\n  }, {\n    children: jsx(SlotsContext.Provider, Object.assign({\n      value: props\n    }, {\n      children: jsx(GraphStateStore, Object.assign({\n        state: state,\n        dispatch: dispatch,\n        graphController: graphController\n      }, {\n        children: jsx(ContextMenuConfigContext.Provider, Object.assign({\n          value: useConst(() => new ContextMenuConfig())\n        }, {\n          children: jsx(\"div\", Object.assign({\n            style: props.style,\n            className: props.className\n          }, {\n            children: props.children\n          }))\n        }))\n      }))\n    }))\n  }));\n};\nconst useContextMenuConfigContext = () => {\n  return React.useContext(ContextMenuConfigContext);\n};\nvar GraphNodeEvent;\n(function (GraphNodeEvent) {\n  GraphNodeEvent[\"Click\"] = \"[Node]Click\";\n  GraphNodeEvent[\"DoubleClick\"] = \"[Node]DoubleClick\";\n  GraphNodeEvent[\"MouseDown\"] = \"[Node]MouseDown\";\n  GraphNodeEvent[\"MouseUp\"] = \"[Node]MouseUp\";\n  GraphNodeEvent[\"MouseEnter\"] = \"[Node]MouseEnter\";\n  GraphNodeEvent[\"MouseLeave\"] = \"[Node]MouseLeave\";\n  GraphNodeEvent[\"MouseOver\"] = \"[Node]MouseOver\";\n  GraphNodeEvent[\"MouseOut\"] = \"[Node]MouseOut\";\n  GraphNodeEvent[\"MouseMove\"] = \"[Node]MouseMove\";\n  GraphNodeEvent[\"ContextMenu\"] = \"[Node]ContextMenu\";\n  GraphNodeEvent[\"Drag\"] = \"[Node]Drag\";\n  GraphNodeEvent[\"DragStart\"] = \"[Node]DragStart\";\n  GraphNodeEvent[\"DragEnd\"] = \"[Node]DragEnd\";\n  GraphNodeEvent[\"PointerDown\"] = \"[Node]PointerDown\";\n  GraphNodeEvent[\"PointerEnter\"] = \"[Node]PointerEnter\";\n  GraphNodeEvent[\"PointerMove\"] = \"[Node]PointerMove\";\n  GraphNodeEvent[\"PointerLeave\"] = \"[Node]PointerLeave\";\n  GraphNodeEvent[\"PointerUp\"] = \"[Node]PointerUp\";\n  GraphNodeEvent[\"Resizing\"] = \"[Node]Resizing\";\n  GraphNodeEvent[\"ResizingStart\"] = \"[Node]ResizingStart\";\n  GraphNodeEvent[\"ResizingEnd\"] = \"[Node]ResizingEnd\";\n  GraphNodeEvent[\"KeyDown\"] = \"[Node]KeyDown\";\n  GraphNodeEvent[\"Select\"] = \"[Node]Select\";\n  GraphNodeEvent[\"SelectAll\"] = \"[Node]SelectAll\";\n  GraphNodeEvent[\"Centralize\"] = \"[Node]Centralize\";\n  GraphNodeEvent[\"Locate\"] = \"[Node]Locate\";\n  GraphNodeEvent[\"Add\"] = \"[Node]Add\";\n})(GraphNodeEvent || (GraphNodeEvent = {}));\nvar GraphEdgeEvent;\n(function (GraphEdgeEvent) {\n  GraphEdgeEvent[\"Click\"] = \"[Edge]Click\";\n  GraphEdgeEvent[\"DoubleClick\"] = \"[Edge]DoubleClick\";\n  GraphEdgeEvent[\"MouseEnter\"] = \"[Edge]MouseEnter\";\n  GraphEdgeEvent[\"MouseLeave\"] = \"[Edge]MouseLeave\";\n  GraphEdgeEvent[\"MouseOver\"] = \"[Edge]MouseOver\";\n  GraphEdgeEvent[\"MouseOut\"] = \"[Edge]MouseOut\";\n  GraphEdgeEvent[\"MouseMove\"] = \"[Edge]MouseMove\";\n  GraphEdgeEvent[\"MouseDown\"] = \"[Edge]MouseDown\";\n  GraphEdgeEvent[\"MouseUp\"] = \"[Edge]MouseUp\";\n  GraphEdgeEvent[\"ContextMenu\"] = \"[Edge]ContextMenu\";\n  GraphEdgeEvent[\"ConnectStart\"] = \"[Edge]ConnectStart\";\n  GraphEdgeEvent[\"ConnectMove\"] = \"[Edge]ConnectMove\";\n  GraphEdgeEvent[\"ConnectEnd\"] = \"[Edge]ConnectEnd\";\n  GraphEdgeEvent[\"ConnectNavigate\"] = \"[Edge]ConnectNavigate\";\n  GraphEdgeEvent[\"Add\"] = \"[Edge]Add\";\n})(GraphEdgeEvent || (GraphEdgeEvent = {}));\nvar GraphPortEvent;\n(function (GraphPortEvent) {\n  GraphPortEvent[\"Click\"] = \"[Port]Click\";\n  GraphPortEvent[\"DoubleClick\"] = \"[Port]DoubleClick\";\n  GraphPortEvent[\"MouseDown\"] = \"[Port]MouseDown\";\n  GraphPortEvent[\"PointerDown\"] = \"[Port]PointerDown\";\n  GraphPortEvent[\"PointerUp\"] = \"[Port]PointerUp\";\n  GraphPortEvent[\"PointerEnter\"] = \"[Port]PointerEnter\";\n  GraphPortEvent[\"PointerLeave\"] = \"[Port]PointerLeave\";\n  GraphPortEvent[\"MouseUp\"] = \"[Port]MouseUp\";\n  GraphPortEvent[\"MouseEnter\"] = \"[Port]MouseEnter\";\n  GraphPortEvent[\"MouseLeave\"] = \"[Port]MouseLeave\";\n  GraphPortEvent[\"MouseOver\"] = \"[Port]MouseOver\";\n  GraphPortEvent[\"MouseOut\"] = \"[Port]MouseOut\";\n  GraphPortEvent[\"MouseMove\"] = \"[Port]MouseMove\";\n  GraphPortEvent[\"ContextMenu\"] = \"[Port]ContextMenu\";\n  GraphPortEvent[\"KeyDown\"] = \"[Port]KeyDown\";\n  GraphPortEvent[\"Focus\"] = \"[Port]Focus\";\n  GraphPortEvent[\"Blur\"] = \"[Port]Blur\";\n})(GraphPortEvent || (GraphPortEvent = {}));\nvar GraphCanvasEvent;\n(function (GraphCanvasEvent) {\n  GraphCanvasEvent[\"Click\"] = \"[Canvas]Click\";\n  GraphCanvasEvent[\"DoubleClick\"] = \"[Canvas]DoubleClick\";\n  GraphCanvasEvent[\"MouseDown\"] = \"[Canvas]MouseDown\";\n  GraphCanvasEvent[\"MouseUp\"] = \"[Canvas]MouseUp\";\n  GraphCanvasEvent[\"MouseEnter\"] = \"[Canvas]MouseEnter\";\n  GraphCanvasEvent[\"MouseLeave\"] = \"[Canvas]MouseLeave\";\n  GraphCanvasEvent[\"MouseOver\"] = \"[Canvas]MouseOver\";\n  GraphCanvasEvent[\"MouseOut\"] = \"[Canvas]MouseOut\";\n  GraphCanvasEvent[\"MouseMove\"] = \"[Canvas]MouseMove\";\n  GraphCanvasEvent[\"ContextMenu\"] = \"[Canvas]ContextMenu\";\n  GraphCanvasEvent[\"DragStart\"] = \"[Canvas]DragStart\";\n  GraphCanvasEvent[\"Drag\"] = \"[Canvas]Drag\";\n  GraphCanvasEvent[\"DragEnd\"] = \"[Canvas]DragEnd\";\n  GraphCanvasEvent[\"Pan\"] = \"[Canvas]Pan\";\n  GraphCanvasEvent[\"Focus\"] = \"[Canvas]Focus\";\n  GraphCanvasEvent[\"Blur\"] = \"[Canvas]Blur\";\n  GraphCanvasEvent[\"Zoom\"] = \"[Canvas]Zoom\";\n  GraphCanvasEvent[\"Pinch\"] = \"[Canvas]Pinch\";\n  GraphCanvasEvent[\"KeyDown\"] = \"[Canvas]KeyDown\";\n  GraphCanvasEvent[\"KeyUp\"] = \"[Canvas]KeyUp\";\n  GraphCanvasEvent[\"SelectStart\"] = \"[Canvas]SelectStart\";\n  GraphCanvasEvent[\"SelectMove\"] = \"[Canvas]SelectMove\";\n  GraphCanvasEvent[\"SelectEnd\"] = \"[Canvas]SelectEnd\";\n  GraphCanvasEvent[\"UpdateNodeSelectionBySelectBox\"] = \"[Canvas]UpdateNodeSelectionBySelectBox\";\n  GraphCanvasEvent[\"MouseWheelScroll\"] = \"[Canvas]MouseWheelScroll\";\n  GraphCanvasEvent[\"DraggingNodeFromItemPanel\"] = \"[Canvas]DraggingNodeFromItemPanel\";\n  GraphCanvasEvent[\"DraggingNodeFromItemPanelStart\"] = \"[Canvas]DraggingNodeFromItemPanelStart\";\n  GraphCanvasEvent[\"DraggingNodeFromItemPanelEnd\"] = \"[Canvas]DraggingNodeFromItemPanelEnd\";\n  GraphCanvasEvent[\"ViewportResize\"] = \"[Canvas]ViewportResize\";\n  GraphCanvasEvent[\"Navigate\"] = \"[Canvas]Navigate\";\n  GraphCanvasEvent[\"VirtualizationRecalculated\"] = \"[Canvas]VirtualizationRecalculated\";\n  GraphCanvasEvent[\"ResetSelection\"] = \"[Canvas]ResetSelection\";\n  GraphCanvasEvent[\"Copy\"] = \"[Canvas]Copy\";\n  GraphCanvasEvent[\"Paste\"] = \"[Canvas]Paste\";\n  GraphCanvasEvent[\"Delete\"] = \"[Canvas]Delete\";\n  GraphCanvasEvent[\"Undo\"] = \"[Canvas]Undo\";\n  GraphCanvasEvent[\"Redo\"] = \"[Canvas]Redo\";\n  GraphCanvasEvent[\"ScrollIntoView\"] = \"[Canvas]ScrollIntoView\";\n  GraphCanvasEvent[\"ResetUndoStack\"] = \"[Canvas]ResetUndoStack\";\n  GraphCanvasEvent[\"ResetViewport\"] = \"[Canvas]ResetViewport\";\n  GraphCanvasEvent[\"ZoomTo\"] = \"[Canvas]ZoomTo\";\n  GraphCanvasEvent[\"ZoomToFit\"] = \"[Canvas]ZoomToFit\";\n  GraphCanvasEvent[\"SetData\"] = \"[Canvas]SetData\";\n  GraphCanvasEvent[\"UpdateData\"] = \"[Canvas]UpdateData\";\n  GraphCanvasEvent[\"ScrollTo\"] = \"[Canvas]ScrollTo\";\n  GraphCanvasEvent[\"UpdateSettings\"] = \"[Canvas]UpdateSettings\";\n})(GraphCanvasEvent || (GraphCanvasEvent = {}));\nvar GraphScrollBarEvent;\n(function (GraphScrollBarEvent) {\n  GraphScrollBarEvent[\"ScrollStart\"] = \"[ScrollBar]ScrollStart\";\n  GraphScrollBarEvent[\"Scroll\"] = \"[ScrollBar]Scroll\";\n  GraphScrollBarEvent[\"ScrollEnd\"] = \"[ScrollBar]ScrollEnd\";\n})(GraphScrollBarEvent || (GraphScrollBarEvent = {}));\nvar GraphMinimapEvent;\n(function (GraphMinimapEvent) {\n  GraphMinimapEvent[\"PanStart\"] = \"[Minimap]PanStart\";\n  GraphMinimapEvent[\"Pan\"] = \"[Minimap]Pan\";\n  GraphMinimapEvent[\"PanEnd\"] = \"[Minimap]PanEnd\";\n  GraphMinimapEvent[\"Click\"] = \"[Minimap]Click\";\n})(GraphMinimapEvent || (GraphMinimapEvent = {}));\nvar GraphContextMenuEvent;\n(function (GraphContextMenuEvent) {\n  GraphContextMenuEvent[\"Open\"] = \"[ContextMenu]Open\";\n  GraphContextMenuEvent[\"Close\"] = \"[ContextMenu]Close\";\n})(GraphContextMenuEvent || (GraphContextMenuEvent = {}));\n\n/**\r\n * convert WheelEvent delta to pixels by deltaMode\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent\r\n * https://stackoverflow.com/questions/20110224/what-is-the-height-of-a-line-in-a-wheel-event-deltamode-dom-delta-line\r\n */\n/**\r\n * get browser scroll line height by iframe\r\n *\r\n * @returns line height in px\r\n */\n\nfunction getScrollLineHeight() {\n  try {\n    const iframe = document.createElement(\"iframe\");\n    iframe.src = \"#\";\n    document.body.appendChild(iframe);\n    const {\n      contentDocument\n    } = iframe;\n    if (!contentDocument) {\n      throw new Error(\"Fail to create iframe\");\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n\n    contentDocument.documentElement.innerHTML = DOMPurify.sanitize(\"<span>a</span>\", {\n      RETURN_TRUSTED_TYPE: true\n    });\n    const span = contentDocument.body.firstElementChild;\n    const height = span.offsetHeight;\n    document.body.removeChild(iframe);\n    return height;\n  } catch (e) {\n    Debug.error(\"failed to calculate scroll line height\", e);\n    return 16;\n  }\n}\nconst scrollLineHeight = getScrollLineHeight();\nconst normalizeWheelDelta = typeof WheelEvent === \"function\" ? (deltaMode, delta) => {\n  switch (deltaMode) {\n    case WheelEvent.DOM_DELTA_PIXEL:\n      return delta;\n    case WheelEvent.DOM_DELTA_LINE:\n      return delta * scrollLineHeight;\n    case WheelEvent.DOM_DELTA_PAGE:\n      return delta * window.innerHeight;\n    default:\n      return delta;\n  }\n} : (_deltaMode, delta) => delta;\nconst EMPTY_RECT = {\n  height: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  top: 0,\n  toJSON() {\n    return this;\n  }\n};\nconst VirtualizationContext = /*#__PURE__*/createContext({\n  viewport: {\n    rect: EMPTY_RECT,\n    transformMatrix: EMPTY_TRANSFORM_MATRIX\n  },\n  renderedArea: {\n    minX: 0,\n    minY: 0,\n    maxX: 0,\n    maxY: 0\n  },\n  visibleArea: {\n    minX: 0,\n    minY: 0,\n    maxX: 0,\n    maxY: 0\n  },\n  renderedNodes: new Set(),\n  renderedEdges: new Set(),\n  timestamp: 0\n});\nfunction useGraphConfig() {\n  return useContext(GraphConfigContext);\n}\nfunction useGraphController() {\n  return useContext(GraphControllerContext);\n}\nfunction useViewport() {\n  return useContext(ViewportContext);\n}\nfunction useAlignmentLines() {\n  return useContext(AlignmentLinesContext);\n}\nfunction useConnectingState() {\n  return useContext(ConnectingStateContext);\n}\nfunction useVirtualization() {\n  return useContext(VirtualizationContext);\n}\nlet shouldRespondWheel = false;\nconst useWheelHandler = args => {\n  const {\n    containerRef,\n    svgRef,\n    rectRef,\n    zoomSensitivity,\n    scrollSensitivity,\n    isHorizontalScrollDisabled,\n    isVerticalScrollDisabled,\n    isCtrlKeyZoomEnable,\n    eventChannel,\n    graphConfig,\n    dispatch\n  } = args;\n  const graphController = useGraphController();\n  const globalEventTarget = graphController.getGlobalEventTarget();\n  useLayoutEffect(() => {\n    const svg = svgRef.current;\n    const container = containerRef.current;\n    if (!svg || !container) {\n      return noop;\n    }\n    const onWheel = e => {\n      const rect = rectRef.current;\n      if (!rect) {\n        return;\n      }\n      if (!shouldRespondWheel) {\n        return;\n      }\n      e.preventDefault();\n      if (e.ctrlKey && isCtrlKeyZoomEnable) {\n        const deltaY = normalizeWheelDelta(e.deltaMode, e.deltaY);\n        const scale = (deltaY > 0 ? -zoomSensitivity : zoomSensitivity) + 1;\n        eventChannel.trigger({\n          type: GraphCanvasEvent.Zoom,\n          rawEvent: e,\n          scale,\n          anchor: getRelativePoint(rect, e)\n        });\n        return;\n      }\n      const dx = isHorizontalScrollDisabled ? 0 : -normalizeWheelDelta(e.deltaMode, e.shiftKey ? e.deltaY : e.deltaX) * scrollSensitivity;\n      const dy = isVerticalScrollDisabled || e.shiftKey ? 0 : -normalizeWheelDelta(e.deltaMode, e.deltaY) * scrollSensitivity;\n      eventChannel.trigger({\n        type: GraphCanvasEvent.MouseWheelScroll,\n        dx,\n        dy,\n        rawEvent: e\n      });\n    };\n    const mouseEnterHandler = () => {\n      shouldRespondWheel = true;\n    };\n    container.addEventListener(\"mouseenter\", mouseEnterHandler);\n    const mouseLeaveHandler = () => {\n      shouldRespondWheel = false;\n    };\n    container.addEventListener(\"mouseleave\", mouseLeaveHandler);\n    globalEventTarget.addEventListener(\"wheel\", onWheel, {\n      passive: false\n    });\n    return () => {\n      globalEventTarget.removeEventListener(\"wheel\", onWheel);\n      container.removeEventListener(\"mouseenter\", mouseEnterHandler);\n      container.removeEventListener(\"mouseleave\", mouseLeaveHandler);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [svgRef, rectRef, zoomSensitivity, scrollSensitivity, dispatch, isHorizontalScrollDisabled, isVerticalScrollDisabled, graphConfig, eventChannel, isCtrlKeyZoomEnable]);\n};\nfunction nextFrame(callback) {\n  // double requestAnimationFrame guarantee next frame\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=675795\n  requestAnimationFrame(() => {\n    requestAnimationFrame(callback);\n  });\n}\nconst LIMIT = 20;\nconst isRectChanged = (a, b) => {\n  if (a === b) {\n    return false;\n  }\n  if (!a || !b) {\n    return true;\n  }\n  return a.top !== b.top || a.left !== b.left || a.width !== b.width || a.height !== b.height;\n};\nconst useUpdateViewportCallback = (rectRef, svgRef, eventChannel) => useCallback((force = false) => {\n  var _a;\n  const viewportRect = (_a = svgRef.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n  if (force || isRectChanged(rectRef.current, viewportRect)) {\n    rectRef.current = viewportRect;\n    eventChannel.trigger({\n      type: GraphCanvasEvent.ViewportResize,\n      viewportRect\n    });\n  }\n}, [eventChannel, rectRef, svgRef]);\nconst useContainerRect = (state, svgRef, containerRef, updateViewport) => {\n  useLayoutEffect(() => {\n    if (!state.viewport.rect) {\n      updateViewport(true);\n    }\n  });\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) {\n      return noop;\n    }\n    const onResize = debounce(() =>\n    /**\r\n     * > This error means that ResizeObserver was not able\r\n     * > to deliver all observations within a single animation frame.\r\n     * > It is benign (your site will not break). – Aleksandar Totic Apr 15 at 3:14\r\n     * https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded\r\n     */\n    nextFrame(() => {\n      updateViewport();\n    }), LIMIT);\n    if (typeof ResizeObserver !== \"undefined\") {\n      const resizeObserver = new ResizeObserver(onResize);\n      resizeObserver.observe(container);\n      return () => {\n        resizeObserver.unobserve(container);\n        resizeObserver.disconnect();\n      };\n    }\n    window.addEventListener(\"resize\", onResize);\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, [containerRef, updateViewport]);\n  useEffect(() => {\n    const listener = debounce(e => {\n      const svg = svgRef.current;\n      if (!svg || !(e.target instanceof Element) || !e.target.contains(svg)) {\n        return;\n      }\n      updateViewport();\n    }, LIMIT);\n    const options = {\n      capture: true,\n      passive: true\n    };\n    document.body.addEventListener(\"scroll\", listener, options);\n    return () => {\n      document.body.removeEventListener(\"scroll\", listener, options);\n    };\n  }, [svgRef, updateViewport]);\n};\nfunction makeScheduledCallback(callback, schedule, cancel) {\n  let scheduled = false;\n  let currentArgs;\n  let task;\n  const scheduledCallback = (...args) => {\n    currentArgs = args;\n    if (!scheduled) {\n      scheduled = true;\n      task = schedule(() => {\n        scheduled = false;\n        unstable_batchedUpdates(() => {\n          callback.apply(null, currentArgs);\n        });\n      });\n    }\n  };\n  scheduledCallback.cancel = () => {\n    cancel(task);\n  };\n  return scheduledCallback;\n}\nconst animationFramed = callback => makeScheduledCallback(callback, requestAnimationFrame, cancelAnimationFrame);\nconst throttle = (callback, limit) => makeScheduledCallback(callback, cb => setTimeout(cb, limit), clearTimeout);\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\r\n * @param callback\r\n * @param limit\r\n * @param deps\r\n */\n\nfunction useThrottle(callback, limit, deps) {\n  /**\r\n   * wrap the throttle in useMemo,\r\n   * or throttle generate a new function every time components rerender,\r\n   * which cause throttle acts like a \"setTimeout\"\r\n   */\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useMemo(() => throttle(callback, limit), deps);\n}\nconst useRenderedArea = (viewport, isVirtualizationEnabled) => {\n  return useMemo(() => {\n    return isVirtualizationEnabled ? getRenderedArea(viewport) : {\n      minX: -Number.MAX_SAFE_INTEGER,\n      minY: -Number.MAX_SAFE_INTEGER,\n      maxX: Number.MAX_SAFE_INTEGER,\n      maxY: Number.MAX_SAFE_INTEGER\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [viewport, isVirtualizationEnabled]);\n};\nconst getMinimapRect = svgRef => {\n  var _a, _b;\n  return (_b = (_a = svgRef.current) === null || _a === void 0 ? void 0 : _a.closest(\".minimap-container\")) === null || _b === void 0 ? void 0 : _b.getBoundingClientRect();\n};\nconst useMinimapRect = svgRef => {\n  const [rect, setRect] = useState(undefined);\n  useLayoutEffect(() => {\n    setRect(getMinimapRect(svgRef));\n  }, [svgRef]);\n  useEffect(() => {\n    const onResize = throttle(() => {\n      setRect(getMinimapRect(svgRef));\n    }, 20);\n    window.addEventListener(\"resize\", onResize);\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, [svgRef]);\n  return rect;\n};\nclass DragController {\n  constructor(eventProvider, getPositionFromEvent) {\n    this.onMove = noop;\n    this.onEnd = noop;\n    this.lastEvent = null;\n    this.startX = 0;\n    this.startY = 0;\n    this.prevClientX = 0;\n    this.prevClientY = 0;\n    this.onMouseUp = e => {\n      this.lastEvent = e;\n      this.doOnMouseUp(e);\n      this.lastEvent = null;\n    };\n    this.onMouseMove = e => {\n      this.lastEvent = e;\n      e.preventDefault();\n      this.mouseMove(e);\n    };\n    this.eventProvider = eventProvider;\n    this.getPositionFromEvent = getPositionFromEvent;\n    this.mouseMove = animationFramed(e => {\n      this.doOnMouseMove(e);\n    });\n  }\n  start(e) {\n    this.lastEvent = e;\n    const {\n      x,\n      y\n    } = this.getPositionFromEvent(e);\n    this.startX = x;\n    this.startY = y;\n    this.prevClientX = x;\n    this.prevClientY = y;\n    this.eventProvider.on(\"move\", this.onMouseMove);\n    this.eventProvider.on(\"end\", this.onMouseUp);\n  }\n  stop() {\n    this.mouseMove.cancel();\n    this.eventProvider.off(\"move\", this.onMouseMove);\n    this.eventProvider.off(\"end\", this.onMouseUp);\n  }\n  getDelta(x, y) {\n    const clientDX = x - this.prevClientX;\n    const clientDY = y - this.prevClientY;\n    this.prevClientX = x;\n    this.prevClientY = y;\n    return {\n      x: clientDX,\n      y: clientDY\n    };\n  }\n  getTotalDelta(e) {\n    const x = e.clientX - this.startX;\n    const y = e.clientY - this.startY;\n    return {\n      x,\n      y\n    };\n  }\n  doOnMouseMove(e) {\n    const {\n      x,\n      y\n    } = this.getPositionFromEvent(e);\n    const {\n      x: dx,\n      y: dy\n    } = this.getDelta(x, y);\n    const {\n      x: totalDX,\n      y: totalDY\n    } = this.getTotalDelta(e);\n    this.onMove({\n      clientX: x,\n      clientY: y,\n      dx,\n      dy,\n      totalDX,\n      totalDY,\n      e\n    });\n  }\n  doOnMouseUp(e) {\n    e.preventDefault();\n    const {\n      x: totalDX,\n      y: totalDY\n    } = this.getTotalDelta(e);\n    this.onEnd({\n      totalDX,\n      totalDY,\n      e\n    });\n    this.stop();\n  }\n}\nfunction defaultGetPositionFromEvent(e) {\n  return {\n    x: e.clientX,\n    y: e.clientY\n  };\n}\nclass DragNodeController extends DragController {\n  constructor(globalMoveEventProvider, getPositionFromEvent, rectRef) {\n    super(globalMoveEventProvider, getPositionFromEvent);\n    this.rectRef = rectRef;\n  }\n  doOnMouseMove(e) {\n    super.doOnMouseMove(e);\n    const rect = this.rectRef.current;\n    if (!rect || !this.lastEvent) {\n      return;\n    }\n    if (e.clientX < rect.left || e.clientX > rect.right || e.clientY < rect.top || e.clientY > rect.bottom) {\n      this.mouseMove(this.lastEvent);\n    }\n  }\n}\nclass TouchController {\n  constructor(handlers) {\n    this.eventHandlers = {\n      onPointerDown: (e, ...args) => {\n        if (e.pointerType !== \"touch\") {\n          return;\n        }\n        e.preventDefault();\n        this.pointers = new Map(this.pointers);\n        this.pointers.set(e.pointerId, e.nativeEvent);\n        this.updateHandler(e.nativeEvent, ...args);\n      },\n      onPointerMove: (e, ...args) => {\n        if (e.pointerType !== \"touch\") {\n          return;\n        }\n        e.preventDefault();\n        this.pointers.set(e.pointerId, e.nativeEvent);\n        this.onMove(e.nativeEvent, ...args);\n      },\n      onPointerUp: (e, ...args) => {\n        if (e.pointerType !== \"touch\") {\n          return;\n        }\n        e.preventDefault();\n        this.pointers = new Map(this.pointers);\n        this.pointers.delete(e.pointerId);\n        this.updateHandler(e.nativeEvent, ...args);\n      }\n    };\n    this.pointers = new Map();\n    this.onMove = animationFramed((e, ...args) => {\n      var _a;\n      (_a = this.currentHandler) === null || _a === void 0 ? void 0 : _a.onMove(this.pointers, e, ...args);\n    });\n    this.handlers = handlers;\n  }\n  updateHandler(e, ...args) {\n    var _a, _b;\n    const handler = this.handlers.get(this.pointers.size);\n    if (handler !== this.currentHandler) {\n      (_a = this.currentHandler) === null || _a === void 0 ? void 0 : _a.onEnd(e, ...args);\n      this.currentHandler = handler;\n      (_b = this.currentHandler) === null || _b === void 0 ? void 0 : _b.onStart(this.pointers, e, ...args);\n    }\n  }\n}\n\n/**\r\n * debug helpers, just leave them here\r\n */\n// const canvas = document.createElement(\"canvas\");\n// canvas.height = window.innerHeight;\n// canvas.width = window.innerWidth;\n// Object.assign(canvas.style, {\n//   pointerEvents: \"none\",\n//   position: \"fixed\",\n//   top: \"0\",\n//   left: \"0\"\n// });\n// document.body.append(canvas);\n//\n// const ctx = canvas.getContext(\"2d\")!;\n//\n// function draw({ x, y }: ITouch, style: string): void {\n//   ctx.fillStyle = style;\n//   ctx.fillRect(x - 2.5, y - 2.5, 5, 5);\n// }\n\nclass TwoFingerHandler {\n  constructor(rectRef, eventChannel) {\n    this.prevDistance = 0;\n    this.rectRef = rectRef;\n    this.eventChannel = eventChannel;\n  }\n  onEnd() {// noop\n  }\n  onMove(pointers, e) {\n    const events = Array.from(pointers.values());\n    const currentDistance = distance(events[0].clientX, events[0].clientY, events[1].clientX, events[1].clientY);\n    const {\n      prevEvents,\n      prevDistance\n    } = this;\n    this.prevDistance = currentDistance;\n    this.prevEvents = events;\n    if (!prevEvents) {\n      return;\n    }\n    const dx1 = events[0].clientX - prevEvents[0].clientX;\n    const dx2 = events[1].clientX - prevEvents[1].clientX;\n    const dy1 = events[0].clientY - prevEvents[0].clientY;\n    const dy2 = events[1].clientY - prevEvents[1].clientY;\n    const dx = (dx1 + dx2) / 2;\n    const dy = (dy1 + dy2) / 2;\n    const scale = (currentDistance - prevDistance) / prevDistance + 1;\n    const anchor = getContainerCenter(this.rectRef);\n    if (!anchor) {\n      return;\n    }\n    this.eventChannel.trigger({\n      type: GraphCanvasEvent.Pinch,\n      rawEvent: e,\n      dx,\n      dy,\n      scale,\n      anchor\n    });\n  }\n  onStart(pointers) {\n    if (pointers.size !== 2) {\n      throw new Error(`Unexpected touch event with ${pointers.size} touches`);\n    }\n    this.prevEvents = Array.from(pointers.values());\n    this.prevDistance = distance(this.prevEvents[0].clientX, this.prevEvents[0].clientY, this.prevEvents[1].clientX, this.prevEvents[1].clientY);\n  }\n}\nconst useGraphTouchHandler = (rectRef, eventChannel) => {\n  return React.useMemo(() => {\n    const touchEvents = new TouchController(new Map().set(2, new TwoFingerHandler(rectRef, eventChannel)));\n    return touchEvents.eventHandlers;\n  }, [rectRef, eventChannel]);\n};\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst isSafari = getBrowser() === BrowserType.Safari;\nlet prevScale = 0;\nfunction useSafariScale({\n  rectRef,\n  svgRef,\n  eventChannel\n}) {\n  useEffect(() => {\n    const el = svgRef.current;\n    if (!isSafari || !el || isMobile()) {\n      return () => {// noop\n      };\n    }\n    const onGestureEvent = animationFramed(e => {\n      const {\n        scale\n      } = e;\n      const delta = scale / prevScale;\n      prevScale = scale;\n      eventChannel.trigger({\n        type: GraphCanvasEvent.Zoom,\n        rawEvent: e,\n        scale: delta,\n        anchor: getContainerCenter(rectRef)\n      });\n    });\n    const onGestureStart = e => {\n      e.stopPropagation();\n      e.preventDefault();\n      prevScale = e.scale;\n      eventChannel.trigger({\n        type: GraphCanvasEvent.Zoom,\n        rawEvent: e,\n        scale: e.scale,\n        anchor: getContainerCenter(rectRef)\n      });\n    };\n    const onGestureChange = e => {\n      e.stopPropagation();\n      e.preventDefault();\n      onGestureEvent(e);\n    };\n    const onGestureEnd = e => {\n      e.stopPropagation();\n      e.preventDefault();\n      onGestureEvent(e);\n    }; // @ts-ignore\n\n    el.addEventListener(\"gesturestart\", onGestureStart); // @ts-ignore\n\n    el.addEventListener(\"gesturechange\", onGestureChange); // @ts-ignore\n\n    el.addEventListener(\"gestureend\", onGestureEnd);\n    return () => {\n      // @ts-ignore\n      el.removeEventListener(\"gesturestart\", onGestureStart); // @ts-ignore\n\n      el.removeEventListener(\"gesturechange\", onGestureChange); // @ts-ignore\n\n      el.removeEventListener(\"gestureend\", onGestureEnd);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n\n/**\r\n * @todo migrate to React.useDeferredValue after Concurrent mode release\r\n */\n\nfunction useDeferredValue(value, {\n  timeout\n}) {\n  const [state, setState] = useState(value);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setState(value);\n    }, timeout);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, timeout]);\n  return state;\n}\nconst useSelectBox = (dispatch, selectBoxPositionState) => {\n  const selectBoxPosition = useDeferredValue(selectBoxPositionState, {\n    timeout: 100\n  });\n  React.useEffect(() => {\n    dispatch({\n      type: GraphCanvasEvent.UpdateNodeSelectionBySelectBox\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectBoxPosition]);\n};\nconst useGraphState = () => {\n  return useContext(GraphStateContext);\n};\nconst useGraphData = () => {\n  return useContext(GraphValueContext);\n};\n\n/**\r\n * this function is used both in useEventChannel and behaviorReducer to share the same logic\r\n */\n\nconst handleBehaviorChange = (prevBehavior, event) => {\n  switch (event.type) {\n    case GraphNodeEvent.DragStart:\n      return GraphBehavior.Dragging;\n    case GraphEdgeEvent.ConnectStart:\n      return GraphBehavior.Connecting;\n    case GraphCanvasEvent.SelectStart:\n      return GraphBehavior.MultiSelect;\n    case GraphCanvasEvent.DragStart:\n      return GraphBehavior.Panning;\n    case GraphCanvasEvent.DraggingNodeFromItemPanelStart:\n      return GraphBehavior.AddingNode;\n    case GraphNodeEvent.DragEnd:\n    case GraphEdgeEvent.ConnectEnd:\n    case GraphCanvasEvent.SelectEnd:\n    case GraphCanvasEvent.DragEnd:\n    case GraphCanvasEvent.DraggingNodeFromItemPanelEnd:\n      return GraphBehavior.Default;\n    default:\n      return prevBehavior;\n  }\n};\nconst behaviorReducer = (prevState, action) => {\n  const nextBehavior = handleBehaviorChange(prevState.behavior, action);\n  if (nextBehavior === prevState.behavior) {\n    return prevState;\n  }\n  return Object.assign(Object.assign({}, prevState), {\n    behavior: nextBehavior\n  });\n};\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\nconst canvasReducer = (state, action) => {\n  switch (action.type) {\n    case GraphCanvasEvent.Paste:\n      {\n        const {\n          position\n        } = action;\n        if (!isViewportComplete(state.viewport)) {\n          return state;\n        }\n        const {\n          rect\n        } = state.viewport;\n        let pasteNodes = action.data.nodes;\n        if (position && rect) {\n          const realPoint = getRealPointFromClientPoint(position.x, position.y, state.viewport);\n          let dx;\n          let dy;\n          pasteNodes = pasteNodes.map((n, idx) => {\n            // (dx,dy) are same for all copied nodes\n            if (idx === 0) {\n              dx = realPoint.x - n.x;\n              dy = realPoint.y - n.y;\n            }\n            return Object.assign(Object.assign({}, n), {\n              x: dx ? n.x - COPIED_NODE_SPACING + dx : n.x,\n              y: dy ? n.y - COPIED_NODE_SPACING + dy : n.y,\n              state: GraphNodeStatus.Selected\n            });\n          });\n        }\n        let next = unSelectAllEntity()(state.data.present);\n        pasteNodes.forEach(node => {\n          next = next.insertNode(node);\n        });\n        action.data.edges.forEach(edge => {\n          next = next.insertEdge(edge);\n        });\n        return Object.assign(Object.assign({}, state), {\n          data: pushHistory(state.data, next)\n        });\n      }\n    case GraphCanvasEvent.Delete:\n      if (!state.settings.features.has(GraphFeatures.Delete)) {\n        return state;\n      }\n      return Object.assign(Object.assign({}, state), {\n        data: pushHistory(state.data, state.data.present.deleteItems({\n          node: notSelected,\n          edge: notSelected\n        }), unSelectAllEntity())\n      });\n    case GraphCanvasEvent.Undo:\n      return Object.assign(Object.assign({}, state), {\n        data: undo(state.data)\n      });\n    case GraphCanvasEvent.Redo:\n      return Object.assign(Object.assign({}, state), {\n        data: redo(state.data)\n      });\n    case GraphCanvasEvent.KeyDown:\n      {\n        const key = action.rawEvent.key.toLowerCase();\n        if (state.activeKeys.has(key)) {\n          return state;\n        }\n        const set = new Set(state.activeKeys);\n        set.add(key);\n        return Object.assign(Object.assign({}, state), {\n          activeKeys: set\n        });\n      }\n    case GraphCanvasEvent.KeyUp:\n      {\n        const key = action.rawEvent.key.toLowerCase();\n        if (!state.activeKeys.has(key)) {\n          return state;\n        }\n        const set = new Set(state.activeKeys);\n        set.delete(key);\n        return Object.assign(Object.assign({}, state), {\n          activeKeys: set\n        });\n      }\n    case GraphCanvasEvent.SetData:\n      return Object.assign(Object.assign({}, state), {\n        data: resetUndoStack(action.data)\n      });\n    case GraphCanvasEvent.UpdateData:\n      return Object.assign(Object.assign({}, state), {\n        data: action.shouldRecord ? pushHistory(state.data, action.updater(state.data.present)) : Object.assign(Object.assign({}, state.data), {\n          present: action.updater(state.data.present)\n        })\n      });\n    case GraphCanvasEvent.ResetUndoStack:\n      return Object.assign(Object.assign({}, state), {\n        data: resetUndoStack(state.data.present)\n      });\n    case GraphCanvasEvent.UpdateSettings:\n      {\n        const settings = __rest(action, [\"type\"]);\n        return Object.assign(Object.assign({}, state), {\n          settings: Object.assign(Object.assign({}, state.settings), settings)\n        });\n      }\n    default:\n      return state;\n  }\n};\nfunction composeReducers(reducers) {\n  return next => reducers.reduceRight((prev, current) => current(prev), next);\n}\nconst VisitPortHelper = props => {\n  const {\n    neighborPorts,\n    data\n  } = props;\n  const selectRef = React.useRef(null);\n  const [selectedItem, setSelectedItem] = React.useState();\n  const onContainerKeyDown = React.useCallback(evt => {\n    if (evt.key === \"Escape\") {\n      evt.stopPropagation();\n      evt.preventDefault();\n      if (selectedItem) {\n        props.onComplete(selectedItem);\n      }\n    }\n  }, [selectedItem, props]);\n  const onContainerBlur = React.useCallback(() => {//\n  }, []);\n  const onContainerChange = React.useCallback(evt => {\n    const value = JSON.parse(evt.target.value);\n    if (value.nodeId && value.portId) {\n      setSelectedItem({\n        nodeId: value.nodeId,\n        portId: value.portId\n      });\n    }\n  }, [setSelectedItem]);\n  React.useEffect(() => {\n    if (selectRef.current) {\n      selectRef.current.focus({\n        preventScroll: true\n      });\n    }\n  }, []);\n  return jsx(\"select\", Object.assign({\n    onKeyDown: onContainerKeyDown,\n    onBlur: onContainerBlur,\n    ref: selectRef,\n    onChange: onContainerChange\n  }, {\n    children: neighborPorts.map(s => {\n      const isSelected = selectedItem && selectedItem.portId === s.portId && selectedItem.nodeId === s.nodeId;\n      const value = JSON.stringify(s);\n      const node = data.nodes.get(s.nodeId);\n      if (!node) {\n        return null;\n      }\n      const port = node.ports ? node.ports.filter(p => p.id === s.portId)[0] : null;\n      if (!port) {\n        return null;\n      }\n      const label = `${node.ariaLabel || node.name || node.id}: ${port.ariaLabel || port.name || port.id}`;\n      return jsx(\"option\", Object.assign({\n        value: value,\n        \"aria-selected\": isSelected,\n        \"aria-label\": label\n      }, {\n        children: label\n      }), `${s.nodeId}-${s.portId}`);\n    })\n  }));\n};\nconst item = (node = undefined, port = undefined) => ({\n  node,\n  port\n});\nconst findDOMElement = (svg, {\n  node,\n  port\n}) => {\n  var _a, _b;\n  let id;\n  if (node && port) {\n    id = getPortUid((_a = svg.dataset.graphId) !== null && _a !== void 0 ? _a : \"\", node, port);\n  } else if (node) {\n    id = getNodeUid((_b = svg.dataset.graphId) !== null && _b !== void 0 ? _b : \"\", node);\n  } else {\n    return null;\n  }\n  return svg.getElementById(id);\n};\nconst focusItem = (svgRef, nextItem, evt, eventChannel) => {\n  if (!svgRef.current) {\n    return;\n  }\n  const el = findDOMElement(svgRef.current, nextItem);\n  if (el) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    el.focus({\n      preventScroll: true\n    });\n    eventChannel.trigger({\n      type: GraphCanvasEvent.Navigate,\n      node: nextItem.node,\n      port: nextItem.port,\n      rawEvent: evt\n    });\n  } else if (!nextItem.node && !nextItem.port) {\n    eventChannel.trigger({\n      type: GraphCanvasEvent.Navigate,\n      node: nextItem.node,\n      port: nextItem.port,\n      rawEvent: evt\n    });\n  }\n};\nconst getNextItem = (data, curNode, port) => {\n  if (curNode.ports) {\n    const portIndex = port ? curNode.ports.findIndex(p => p.id === port.id) : -1;\n    const nextPortIndex = portIndex + 1;\n    if (nextPortIndex < curNode.ports.length) {\n      return item(curNode, curNode.ports[nextPortIndex]);\n    }\n  }\n  const nextNode = curNode.next && data.nodes.get(curNode.next);\n  if (nextNode) {\n    return item(nextNode);\n  }\n  return item();\n};\nconst getPrevItem = (data, curNode, port) => {\n  if (port && curNode.ports) {\n    const prevPortIndex = curNode.ports.findIndex(p => p.id === port.id) - 1;\n    if (prevPortIndex >= 0) {\n      return item(curNode, curNode.ports[prevPortIndex]);\n    }\n    return item(curNode);\n  }\n  const prevNode = curNode.prev && data.nodes.get(curNode.prev);\n  if (prevNode) {\n    return item(prevNode, prevNode.ports && prevNode.ports.length ? prevNode.ports[prevNode.ports.length - 1] : undefined);\n  }\n  return item();\n};\nconst nextConnectablePort = (graphConfig, params) => (data, node, port) => {\n  var _a, _b, _c;\n  let next = getNextItem(data, node, port);\n  while (!(((_a = next.node) === null || _a === void 0 ? void 0 : _a.id) === node.id && ((_b = next.port) === null || _b === void 0 ? void 0 : _b.id) === (port === null || port === void 0 ? void 0 : port.id))) {\n    if (!next.node) {\n      next = item(data.getNavigationFirstNode());\n    } else if (next.port) {\n      if ((_c = graphConfig.getPortConfig(next.port)) === null || _c === void 0 ? void 0 : _c.getIsConnectable(Object.assign(Object.assign({}, params), {\n        data,\n        parentNode: next.node,\n        model: next.port\n      }))) {\n        return next;\n      }\n    } // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    next = getNextItem(data, next.node, next.port);\n  }\n  return item();\n};\nconst focusNextPort = (ports, node, curPortId, svgRef, evt, eventChannel) => {\n  const curPortIndex = ports.findIndex(p => p.id === curPortId);\n  const nextPortIndex = (curPortIndex + 1) % ports.length;\n  const nextPort = ports[nextPortIndex];\n  if (nextPort && svgRef.current) {\n    focusItem(svgRef, {\n      node,\n      port: nextPort\n    }, evt, eventChannel);\n  }\n};\nconst focusPrevPort = (ports, node, curPortId, svgRef, evt, eventChannel) => {\n  const curPortIndex = ports.findIndex(p => p.id === curPortId);\n  const prevPortIndex = (curPortIndex - 1 + ports.length) % ports.length;\n  const prevPort = ports[prevPortIndex];\n  if (prevPort && svgRef.current) {\n    focusItem(svgRef, {\n      node,\n      port: prevPort\n    }, evt, eventChannel);\n  }\n};\nconst getFocusNodeHandler = compareFn => (data, curNodeId, svgRef, graphController, evt, eventChannel) => {\n  const sortedNodes = Array.from(data.nodes.values()).sort(compareFn);\n  const curNodeIndex = sortedNodes.findIndex(n => n.id === curNodeId);\n  const nextNode = sortedNodes[(curNodeIndex + 1) % sortedNodes.length];\n  if (nextNode && svgRef.current) {\n    graphController.dispatch({\n      type: GraphNodeEvent.Select,\n      nodes: [nextNode.id]\n    });\n    graphController.dispatch({\n      type: GraphNodeEvent.Centralize,\n      nodes: [nextNode.id]\n    });\n    focusItem(svgRef, {\n      node: nextNode,\n      port: undefined\n    }, evt, eventChannel);\n  }\n};\nconst focusLeftNode = getFocusNodeHandler((n1, n2) => n1.x * 10 + n1.y - n2.x * 10 - n2.y);\nconst focusRightNode = getFocusNodeHandler((n1, n2) => n2.x * 10 + n2.y - n1.x * 10 - n1.y);\nconst focusDownNode = getFocusNodeHandler((n1, n2) => n1.x + n1.y * 10 - n2.x - n2.y * 10);\nconst focusUpNode = getFocusNodeHandler((n1, n2) => n2.x + n2.y * 10 - n1.x - n1.y * 10);\nconst goToConnectedPort = (data, node, port, svgRef, evt, eventChannel) => {\n  var _a;\n  const neighborPorts = getNeighborPorts(data, node.id, port.id);\n  if (neighborPorts.length === 1 && svgRef.current) {\n    const targetNode = data.nodes.get(neighborPorts[0].nodeId);\n    if (!targetNode) {\n      return;\n    }\n    const targetPort = (_a = targetNode.ports) === null || _a === void 0 ? void 0 : _a.find(p => p.id === neighborPorts[0].portId);\n    if (!targetPort) {\n      return;\n    }\n    focusItem(svgRef, {\n      node: targetNode,\n      port: targetPort\n    }, evt, eventChannel);\n  } else if (neighborPorts.length > 1 && svgRef.current) {\n    const onComplete = nextPort => {\n      var _a;\n      ReactDOM.unmountComponentAtNode(visitPortHelperContainer);\n      if (svgRef.current) {\n        const curEditorContainer = svgRef.current.closest(\".react-dag-editor-container\");\n        if (curEditorContainer) {\n          curEditorContainer.removeChild(visitPortHelperContainer);\n        }\n      }\n      const targetNode = data.nodes.get(nextPort.nodeId);\n      if (!targetNode) {\n        return;\n      }\n      const targetPort = (_a = targetNode.ports) === null || _a === void 0 ? void 0 : _a.find(p => p.id === nextPort.portId);\n      if (!targetPort) {\n        return;\n      }\n      focusItem(svgRef, {\n        node: targetNode,\n        port: targetPort\n      }, evt, eventChannel);\n    };\n    const visitPortHelperContainer = document.createElement(\"div\");\n    const editorContainer = svgRef.current.closest(\".react-dag-editor-container\");\n    if (editorContainer) {\n      editorContainer.appendChild(visitPortHelperContainer);\n    }\n    visitPortHelperContainer.style.position = \"fixed\";\n    visitPortHelperContainer.style.top = \"0\";\n    ReactDOM.render(jsx(VisitPortHelper, {\n      neighborPorts: neighborPorts,\n      // eslint-disable-next-line react/jsx-no-bind\n      onComplete: onComplete,\n      data: data\n    }), visitPortHelperContainer);\n  }\n};\n/**\r\n * @param _data graph data\r\n * @param _node node model\r\n * @param port port data\r\n *\r\n * @returns port arial label\r\n */\n\nfunction defaultGetPortAriaLabel(_data, _node, port) {\n  return port.ariaLabel;\n}\n/**\r\n *\r\n * @param node the node data\r\n *\r\n * @returns the string value for the aria label\r\n */\n\nfunction defaultGetNodeAriaLabel(node) {\n  return node.ariaLabel;\n}\nfunction attachPort(state, nodeId, portId) {\n  if (!state.connectState) {\n    return state;\n  }\n  let data = state.data.present;\n  data = data.updatePort(nodeId, portId, updateStatus(add(GraphPortStatus.ConnectingAsTarget)));\n  if (state.connectState.targetNode && state.connectState.targetPort) {\n    data = data.updatePort(state.connectState.targetNode, state.connectState.targetPort, updateStatus(remove(GraphPortStatus.ConnectingAsTarget)));\n  }\n  return Object.assign(Object.assign({}, state), {\n    connectState: Object.assign(Object.assign({}, state.connectState), {\n      targetNode: nodeId,\n      targetPort: portId\n    }),\n    data: Object.assign(Object.assign({}, state.data), {\n      present: data\n    })\n  });\n}\nfunction clearAttach(state) {\n  if (!state.connectState) {\n    return state;\n  }\n  let data = state.data.present;\n  const {\n    targetPort,\n    targetNode\n  } = state.connectState;\n  if (targetNode && targetPort) {\n    data = data.updatePort(targetNode, targetPort, updateStatus(remove(GraphPortStatus.ConnectingAsTarget)));\n  }\n  return Object.assign(Object.assign({}, state), {\n    connectState: Object.assign(Object.assign({}, state.connectState), {\n      targetNode: undefined,\n      targetPort: undefined\n    }),\n    data: Object.assign(Object.assign({}, state.data), {\n      present: data\n    })\n  });\n} // eslint-disable-next-line complexity\n\nconst connectingReducer = (state, action) => {\n  var _a, _b, _c;\n  if (!isViewportComplete(state.viewport)) {\n    return state;\n  }\n  const {\n    rect\n  } = state.viewport;\n  switch (action.type) {\n    case GraphEdgeEvent.ConnectStart:\n      return Object.assign(Object.assign({}, state), {\n        connectState: Object.assign(Object.assign({}, EMPTY_CONNECT_STATE), {\n          sourceNode: action.nodeId,\n          sourcePort: action.portId,\n          movingPoint: action.clientPoint ? {\n            x: action.clientPoint.x - rect.left,\n            y: action.clientPoint.y - rect.top\n          } : undefined\n        }),\n        data: Object.assign(Object.assign({}, state.data), {\n          present: state.data.present.updatePort(action.nodeId, action.portId, updateStatus(add(GraphPortStatus.Connecting)))\n        })\n      });\n    case GraphEdgeEvent.ConnectMove:\n      if (state.connectState) {\n        return Object.assign(Object.assign({}, state), {\n          connectState: Object.assign(Object.assign({}, state.connectState), {\n            movingPoint: {\n              x: action.clientX - rect.left,\n              y: action.clientY - rect.top\n            }\n          })\n        });\n      }\n      return state;\n    case GraphEdgeEvent.ConnectEnd:\n      if (state.connectState) {\n        const {\n          edgeWillAdd,\n          isCancel\n        } = action;\n        const {\n          sourceNode,\n          sourcePort,\n          targetNode,\n          targetPort\n        } = state.connectState;\n        let data = state.data.present;\n        data = data.updatePort(sourceNode, sourcePort, updateStatus(replace(GraphPortStatus.Default)));\n        if (!isCancel && targetNode && targetPort) {\n          let edge = {\n            source: sourceNode,\n            sourcePortId: sourcePort,\n            target: targetNode,\n            targetPortId: targetPort,\n            id: v4(),\n            status: GraphEdgeStatus.Default\n          };\n          if (edgeWillAdd) {\n            edge = edgeWillAdd(edge, data);\n          }\n          data = data.insertEdge(edge).updatePort(targetNode, targetPort, updateStatus(replace(GraphPortStatus.Default)));\n          return Object.assign(Object.assign({}, state), {\n            connectState: undefined,\n            data: pushHistory(state.data, data, unSelectAllEntity())\n          });\n        }\n        return Object.assign(Object.assign({}, state), {\n          connectState: undefined,\n          data: Object.assign(Object.assign({}, state.data), {\n            present: data\n          })\n        });\n      }\n      return state;\n    case GraphEdgeEvent.ConnectNavigate:\n      if (state.connectState) {\n        const data = state.data.present;\n        const sourceNode = data.nodes.get(state.connectState.sourceNode);\n        const sourcePort = sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.getPort(state.connectState.sourcePort);\n        const targetNode = state.connectState.targetNode ? data.nodes.get(state.connectState.targetNode) : undefined;\n        const targetPort = state.connectState.targetPort ? targetNode === null || targetNode === void 0 ? void 0 : targetNode.getPort(state.connectState.targetPort) : undefined;\n        if (!sourceNode || !sourcePort) {\n          return state;\n        }\n        const next = nextConnectablePort(state.settings.graphConfig, {\n          anotherNode: sourceNode,\n          anotherPort: sourcePort\n        })(data, targetNode || sourceNode, targetPort);\n        if (!next.node || !next.port || next.node.id === sourceNode.id && next.port.id === sourcePort.id) {\n          return state;\n        }\n        return attachPort(state, next.node.id, next.port.id);\n      }\n      return state;\n    case GraphPortEvent.PointerEnter:\n      if (state.connectState) {\n        const {\n          sourceNode,\n          sourcePort\n        } = state.connectState;\n        const data = state.data.present;\n        const node = data.nodes.get(action.node.id);\n        const port = node === null || node === void 0 ? void 0 : node.getPort(action.port.id);\n        const anotherNode = data.nodes.get(sourceNode);\n        const anotherPort = anotherNode === null || anotherNode === void 0 ? void 0 : anotherNode.getPort(sourcePort);\n        if (node && port && anotherNode && anotherPort && isConnectable(state.settings.graphConfig, {\n          parentNode: node,\n          model: port,\n          data,\n          anotherPort,\n          anotherNode\n        })) {\n          return attachPort(state, node.id, port.id);\n        }\n      }\n      return state;\n    case GraphNodeEvent.PointerEnter:\n    case GraphNodeEvent.PointerMove:\n      if (state.connectState) {\n        const {\n          clientX,\n          clientY\n        } = action.rawEvent;\n        const {\n          sourceNode,\n          sourcePort\n        } = state.connectState;\n        const data = state.data.present;\n        const node = data.nodes.get(action.node.id);\n        const anotherNode = data.nodes.get(sourceNode);\n        const anotherPort = anotherNode === null || anotherNode === void 0 ? void 0 : anotherNode.getPort(sourcePort);\n        if (node && anotherNode && anotherPort) {\n          const targetPort = getNearestConnectablePort({\n            parentNode: node,\n            clientX,\n            clientY,\n            graphConfig: state.settings.graphConfig,\n            data: state.data.present,\n            viewport: state.viewport,\n            anotherPort,\n            anotherNode\n          });\n          if (!targetPort) {\n            return state;\n          }\n          return attachPort(state, node.id, targetPort.id);\n        }\n      }\n      return state;\n    case GraphNodeEvent.PointerLeave:\n      if (((_a = state.connectState) === null || _a === void 0 ? void 0 : _a.targetNode) === action.node.id) {\n        return clearAttach(state);\n      }\n      return state;\n    case GraphPortEvent.PointerLeave:\n      if (((_b = state.connectState) === null || _b === void 0 ? void 0 : _b.targetNode) === action.node.id && ((_c = state.connectState) === null || _c === void 0 ? void 0 : _c.targetPort) === action.port.id) {\n        return clearAttach(state);\n      }\n      return state;\n    default:\n      return state;\n  }\n};\nconst contextMenuReducer = (prevState, action) => {\n  let nextContextMenuPosition = prevState.contextMenuPosition;\n  switch (action.type) {\n    case GraphCanvasEvent.ContextMenu:\n    case GraphNodeEvent.ContextMenu:\n    case GraphEdgeEvent.ContextMenu:\n    case GraphPortEvent.ContextMenu:\n      {\n        const e = action.rawEvent;\n        if (e.button === MouseEventButton.Secondary) {\n          nextContextMenuPosition = {\n            x: e.clientX,\n            y: e.clientY\n          };\n        }\n      }\n      break;\n    case GraphCanvasEvent.Click:\n    case GraphNodeEvent.Click:\n    case GraphEdgeEvent.Click:\n    case GraphPortEvent.Click:\n      nextContextMenuPosition = undefined;\n      break;\n    case GraphContextMenuEvent.Open:\n      nextContextMenuPosition = {\n        x: action.x,\n        y: action.y\n      };\n      break;\n    case GraphContextMenuEvent.Close:\n      nextContextMenuPosition = undefined;\n      break;\n  }\n  if (prevState.contextMenuPosition === nextContextMenuPosition) {\n    return prevState;\n  }\n  return Object.assign(Object.assign({}, prevState), {\n    contextMenuPosition: nextContextMenuPosition\n  });\n};\nconst edgeReducer = (state, action) => {\n  switch (action.type) {\n    case GraphEdgeEvent.DoubleClick:\n      if (!state.settings.features.has(GraphFeatures.EditEdge)) {\n        return state;\n      }\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: state.data.present.updateEdge(action.edge.id, updateStatus(replace(GraphEdgeStatus.Editing)))\n        })\n      });\n    case GraphEdgeEvent.MouseEnter:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: state.data.present.updateEdge(action.edge.id, updateStatus(add(GraphEdgeStatus.Activated)))\n        })\n      });\n    case GraphEdgeEvent.MouseLeave:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: state.data.present.updateEdge(action.edge.id, updateStatus(remove(GraphEdgeStatus.Activated)))\n        })\n      });\n    case GraphEdgeEvent.Click:\n    case GraphEdgeEvent.ContextMenu:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: unSelectAllEntity()(state.data.present).updateEdge(action.edge.id, updateStatus(add(GraphEdgeStatus.Selected)))\n        })\n      });\n    case GraphEdgeEvent.Add:\n      return Object.assign(Object.assign({}, state), {\n        data: pushHistory(state.data, state.data.present.insertEdge(action.edge))\n      });\n    default:\n      return state;\n  }\n};\n\n/**\r\n * get alignment lines\r\n * @param draggingNodes the dragging node(s)\r\n * @param nodes all nodes to find the alignment lines\r\n * @param graphConfig graphConfig of type IGraphConfig\r\n * @param threshold threshold to align, default is 2\r\n */\n\nconst getAlignmentLines = (draggingNodes, nodes, graphConfig, threshold = 2) => {\n  const dummyDraggingNodeHW = getDummyDraggingNode(draggingNodes);\n  const closestNodes = getClosestNodes(dummyDraggingNodeHW, draggingNodes, nodes, graphConfig, threshold);\n  return getLines(dummyDraggingNodeHW, closestNodes, draggingNodes.length);\n};\n/**\r\n * get the dx or dy to auto align/attach\r\n * @param alignmentLines all alignment lines\r\n * @param nodes the dragging dummy node(s)\r\n * @param _graphConfig graphConfig of type IGraphConfig\r\n */\n\nconst getAutoAlignDisplacement = (alignmentLines, nodes, _graphConfig, alignDirection) => {\n  let min = Infinity;\n  let res = 0;\n  const nodeHW = getDummyDraggingNode(nodes);\n  const widthOrHeight = alignDirection === \"x\" ? nodeHW.width || 0 : nodeHW.height || 0;\n  alignmentLines.forEach(item => {\n    let alignLine;\n    if (alignDirection === \"x\" && item.x1 === item.x2) {\n      alignLine = item.x1;\n    } else if (alignDirection === \"y\" && item.y1 === item.y2) {\n      alignLine = item.y1;\n    } else {\n      return;\n    }\n    const distance1 = nodeHW[alignDirection] - alignLine;\n    const distanceMiddle = nodeHW[alignDirection] + (widthOrHeight || 0) / 2 - alignLine;\n    const distance2 = nodeHW[alignDirection] + (widthOrHeight || 0) - alignLine;\n    if (Math.abs(distance1) < min) {\n      min = Math.abs(distance1);\n      res = distance1 > 0 ? -min : min;\n    }\n    if (Math.abs(distanceMiddle) < min) {\n      min = Math.abs(distanceMiddle);\n      res = distanceMiddle > 0 ? -min : min;\n    }\n    if (Math.abs(distance2) < min) {\n      min = Math.abs(distance2);\n      res = distance2 > 0 ? -min : min;\n    }\n  });\n  return res;\n};\n/**\r\n * get min coordinate of nodes\r\n * @param nodes among these nodes to get the min coordinate\r\n * @param field \"x\"|\"y\"\r\n */\n\nconst getMinCoordinate = (nodes, field) => {\n  if (!nodes.length) {\n    return undefined;\n  }\n  return Math.min(...nodes.map(n => n[field]));\n};\n/**\r\n * get max coordinate of nodes\r\n * @param nodes among these nodes to get the max coordinate\r\n * @param field \"x\"|\"y\"\r\n */\n\nconst getMaxCoordinate = (nodes, field) => {\n  if (!nodes.length) {\n    return undefined;\n  }\n  return Math.max(...nodes.map(n => n[field] + (field === \"y\" ? n.height || 0 : n.width || 0)));\n};\n/**\r\n * set height and width for a node, and return the new node\r\n * @param node the node to set height and width\r\n * @param graphConfig graphConfig of type IGraphConfig\r\n */\n\nconst setSizeForNode = (node, graphConfig) => {\n  return Object.assign(Object.assign({}, node), getNodeSize(node, graphConfig));\n};\n/**\r\n * get the bounding box of the nodes\r\n * @param nodes the nodes to calculate the bounding box\r\n */\n\nconst getBoundingBoxOfNodes = nodes => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  nodes.forEach(n => {\n    const tempMinX = n.x;\n    const tempMinY = n.y;\n    const tempMaxX = n.x + (n.width || 0);\n    const tempMaxY = n.y + (n.height || 0);\n    if (tempMinX < minX) {\n      minX = tempMinX;\n    }\n    if (tempMinY < minY) {\n      minY = tempMinY;\n    }\n    if (tempMaxX > maxX) {\n      maxX = tempMaxX;\n    }\n    if (tempMaxY > maxY) {\n      maxY = tempMaxY;\n    }\n  });\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n};\n/**\r\n * get dummy dragging node constructed by all dragging nodes\r\n * @param draggingNodes all dragging nodes\r\n * @param graphConfig graphConfig of type IGraphConfig\r\n */\n\nconst getDummyDraggingNode = draggingNodes => {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = getBoundingBoxOfNodes(draggingNodes);\n  const dummyDraggingNode = {\n    id: v4(),\n    x,\n    y,\n    width,\n    height\n  };\n  return dummyDraggingNode;\n};\n/**\r\n * get the nodes closest to(within the threshold) the different sides of the dragging node(s)\r\n * @param dummyDraggingNode the dummy dragging node constructed by the dragging nodes\r\n * @param draggingNodes the dragging node(s)\r\n * @param nodes among these nodes to get the closest nodes\r\n * @param graphConfig graphConfig of type IGraphConfig\r\n * @param threshold threshold to align\r\n */\n\nconst getClosestNodes = (dummyDraggingNode, draggingNodes, nodes, graphConfig, threshold = 2) => {\n  const resX = []; // will has 3 items: the nodes closest to the \"left side\", \"middle\", \"right side\" (the order must follow this) of the dragging node\n\n  const resY = []; // will has 3 items: the nodes closest to the \"top\", \"middle\", \"bottom\" (the order must follow this) of the dragging node\n\n  const {\n    x: draggingNodeX,\n    y: draggingNodeY,\n    width: draggingNodeWidth = 0,\n    height: draggingNodeHeight = 0\n  } = dummyDraggingNode;\n  let minDistanceX = threshold;\n  let minDistanceY = threshold;\n  nodes.forEach(node => {\n    if (draggingNodes.find(dn => dn.id === node.id)) {\n      return;\n    }\n    const nodeHW = setSizeForNode(node, graphConfig);\n    const {\n      width: nodeWidth = 0,\n      height: nodeHeight = 0\n    } = nodeHW; // compare X coordinate of dragging node\n\n    [draggingNodeX, draggingNodeX + draggingNodeWidth / 2, draggingNodeX + draggingNodeWidth].forEach((draggingNodeValue, alignPos) => {\n      if (!resX[alignPos]) {\n        resX[alignPos] = {};\n      }\n      if (!resX[alignPos].closestNodes) {\n        resX[alignPos].closestNodes = [];\n      }\n      [nodeHW.x, nodeHW.x + nodeWidth / 2, nodeHW.x + nodeWidth].forEach(comparedValue => {\n        var _a;\n        const distance = Math.abs(draggingNodeValue - comparedValue);\n        if (distance <= minDistanceX) {\n          (_a = resX[alignPos].closestNodes) === null || _a === void 0 ? void 0 : _a.push(nodeHW);\n          resX[alignPos].alignCoordinateValue = comparedValue;\n          minDistanceX = distance;\n        }\n      });\n    }); // compare Y coordinate of dragging node\n\n    [draggingNodeY, draggingNodeY + draggingNodeHeight / 2, draggingNodeY + draggingNodeHeight].forEach((draggingNodeValue, alignPos) => {\n      if (!resY[alignPos]) {\n        resY[alignPos] = {};\n      }\n      if (!resY[alignPos].closestNodes) {\n        resY[alignPos].closestNodes = [];\n      }\n      [nodeHW.y, nodeHW.y + nodeHeight / 2, nodeHW.y + nodeHeight].forEach(comparedValue => {\n        var _a;\n        const distance = Math.abs(draggingNodeValue - comparedValue);\n        if (distance <= minDistanceY) {\n          (_a = resY[alignPos].closestNodes) === null || _a === void 0 ? void 0 : _a.push(nodeHW);\n          resY[alignPos].alignCoordinateValue = comparedValue;\n          minDistanceY = distance;\n        }\n      });\n    });\n  });\n  return {\n    closestX: resX,\n    closestY: resY\n  };\n};\n/**\r\n * get alignment lines\r\n * @param draggingNode the dragging node\r\n * @param closestNodes all closest nodes within the threshold\r\n */\n\nconst getLines = (draggingNode, closestNodes, numberOfDraggingNodes = 1) => {\n  const xLines = [];\n  const yLines = [];\n  const closestXNodes = closestNodes.closestX;\n  const closestYNodes = closestNodes.closestY; // vertical lines\n\n  closestXNodes.forEach((item, alignPos) => {\n    var _a;\n    if (item.alignCoordinateValue === undefined ||\n    // if it has the left alignment line for the dragging node OR has multi dragging nodes, will don't need middle alignment line\n    alignPos === 1 && (xLines.length || numberOfDraggingNodes > 1)) {\n      return;\n    }\n    const sameXNodes = [];\n    const x = item.alignCoordinateValue;\n    (_a = item.closestNodes) === null || _a === void 0 ? void 0 : _a.forEach(node => {\n      if (node.x === x || node.x + (node.width || 0) / 2 === x || node.x + (node.width || 0) === x) {\n        sameXNodes.push(node);\n      }\n    });\n    const y1 = getMinCoordinate([draggingNode, ...sameXNodes], \"y\");\n    const y2 = getMaxCoordinate([draggingNode, ...sameXNodes], \"y\");\n    if (y1 !== undefined && y2 !== undefined) {\n      xLines.push({\n        x1: x,\n        y1,\n        x2: x,\n        y2,\n        visible: true\n      });\n    }\n  }); // horizontal lines\n\n  closestYNodes.forEach((item, alignPos) => {\n    var _a;\n    if (item.alignCoordinateValue === undefined ||\n    // if it has the top alignment line for the dragging node OR has multi dragging nodes, will don't need middle alignment line\n    alignPos === 1 && (yLines.length || numberOfDraggingNodes > 1)) {\n      return;\n    }\n    const sameYNodes = [];\n    const y = item.alignCoordinateValue;\n    (_a = item.closestNodes) === null || _a === void 0 ? void 0 : _a.forEach(node => {\n      if (node.y === y || node.y + (node.height || 0) / 2 === y || node.y + (node.height || 0) === y) {\n        sameYNodes.push(node);\n      }\n    });\n    const x1 = getMinCoordinate([draggingNode, ...sameYNodes], \"x\");\n    const x2 = getMaxCoordinate([draggingNode, ...sameYNodes], \"x\");\n    if (x1 !== undefined && x2 !== undefined) {\n      yLines.push({\n        x1,\n        y1: y,\n        x2,\n        y2: y,\n        visible: true\n      });\n    }\n  });\n  return [...xLines, ...yLines];\n};\nfunction pipe(...args) {\n  return args.reduceRight((result, current) => value => result(current(value)), identical);\n}\nconst getDelta = (start, end, value) => {\n  if (value < start) {\n    return -10;\n  }\n  if (value > end) {\n    return 10;\n  }\n  return 0;\n};\nfunction getSelectedNodes(data, graphConfig) {\n  const nodes = [];\n  data.nodes.forEach(node => {\n    if (!isSelected(node)) {\n      return;\n    }\n    nodes.push(Object.assign({\n      id: node.id,\n      x: node.x,\n      y: node.y\n    }, getNodeSize(node, graphConfig)));\n  });\n  return nodes;\n}\nfunction dragNodeHandler(state, event) {\n  if (!isViewportComplete(state.viewport)) {\n    return state;\n  }\n  const limitScale = scale => {\n    return Math.max(scale, getScaleLimit(data, state.settings));\n  };\n  const e = event.rawEvent;\n  const {\n    rect\n  } = state.viewport;\n  const nextState = Object.assign({}, state);\n  const data = state.data.present;\n  const viewportDx = getDelta(rect.left, rect.right, e.clientX);\n  const viewportDy = getDelta(rect.top, rect.bottom, e.clientY);\n  const scale = viewportDx !== 0 || viewportDy !== 0 ? 0.999 : 1;\n  const viewport = viewportDx !== 0 || viewportDx !== 0 ? pipe(pan(-viewportDx, -viewportDy), zoom({\n    scale,\n    anchor: getRelativePoint(rect, e),\n    direction: Direction.XY,\n    limitScale\n  }))(state.viewport) : state.viewport;\n  const delta = getPointDeltaByClientDelta(event.dx + viewportDx * scale, event.dy + viewportDy * scale, viewport.transformMatrix);\n  const dummyNodes = Object.assign(Object.assign({}, state.dummyNodes), {\n    dx: state.dummyNodes.dx + delta.x,\n    dy: state.dummyNodes.dy + delta.y,\n    isVisible: event.isVisible\n  });\n  if (event.isAutoAlignEnable) {\n    const renderedNodes = getRenderedNodes(data.nodes, state.viewport);\n    if (renderedNodes.length < event.autoAlignThreshold) {\n      const nodes = dummyNodes.nodes.map(it => Object.assign(Object.assign({}, it), {\n        x: it.x + dummyNodes.dx,\n        y: it.y + dummyNodes.dy\n      }));\n      const alignmentLines = getAlignmentLines(nodes, renderedNodes, state.settings.graphConfig, state.viewport.transformMatrix[0] > 0.3 ? 2 : 5);\n      if (alignmentLines.length) {\n        const dxAligned = getAutoAlignDisplacement(alignmentLines, nodes, state.settings.graphConfig, \"x\");\n        const dyAligned = getAutoAlignDisplacement(alignmentLines, nodes, state.settings.graphConfig, \"y\");\n        dummyNodes.alignedDX = dummyNodes.dx + dxAligned;\n        dummyNodes.alignedDY = dummyNodes.dy + dyAligned;\n      } else {\n        dummyNodes.alignedDX = undefined;\n        dummyNodes.alignedDY = undefined;\n      }\n      nextState.alignmentLines = alignmentLines;\n    } else {\n      dummyNodes.alignedDX = undefined;\n      dummyNodes.alignedDY = undefined;\n    }\n  }\n  nextState.dummyNodes = dummyNodes;\n  nextState.viewport = viewport;\n  return nextState;\n}\nfunction handleDraggingNewNode(state, action) {\n  if (!state.settings.features.has(GraphFeatures.AutoAlign)) {\n    return state;\n  }\n  const data = state.data.present;\n  const renderedNodes = getRenderedNodes(data.nodes, state.viewport);\n  const alignmentLines = getAlignmentLines([action.node], renderedNodes, state.settings.graphConfig, state.viewport.transformMatrix[0] > 0.3 ? 2 : 5);\n  return Object.assign(Object.assign({}, state), {\n    alignmentLines\n  });\n}\nfunction dragStart(state, action) {\n  let data = state.data.present;\n  const targetNode = data.nodes.get(action.node.id);\n  if (!targetNode) {\n    return state;\n  }\n  let selectedNodes;\n  if (action.isMultiSelect) {\n    data = data.selectNodes(node => node.id === action.node.id || isSelected(node));\n    selectedNodes = getSelectedNodes(data, state.settings.graphConfig);\n  } else if (!isSelected(targetNode)) {\n    selectedNodes = [Object.assign({\n      id: action.node.id,\n      x: action.node.x,\n      y: action.node.y\n    }, getNodeSize(action.node, state.settings.graphConfig))];\n  } else {\n    selectedNodes = getSelectedNodes(data, state.settings.graphConfig);\n  }\n  return Object.assign(Object.assign({}, state), {\n    data: Object.assign(Object.assign({}, state.data), {\n      present: data\n    }),\n    dummyNodes: Object.assign(Object.assign({}, emptyDummyNodes()), {\n      isVisible: false,\n      nodes: selectedNodes\n    })\n  });\n}\nfunction dragEnd(state, action) {\n  let data = state.data.present;\n  if (action.isDragCanceled) {\n    return Object.assign(Object.assign({}, state), {\n      alignmentLines: [],\n      dummyNodes: emptyDummyNodes()\n    });\n  }\n  const {\n    dx,\n    dy\n  } = state.dummyNodes;\n  data = data.updateNodesPositionAndSize(state.dummyNodes.nodes.map(node => Object.assign(Object.assign({}, node), {\n    x: node.x + dx,\n    y: node.y + dy,\n    width: undefined,\n    height: undefined\n  })));\n  return Object.assign(Object.assign({}, state), {\n    alignmentLines: [],\n    dummyNodes: emptyDummyNodes(),\n    data: pushHistory(state.data, data, unSelectAllEntity())\n  });\n} // centralize node or locate node to the specific position\n\nfunction locateNode(action, state) {\n  const data = state.data.present;\n  if (!isViewportComplete(state.viewport) || !action.nodes.length) {\n    return state;\n  }\n  if (action.nodes.length === 1) {\n    const nodeId = action.nodes[0];\n    const node = data.nodes.get(nodeId);\n    if (!node) {\n      return state;\n    }\n    const {\n      width,\n      height\n    } = getNodeSize(node, state.settings.graphConfig);\n    const nodeX = action.type === GraphNodeEvent.Centralize ? node.x + width / 2 : node.x;\n    const nodeY = action.type === GraphNodeEvent.Centralize ? node.y + height / 2 : node.y;\n    const {\n      x: clientX,\n      y: clientY\n    } = transformPoint(nodeX, nodeY, state.viewport.transformMatrix);\n    const position = action.type === GraphNodeEvent.Locate ? action.position : undefined;\n    return Object.assign(Object.assign({}, state), {\n      viewport: scrollIntoView(clientX, clientY, state.viewport.rect, true, position)(state.viewport)\n    });\n  }\n  const {\n    minNodeX,\n    minNodeY,\n    maxNodeX,\n    maxNodeY\n  } = getContentArea$1(data, state.settings.graphConfig, new Set(action.nodes));\n  return Object.assign(Object.assign({}, state), {\n    viewport: focusArea(minNodeX, minNodeY, maxNodeX, maxNodeY, state.viewport)\n  });\n}\nconst nodeReducer = (state, action) => {\n  const data = state.data.present;\n  switch (action.type) {\n    //#region resize\n    case GraphNodeEvent.ResizingStart:\n      return Object.assign(Object.assign({}, state), {\n        dummyNodes: Object.assign(Object.assign({}, emptyDummyNodes()), {\n          isVisible: true,\n          nodes: getSelectedNodes(data, state.settings.graphConfig)\n        })\n      });\n    case GraphNodeEvent.Resizing:\n      return Object.assign(Object.assign({}, state), {\n        dummyNodes: Object.assign(Object.assign({}, state.dummyNodes), {\n          dx: action.dx,\n          dy: action.dy,\n          dWidth: action.dWidth,\n          dHeight: action.dHeight\n        })\n      });\n    case GraphNodeEvent.ResizingEnd:\n      {\n        const {\n          dx,\n          dy,\n          dWidth,\n          dHeight\n        } = state.dummyNodes;\n        return Object.assign(Object.assign({}, state), {\n          dummyNodes: emptyDummyNodes(),\n          data: pushHistory(state.data, data.updateNodesPositionAndSize(state.dummyNodes.nodes.map(node => Object.assign(Object.assign({}, node), {\n            x: node.x + dx,\n            y: node.y + dy,\n            width: node.width + dWidth,\n            height: node.height + dHeight\n          }))), unSelectAllEntity())\n        });\n      }\n    //#endregion resize\n    //#region drag\n\n    case GraphNodeEvent.DragStart:\n      return dragStart(state, action);\n    case GraphNodeEvent.Drag:\n      return dragNodeHandler(state, action);\n    case GraphNodeEvent.DragEnd:\n      return dragEnd(state, action);\n    //#endregion drag\n\n    case GraphNodeEvent.PointerEnter:\n      switch (state.behavior) {\n        case GraphBehavior.Default:\n          return Object.assign(Object.assign({}, state), {\n            data: Object.assign(Object.assign({}, state.data), {\n              present: data.updateNode(action.node.id, updateStatus(add(GraphNodeStatus.Activated)))\n            })\n          });\n        default:\n          return state;\n      }\n    case GraphNodeEvent.PointerLeave:\n      switch (state.behavior) {\n        case GraphBehavior.Default:\n        case GraphBehavior.Connecting:\n          return Object.assign(Object.assign({}, state), {\n            data: Object.assign(Object.assign({}, state.data), {\n              present: data.updateNode(action.node.id, updateStatus(remove(GraphNodeStatus.Activated)))\n            })\n          });\n        default:\n          return state;\n      }\n    case GraphCanvasEvent.DraggingNodeFromItemPanel:\n      return handleDraggingNewNode(state, action);\n    case GraphCanvasEvent.DraggingNodeFromItemPanelEnd:\n      {\n        if (action.node) {\n          return Object.assign(Object.assign({}, state), {\n            alignmentLines: [],\n            data: pushHistory(state.data, state.data.present.insertNode(Object.assign(Object.assign({}, action.node), {\n              status: GraphNodeStatus.Selected\n            })), unSelectAllEntity())\n          });\n        }\n        return Object.assign(Object.assign({}, state), {\n          alignmentLines: []\n        });\n      }\n    case GraphNodeEvent.Centralize:\n    case GraphNodeEvent.Locate:\n      return locateNode(action, state);\n    case GraphNodeEvent.Add:\n      return Object.assign(Object.assign({}, state), {\n        data: pushHistory(state.data, data.insertNode(action.node))\n      });\n    case GraphNodeEvent.DoubleClick:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: state.data.present.updateNode(action.node.id, updateStatus(add(GraphNodeStatus.Editing)))\n        })\n      });\n    default:\n      return state;\n  }\n};\nconst portReducer = (state, action) => {\n  switch (action.type) {\n    case GraphPortEvent.Focus:\n    case GraphPortEvent.PointerEnter:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: state.data.present.updatePort(action.node.id, action.port.id, updateStatus(add(GraphPortStatus.Activated)))\n        })\n      });\n    case GraphPortEvent.Blur:\n    case GraphPortEvent.PointerLeave:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: state.data.present.updatePort(action.node.id, action.port.id, updateStatus(remove(GraphPortStatus.Activated)))\n        })\n      });\n    case GraphPortEvent.Click:\n    case GraphPortEvent.ContextMenu:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: unSelectAllEntity()(state.data.present).updatePort(action.node.id, action.port.id, updateStatus(add(GraphPortStatus.Selected)))\n        })\n      });\n    default:\n      return state;\n  }\n};\nconst selectNodeBySelectBox = (graphConfig, transformMatrix, selectBox, data) => {\n  if (!selectBox.width || !selectBox.height) {\n    return data;\n  }\n  const selectAreaMinX = Math.min(selectBox.startX, selectBox.startX + selectBox.width);\n  const selectAreaMaxX = Math.max(selectBox.startX, selectBox.startX + selectBox.width);\n  const selectAreaMinY = Math.min(selectBox.startY, selectBox.startY + selectBox.height);\n  const selectAreaMaxY = Math.max(selectBox.startY, selectBox.startY + selectBox.height);\n  const primeSelectionMin = reverseTransformPoint(selectAreaMinX, selectAreaMinY, transformMatrix);\n  const primeSelectionMax = reverseTransformPoint(selectAreaMaxX, selectAreaMaxY, transformMatrix); // padding box does not apply transform matrix\n\n  const primeRectSelectionBox = {\n    minX: primeSelectionMin.x,\n    minY: primeSelectionMin.y,\n    maxX: primeSelectionMax.x,\n    maxY: primeSelectionMax.y\n  };\n  return data.selectNodes(n => {\n    const {\n      width,\n      height\n    } = getNodeSize(n, graphConfig);\n    const rectNode = {\n      minX: n.x,\n      minY: n.y,\n      maxX: n.x + width,\n      maxY: n.y + height\n    };\n    return checkRectIntersect(primeRectSelectionBox, rectNode);\n  });\n};\nfunction handleNavigate(state, action) {\n  let data = unSelectAllEntity()(state.data.present);\n  if (action.node && action.port) {\n    data = data.updatePort(action.node.id, action.port.id, updateStatus(add(GraphPortStatus.Selected)));\n  } else if (action.node) {\n    const nodeId = action.node.id;\n    data = data.selectNodes(node => node.id === nodeId);\n  }\n  return Object.assign(Object.assign({}, state), {\n    data: Object.assign(Object.assign({}, state.data), {\n      present: data\n    })\n  });\n}\nconst selectionReducer = (state, action) => {\n  var _a, _b;\n  const data = state.data.present;\n  const isLassoSelectEnable = state.settings.features.has(GraphFeatures.LassoSelect);\n  switch (action.type) {\n    case GraphCanvasEvent.Click:\n    case GraphCanvasEvent.ResetSelection:\n    case GraphCanvasEvent.ContextMenu:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: unSelectAllEntity()(data)\n        })\n      });\n    case GraphNodeEvent.Click:\n    case GraphNodeEvent.ContextMenu:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: nodeSelection(action.rawEvent, action.node)(data)\n        })\n      });\n    case GraphCanvasEvent.SelectStart:\n      {\n        if (!isViewportComplete(state.viewport)) {\n          return state;\n        }\n        const point = getRelativePoint(state.viewport.rect, action.rawEvent);\n        return Object.assign(Object.assign({}, state), {\n          data: Object.assign(Object.assign({}, state.data), {\n            present: unSelectAllEntity()(data)\n          }),\n          selectBoxPosition: {\n            startX: point.x,\n            startY: !isLassoSelectEnable ? point.y : 0,\n            width: 0,\n            height: 0\n          }\n        });\n      }\n    case GraphCanvasEvent.SelectMove:\n      if (state.behavior !== GraphBehavior.MultiSelect) {\n        return state;\n      }\n      return Object.assign(Object.assign({}, state), {\n        selectBoxPosition: Object.assign(Object.assign({}, state.selectBoxPosition), {\n          width: state.selectBoxPosition.width + action.dx,\n          height: !isLassoSelectEnable ? state.selectBoxPosition.height + action.dy : (_b = (_a = state.viewport.rect) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : state.selectBoxPosition.height\n        })\n      });\n    case GraphCanvasEvent.SelectEnd:\n      return Object.assign(Object.assign({}, state), {\n        selectBoxPosition: emptySelectBoxPosition(),\n        data: Object.assign(Object.assign({}, state.data), {\n          present: selectNodeBySelectBox(state.settings.graphConfig, state.viewport.transformMatrix, state.selectBoxPosition, data)\n        })\n      });\n    case GraphCanvasEvent.UpdateNodeSelectionBySelectBox:\n      {\n        if (state.behavior !== GraphBehavior.MultiSelect) {\n          return state;\n        }\n        return Object.assign(Object.assign({}, state), {\n          data: Object.assign(Object.assign({}, state.data), {\n            present: selectNodeBySelectBox(state.settings.graphConfig, state.viewport.transformMatrix, state.selectBoxPosition, data)\n          })\n        });\n      }\n    case GraphCanvasEvent.Navigate:\n      return handleNavigate(state, action);\n    case GraphNodeEvent.SelectAll:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: data.selectNodes(() => true)\n        })\n      });\n    case GraphNodeEvent.Select:\n      {\n        const nodes = new Set(action.nodes);\n        return Object.assign(Object.assign({}, state), {\n          data: Object.assign(Object.assign({}, state.data), {\n            present: data.selectNodes(node => nodes.has(node.id))\n          })\n        });\n      }\n    default:\n      return state;\n  }\n};\nfunction getRectCenter(rect) {\n  return {\n    x: rect.width / 2,\n    y: rect.height / 2\n  };\n}\nfunction resetViewport(viewport, data, graphConfig, action) {\n  if (!isViewportComplete(viewport)) {\n    return viewport;\n  }\n  if (!action.ensureNodeVisible) {\n    return Object.assign(Object.assign({}, viewport), {\n      transformMatrix: EMPTY_TRANSFORM_MATRIX\n    });\n  }\n  const {\n    nodes,\n    groups\n  } = data;\n  if (nodes.size === 0) {\n    return Object.assign(Object.assign({}, viewport), {\n      transformMatrix: EMPTY_TRANSFORM_MATRIX\n    });\n  }\n  const isShapeRectInViewport = r => {\n    return isRectVisible(r, viewport);\n  };\n  const nodeRects = nodes.map(n => getNodeRect(n, graphConfig));\n  const hasVisibleNode = nodeRects.find(isShapeRectInViewport);\n  if (hasVisibleNode) {\n    return Object.assign(Object.assign({}, viewport), {\n      transformMatrix: EMPTY_TRANSFORM_MATRIX\n    });\n  }\n  const groupRects = groups.map(g => getGroupRect(g, nodes, graphConfig));\n  const hasVisibleGroup = groupRects.find(isShapeRectInViewport);\n  if (hasVisibleGroup) {\n    return Object.assign(Object.assign({}, viewport), {\n      transformMatrix: EMPTY_TRANSFORM_MATRIX\n    });\n  } // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n  let focusNode = nodeRects.first();\n  const findTopMostRect = cur => {\n    if (focusNode.y > cur.y) {\n      focusNode = cur;\n    }\n  };\n  nodeRects.forEach(findTopMostRect);\n  groupRects.forEach(findTopMostRect);\n  return Object.assign(Object.assign({}, viewport), {\n    transformMatrix: [1, 0, 0, 1, -focusNode.x, -focusNode.y]\n  });\n}\nfunction zoomToFit(viewport, data, settings, action) {\n  if (!isViewportComplete(viewport)) {\n    return viewport;\n  }\n  const {\n    graphConfig,\n    nodeMaxVisibleSize,\n    nodeMinVisibleSize\n  } = settings;\n  const transformMatrix = getZoomFitMatrix(Object.assign(Object.assign({}, action), {\n    data,\n    graphConfig,\n    rect: viewport.rect,\n    nodeMaxVisibleSize,\n    nodeMinVisibleSize\n  }));\n  return Object.assign(Object.assign({}, viewport), {\n    transformMatrix\n  });\n}\nconst reducer = (viewport, action, data, settings) => {\n  var _a, _b, _c, _d;\n  const {\n    graphConfig,\n    canvasBoundaryPadding,\n    features\n  } = settings;\n  const limitScale = scale => {\n    return Math.max(scale, getScaleLimit(data, settings));\n  };\n  switch (action.type) {\n    case GraphCanvasEvent.ViewportResize:\n      return Object.assign(Object.assign({}, viewport), {\n        rect: action.viewportRect\n      });\n    case GraphCanvasEvent.Zoom:\n      if (!isViewportComplete(viewport)) {\n        return viewport;\n      }\n      return zoom({\n        scale: action.scale,\n        anchor: (_a = action.anchor) !== null && _a !== void 0 ? _a : getRectCenter(viewport.rect),\n        direction: action.direction,\n        limitScale\n      })(viewport);\n    case GraphScrollBarEvent.Scroll:\n    case GraphCanvasEvent.MouseWheelScroll:\n    case GraphCanvasEvent.Pan:\n    case GraphCanvasEvent.Drag:\n      {\n        if (!isViewportComplete(viewport)) {\n          return viewport;\n        }\n        const {\n          transformMatrix,\n          rect\n        } = viewport;\n        let {\n          dx,\n          dy\n        } = action;\n        const limitBoundary = features.has(GraphFeatures.LimitBoundary);\n        const groupPadding = (_c = (_b = data.groups) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.padding; // TODO: this is not precise\n\n        if (limitBoundary) {\n          const {\n            minX,\n            maxX,\n            minY,\n            maxY\n          } = getOffsetLimit({\n            data,\n            graphConfig,\n            rect,\n            transformMatrix,\n            canvasBoundaryPadding,\n            groupPadding\n          });\n          dx = clamp(minX - transformMatrix[4], maxX - transformMatrix[4], dx);\n          dy = clamp(minY - transformMatrix[5], maxY - transformMatrix[5], dy);\n        }\n        return pan(dx, dy)(viewport);\n      }\n    case GraphCanvasEvent.Pinch:\n      {\n        const {\n          dx,\n          dy,\n          scale,\n          anchor\n        } = action;\n        return pipe(pan(dx, dy), zoom({\n          scale,\n          anchor,\n          limitScale\n        }))(viewport);\n      }\n    case GraphMinimapEvent.Pan:\n      return minimapPan(action.dx, action.dy)(viewport);\n    case GraphCanvasEvent.ResetViewport:\n      return resetViewport(viewport, data, graphConfig, action);\n    case GraphCanvasEvent.ZoomTo:\n      if (!isViewportComplete(viewport)) {\n        return viewport;\n      }\n      return zoomTo({\n        scale: action.scale,\n        anchor: (_d = action.anchor) !== null && _d !== void 0 ? _d : getRectCenter(viewport.rect),\n        direction: action.direction,\n        limitScale\n      })(viewport);\n    case GraphCanvasEvent.ZoomToFit:\n      return zoomToFit(viewport, data, settings, action);\n    case GraphCanvasEvent.ScrollIntoView:\n      if (viewport.rect) {\n        const {\n          x,\n          y\n        } = transformPoint(action.x, action.y, viewport.transformMatrix);\n        return scrollIntoView(x, y, viewport.rect, true)(viewport);\n      }\n      return viewport;\n    default:\n      return viewport;\n  }\n};\nconst viewportReducer = (state, action) => {\n  const viewport = reducer(state.viewport, action, state.data.present, state.settings);\n  return viewport === state.viewport ? state : Object.assign(Object.assign({}, state), {\n    viewport\n  });\n};\nconst builtinReducer = composeReducers([behaviorReducer, viewportReducer, nodeReducer, portReducer, edgeReducer, canvasReducer, connectingReducer, selectionReducer, contextMenuReducer].map(reducer => next => (state, action) => next(reducer(state, action), action)));\nfunction getGraphReducer(middleware = undefined, finalReducer = identical) {\n  const finalMiddleware = middleware ? composeReducers([middleware, builtinReducer]) : builtinReducer;\n  return finalMiddleware(finalReducer);\n}\nfunction useGraphReducer(params, middleware) {\n  const reducer = React.useMemo(() => getGraphReducer(middleware), [middleware]);\n  const [state, dispatchImpl] = React.useReducer(reducer, params, createGraphState);\n  const sideEffects = useConst(() => []);\n  const prevStateRef = React.useRef(state);\n  const dispatch = React.useCallback((action, callback) => {\n    if (callback) {\n      sideEffects.push(callback);\n    }\n    dispatchImpl(action);\n  }, [sideEffects]);\n  React.useEffect(() => {\n    const prevState = prevStateRef.current;\n    if (prevState === state) {\n      return;\n    }\n    prevStateRef.current = state;\n    unstable_batchedUpdates(() => {\n      sideEffects.forEach(callback => {\n        try {\n          callback(state, prevState);\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          console.error(e);\n        }\n      });\n      sideEffects.length = 0;\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state]);\n  return [state, dispatch];\n}\nconst useBackgroundRect = state => {\n  const {\n    viewport\n  } = state;\n  const renderedArea = useRenderedArea(viewport, true);\n  return {\n    rect: renderedArea\n  };\n};\nclass MouseMoveEventProvider {\n  constructor(target) {\n    this.target = target;\n  }\n  off(type, callback) {\n    switch (type) {\n      case \"move\":\n        this.target.removeEventListener(\"mousemove\", callback);\n        break;\n      case \"end\":\n        this.target.removeEventListener(\"mouseup\", callback);\n        break;\n    }\n    return this;\n  }\n  on(type, callback) {\n    switch (type) {\n      case \"move\":\n        this.target.addEventListener(\"mousemove\", callback);\n        break;\n      case \"end\":\n        this.target.addEventListener(\"mouseup\", callback);\n        break;\n    }\n    return this;\n  }\n}\nconst useGetMouseDownOnAnchor = (node, eventChannel) => {\n  const graphController = useGraphController();\n  return React.useCallback(f => evt => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    eventChannel.trigger({\n      type: GraphNodeEvent.ResizingStart,\n      rawEvent: evt,\n      node\n    });\n    const drag = new DragController(new MouseMoveEventProvider(graphController.getGlobalEventTarget()), defaultGetPositionFromEvent);\n    drag.onMove = ({\n      totalDX,\n      totalDY,\n      e: rawEvent\n    }) => {\n      eventChannel.trigger(Object.assign({\n        type: GraphNodeEvent.Resizing,\n        rawEvent,\n        node,\n        dx: 0,\n        dy: 0,\n        dWidth: 0,\n        dHeight: 0\n      }, f(totalDX, totalDY)));\n    };\n    drag.onEnd = ({\n      e: rawEvent\n    }) => {\n      eventChannel.trigger({\n        type: GraphNodeEvent.ResizingEnd,\n        rawEvent,\n        node\n      });\n    };\n    eventChannel.trigger({\n      type: GraphNodeEvent.ResizingStart,\n      rawEvent: evt,\n      node\n    });\n    drag.start(evt.nativeEvent);\n  }, [eventChannel, graphController, node]);\n};\nclass PointerEventProvider {\n  constructor(target, pointerId = null) {\n    this.eventEmitter = new EventEmitter();\n    this.onMove = e => {\n      if (this.pointerId === null || this.pointerId === e.pointerId) {\n        this.eventEmitter.emit(\"move\", e);\n      }\n    };\n    this.onUp = e => {\n      if (this.pointerId === null || this.pointerId === e.pointerId) {\n        this.eventEmitter.emit(\"end\", e);\n      }\n    };\n    this.target = target;\n    this.pointerId = pointerId;\n  }\n  off(type, callback) {\n    this.eventEmitter.off(type, callback);\n    this.ensureRemoveListener(type);\n    return this;\n  }\n  on(type, callback) {\n    this.ensureAddListener(type);\n    this.eventEmitter.on(type, callback);\n    return this;\n  }\n  ensureAddListener(type) {\n    if (!this.eventEmitter.listeners(type).length) {\n      switch (type) {\n        case \"move\":\n          this.target.addEventListener(\"pointermove\", this.onMove);\n          break;\n        case \"end\":\n          this.target.addEventListener(\"pointerup\", this.onUp);\n          break;\n      }\n    }\n  }\n  ensureRemoveListener(type) {\n    if (!this.eventEmitter.listeners(type).length) {\n      switch (type) {\n        case \"move\":\n          this.target.removeEventListener(\"pointermove\", this.onMove);\n          break;\n        case \"end\":\n          this.target.removeEventListener(\"pointerup\", this.onUp);\n          break;\n      }\n    }\n  }\n}\nconst withSimulatedClick = (params, type) => ({\n  totalDX,\n  totalDY,\n  e: rawEvent\n}) => {\n  var _a;\n  const {\n    eventChannel,\n    dragThreshold,\n    containerRef\n  } = params;\n  const events = [];\n  events.push({\n    type,\n    rawEvent\n  });\n  if (rawEvent.target instanceof Node && ((_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.contains(rawEvent.target)) && isWithinThreshold(totalDX, totalDY, dragThreshold)) {\n    events.push({\n      type: GraphCanvasEvent.Click,\n      rawEvent\n    });\n  }\n  eventChannel.batch(events);\n};\nconst dragMultiSelect = (e, params) => {\n  const {\n    getPositionFromEvent,\n    graphController,\n    eventChannel\n  } = params;\n  const dragging = new DragController(new MouseMoveEventProvider(graphController.getGlobalEventTarget()), getPositionFromEvent);\n  dragging.onMove = ({\n    dx,\n    dy,\n    e: rawEvent\n  }) => {\n    eventChannel.trigger({\n      type: GraphCanvasEvent.SelectMove,\n      rawEvent,\n      dx,\n      dy\n    });\n  };\n  dragging.onEnd = withSimulatedClick(params, GraphCanvasEvent.SelectEnd);\n  eventChannel.trigger({\n    type: GraphCanvasEvent.SelectStart,\n    rawEvent: e\n  });\n  dragging.start(e);\n};\nconst dragPan = (e, params) => {\n  const {\n    getPositionFromEvent,\n    graphController,\n    eventChannel\n  } = params;\n  const dragging = new DragController(new MouseMoveEventProvider(graphController.getGlobalEventTarget()), getPositionFromEvent);\n  dragging.onMove = ({\n    dx,\n    dy,\n    e: rawEvent\n  }) => {\n    eventChannel.trigger({\n      type: GraphCanvasEvent.Drag,\n      rawEvent,\n      dx,\n      dy\n    });\n  };\n  dragging.onEnd = withSimulatedClick(params, GraphCanvasEvent.DragEnd);\n  dragging.start(e);\n  eventChannel.trigger({\n    type: GraphCanvasEvent.DragStart,\n    rawEvent: e\n  });\n};\nconst onContainerMouseDown = (e, params) => {\n  var _a;\n  e.preventDefault();\n  e.stopPropagation();\n  if (e.button !== MouseEventButton.Primary) {\n    return;\n  }\n  const {\n    canvasMouseMode,\n    isPanDisabled,\n    isMultiSelectDisabled,\n    state,\n    isLassoSelectEnable,\n    graphController\n  } = params; // in pan mode, hold ctrl or shift to perform select.\n  // in select mode, hold space to perform pan\n\n  const isPanMode = canvasMouseMode === CanvasMouseMode.Pan && !e.ctrlKey && !e.shiftKey && !e.metaKey || ((_a = state.activeKeys) === null || _a === void 0 ? void 0 : _a.has(\" \"));\n  if (!isPanDisabled && isPanMode) {\n    dragPan(e.nativeEvent, params);\n  } else if (!isMultiSelectDisabled || isLassoSelectEnable && !e.ctrlKey && !e.metaKey) {\n    dragMultiSelect(e.nativeEvent, params);\n  } else {\n    graphController.canvasClickOnce = true;\n  }\n};\nfunction isMouseButNotLeft(e) {\n  return e.pointerType === \"mouse\" && e.button !== MouseEventButton.Primary;\n}\nconst onNodePointerDown = (evt, target, params) => {\n  evt.preventDefault();\n  const {\n    svgRef,\n    isNodesDraggable,\n    getPositionFromEvent,\n    isClickNodeToSelectDisabled,\n    eventChannel,\n    dragThreshold,\n    rectRef,\n    isAutoAlignEnable,\n    autoAlignThreshold,\n    graphController\n  } = params;\n  if (isNodesDraggable) {\n    evt.stopPropagation();\n  }\n  const isMouseRight = isMouseButNotLeft(evt);\n  if (isClickNodeToSelectDisabled || isMouseRight) {\n    return;\n  }\n  if (svgRef.current) {\n    svgRef.current.focus({\n      preventScroll: true\n    });\n  }\n  const isMultiSelect = checkIsMultiSelect(evt);\n  const dragging = new DragNodeController(new PointerEventProvider(graphController.getGlobalEventTarget(), evt.pointerId), getPositionFromEvent, rectRef);\n  dragging.onMove = ({\n    dx,\n    dy,\n    totalDX,\n    totalDY,\n    e\n  }) => {\n    if (isNodesDraggable) {\n      eventChannel.trigger({\n        type: GraphNodeEvent.Drag,\n        node: target,\n        dx,\n        dy,\n        rawEvent: e,\n        isVisible: !isWithinThreshold(totalDX, totalDY, dragThreshold),\n        isAutoAlignEnable,\n        autoAlignThreshold\n      });\n    }\n  };\n  dragging.onEnd = ({\n    totalDX,\n    totalDY,\n    e\n  }) => {\n    var _a, _b;\n    graphController.pointerId = null;\n    const isDragCanceled = isWithinThreshold(totalDX, totalDY, dragThreshold);\n    if (isDragCanceled || !isNodesDraggable) {\n      graphController.nodeClickOnce = target;\n    }\n    eventChannel.trigger({\n      type: GraphNodeEvent.DragEnd,\n      node: target,\n      rawEvent: e,\n      isDragCanceled\n    });\n    if (isDragCanceled) {\n      const simulatedEvent = new MouseEvent(\"click\", e);\n      (_b = (_a = evt.currentTarget) !== null && _a !== void 0 ? _a : evt.target) === null || _b === void 0 ? void 0 : _b.dispatchEvent(simulatedEvent);\n    }\n  };\n  graphController.pointerId = evt.pointerId;\n  if (evt.target instanceof Element && evt.pointerType !== \"mouse\") {\n    evt.target.releasePointerCapture(evt.pointerId);\n  }\n  eventChannel.trigger({\n    type: GraphNodeEvent.DragStart,\n    node: target,\n    rawEvent: evt,\n    isMultiSelect\n  });\n  dragging.start(evt.nativeEvent);\n};\nconst useCanvasKeyboardEventHandlers = args => {\n  const {\n    featureControl,\n    graphConfig,\n    setCurHoverNode,\n    setCurHoverPort,\n    eventChannel\n  } = args;\n  const {\n    isDeleteDisabled,\n    isPasteDisabled,\n    isUndoEnabled\n  } = featureControl;\n  return React.useMemo(() => {\n    const keyDownHandlerMap = new Map();\n    const deleteKeyDownHandler = () => evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      if (isDeleteDisabled) {\n        return;\n      }\n      eventChannel.trigger({\n        type: GraphCanvasEvent.Delete\n      });\n      setCurHoverNode(undefined);\n      setCurHoverPort(undefined);\n    };\n    keyDownHandlerMap.set(\"delete\", deleteKeyDownHandler());\n    keyDownHandlerMap.set(\"backspace\", deleteKeyDownHandler());\n    const cKeyDownHandler = evt => {\n      if (metaControl(evt)) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        eventChannel.trigger({\n          type: GraphCanvasEvent.Copy\n        });\n      }\n    };\n    keyDownHandlerMap.set(\"c\", cKeyDownHandler);\n    const vKeyDownHandler = evt => {\n      if (metaControl(evt)) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (isPasteDisabled) {\n          return;\n        }\n        const data = graphConfig.getClipboard().read();\n        if (data) {\n          eventChannel.trigger({\n            type: GraphCanvasEvent.Paste,\n            data\n          });\n        }\n      }\n    };\n    keyDownHandlerMap.set(\"v\", vKeyDownHandler);\n    const zKeyDownHandler = evt => {\n      if (!isUndoEnabled) {\n        return;\n      }\n      if (metaControl(evt)) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        eventChannel.trigger({\n          type: GraphCanvasEvent.Undo\n        });\n      }\n    };\n    if (isUndoEnabled) {\n      keyDownHandlerMap.set(\"z\", zKeyDownHandler);\n    }\n    const yKeyDownHandler = evt => {\n      if (!isUndoEnabled) {\n        return;\n      }\n      if (metaControl(evt)) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        eventChannel.trigger({\n          type: GraphCanvasEvent.Redo\n        });\n      }\n    };\n    if (isUndoEnabled) {\n      keyDownHandlerMap.set(\"y\", yKeyDownHandler);\n    }\n    const aKeyDownHandler = evt => {\n      if (metaControl(evt)) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        eventChannel.trigger({\n          type: GraphNodeEvent.SelectAll\n        });\n      }\n    };\n    keyDownHandlerMap.set(\"a\", aKeyDownHandler);\n    const spaceKeyDownHandler = evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n    };\n    const ctrlKeyDownHandler = evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n    };\n    const metaKeyDownHandler = evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n    };\n    const shiftKeyDownHandler = evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n    };\n    keyDownHandlerMap.set(\" \", spaceKeyDownHandler);\n    keyDownHandlerMap.set(\"control\", ctrlKeyDownHandler);\n    keyDownHandlerMap.set(\"meta\", metaKeyDownHandler);\n    keyDownHandlerMap.set(\"shift\", shiftKeyDownHandler);\n    return evt => {\n      if (evt.repeat) {\n        return;\n      }\n      const key = evt.key.toLowerCase();\n      const handler = keyDownHandlerMap.get(key);\n      if (handler) {\n        handler.call(null, evt);\n      }\n    };\n  }, [eventChannel, graphConfig, isDeleteDisabled, isPasteDisabled, isUndoEnabled, setCurHoverNode, setCurHoverPort]);\n};\nlet prevMouseDownPortId;\nlet prevMouseDownPortTime;\nfunction useEventChannel({\n  props,\n  dispatch,\n  rectRef,\n  svgRef,\n  containerRef,\n  featureControl,\n  graphConfig,\n  setFocusedWithoutMouse,\n  setCurHoverNode,\n  setCurHoverPort,\n  eventChannel,\n  updateViewport,\n  graphController\n}) {\n  const {\n    dragThreshold = 10,\n    autoAlignThreshold = DEFAULT_AUTO_ALIGN_THRESHOLD,\n    getPositionFromEvent = defaultGetPositionFromEvent,\n    canvasMouseMode,\n    edgeWillAdd\n  } = props;\n  const {\n    isNodesDraggable,\n    isAutoAlignEnable,\n    isClickNodeToSelectDisabled,\n    isPanDisabled,\n    isMultiSelectDisabled,\n    isLassoSelectEnable,\n    isConnectDisabled,\n    isPortHoverViewEnable,\n    isNodeEditDisabled,\n    isA11yEnable\n  } = featureControl;\n  const animationFramedDispatch = React.useMemo(() => animationFramed(dispatch), [dispatch]);\n  const keyDownHandler = useCanvasKeyboardEventHandlers({\n    featureControl,\n    eventChannel,\n    graphConfig,\n    setCurHoverNode,\n    setCurHoverPort\n  });\n  const focusFirstNode = e => {\n    const data = graphController.getData();\n    if (data.nodes.size > 0 && svgRef.current) {\n      const firstNode = data.head && data.nodes.get(data.head);\n      if (firstNode) {\n        focusItem(svgRef, {\n          node: firstNode,\n          port: undefined\n        }, e, eventChannel);\n      }\n    }\n  }; //#region edge\n\n  const handleEdgeEvent = event => {\n    switch (event.type) {\n      case GraphEdgeEvent.ConnectStart:\n      case GraphEdgeEvent.ConnectMove:\n      case GraphEdgeEvent.ConnectEnd:\n      case GraphEdgeEvent.ConnectNavigate:\n      case GraphEdgeEvent.Click:\n      case GraphEdgeEvent.MouseEnter:\n      case GraphEdgeEvent.MouseLeave:\n      case GraphEdgeEvent.DoubleClick:\n        dispatch(event);\n        break;\n      case GraphEdgeEvent.ContextMenu:\n        event.rawEvent.stopPropagation();\n        event.rawEvent.preventDefault();\n        dispatch(event);\n        break;\n    }\n  }; //#endregion edge\n  //#region canvas\n  // eslint-disable-next-line complexity\n\n  const handleCanvasEvent = event => {\n    var _a, _b;\n    switch (event.type) {\n      case GraphCanvasEvent.ViewportResize:\n      case GraphCanvasEvent.Drag:\n      case GraphCanvasEvent.MouseWheelScroll:\n      case GraphCanvasEvent.Zoom:\n      case GraphCanvasEvent.Pinch:\n      case GraphCanvasEvent.Click:\n      case GraphCanvasEvent.SelectStart:\n      case GraphCanvasEvent.SelectMove:\n      case GraphCanvasEvent.SelectEnd:\n      case GraphCanvasEvent.ResetSelection:\n      case GraphCanvasEvent.Navigate:\n      case GraphCanvasEvent.Paste:\n      case GraphCanvasEvent.Undo:\n      case GraphCanvasEvent.Redo:\n      case GraphCanvasEvent.Delete:\n      case GraphCanvasEvent.KeyUp:\n      case GraphCanvasEvent.DraggingNodeFromItemPanelStart:\n      case GraphCanvasEvent.DraggingNodeFromItemPanel:\n      case GraphCanvasEvent.DraggingNodeFromItemPanelEnd:\n        dispatch(event);\n        break;\n      case GraphCanvasEvent.Copy:\n        {\n          const selectedData = filterSelectedItems(graphController.getData());\n          const clipboard = graphConfig.getClipboard();\n          clipboard.write(selectedData);\n        }\n        break;\n      case GraphCanvasEvent.KeyDown:\n        if (!event.rawEvent.repeat && event.rawEvent.target === event.rawEvent.currentTarget && !event.rawEvent.shiftKey && event.rawEvent.key === \"Tab\") {\n          event.rawEvent.preventDefault();\n          event.rawEvent.stopPropagation();\n          setFocusedWithoutMouse(true);\n          focusFirstNode(event.rawEvent);\n        } else {\n          keyDownHandler(event.rawEvent);\n        }\n        dispatch(event);\n        break;\n      case GraphCanvasEvent.MouseDown:\n        {\n          graphController.nodeClickOnce = null;\n          (_a = svgRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n            preventScroll: true\n          });\n          setFocusedWithoutMouse(false);\n          const evt = event.rawEvent;\n          updateViewport();\n          onContainerMouseDown(evt, {\n            state: graphController.state,\n            canvasMouseMode,\n            isPanDisabled,\n            isMultiSelectDisabled,\n            isLassoSelectEnable,\n            dragThreshold,\n            containerRef,\n            getPositionFromEvent: defaultGetPositionFromEvent,\n            eventChannel,\n            graphController\n          });\n        }\n        break;\n      case GraphCanvasEvent.MouseUp:\n        if (graphController.canvasClickOnce) {\n          graphController.canvasClickOnce = false;\n          const evt = event.rawEvent;\n          if (evt.target instanceof Node && ((_b = svgRef.current) === null || _b === void 0 ? void 0 : _b.contains(evt.target)) && evt.target.nodeName === \"svg\") {\n            eventChannel.trigger({\n              type: GraphCanvasEvent.Click,\n              rawEvent: event.rawEvent\n            });\n          }\n        }\n        break;\n      case GraphCanvasEvent.ContextMenu:\n        event.rawEvent.preventDefault();\n        event.rawEvent.stopPropagation();\n        dispatch(event);\n        break;\n      case GraphCanvasEvent.MouseMove:\n        {\n          const evt = event.rawEvent;\n          graphController.setMouseClientPosition({\n            x: evt.clientX,\n            y: evt.clientY\n          });\n        }\n        break;\n      case GraphCanvasEvent.MouseLeave:\n        graphController.unsetMouseClientPosition();\n        graphController.canvasClickOnce = false;\n        break;\n      case GraphCanvasEvent.Blur:\n        setFocusedWithoutMouse(false);\n        break;\n    }\n  }; //#endregion canvas\n  //#region node\n\n  const onNodePointerEnter = event => {\n    const {\n      node\n    } = event;\n    const {\n      isNodeHoverViewEnabled\n    } = featureControl;\n    const behavior = graphController.getBehavior();\n    switch (behavior) {\n      case GraphBehavior.Connecting:\n      case GraphBehavior.Default:\n        if (isNodeHoverViewEnabled) {\n          setCurHoverNode(node.id);\n          setCurHoverPort(undefined);\n        }\n        break;\n    }\n    dispatch(event);\n  };\n  const onNodePointerLeave = event => {\n    dispatch(event);\n    setCurHoverNode(undefined);\n  };\n  const onNodeDoubleClick = event => {\n    if (isNodeEditDisabled) {\n      return;\n    }\n    event.rawEvent.stopPropagation();\n    dispatch(event);\n  };\n  const onNodeKeyDown = event => {\n    if (!svgRef || !isA11yEnable) {\n      return;\n    }\n    const data = graphController.getData();\n    const {\n      node\n    } = event;\n    const evt = event.rawEvent;\n    switch (evt.key) {\n      case \"Tab\":\n        {\n          evt.preventDefault();\n          evt.stopPropagation();\n          const nextItem = evt.shiftKey ? getPrevItem(data, node) : getNextItem(data, node);\n          focusItem(svgRef, nextItem, evt, eventChannel);\n        }\n        break;\n      case \"ArrowUp\":\n        evt.preventDefault();\n        evt.stopPropagation();\n        focusUpNode(data, node.id, svgRef, graphController, evt, eventChannel);\n        break;\n      case \"ArrowDown\":\n        evt.preventDefault();\n        evt.stopPropagation();\n        focusDownNode(data, node.id, svgRef, graphController, evt, eventChannel);\n        break;\n      case \"ArrowLeft\":\n        evt.preventDefault();\n        evt.stopPropagation();\n        focusLeftNode(data, node.id, svgRef, graphController, evt, eventChannel);\n        break;\n      case \"ArrowRight\":\n        evt.preventDefault();\n        evt.stopPropagation();\n        focusRightNode(data, node.id, svgRef, graphController, evt, eventChannel);\n        break;\n    }\n  }; // eslint-disable-next-line complexity\n\n  const handleNodeEvent = event => {\n    var _a;\n    switch (event.type) {\n      case GraphNodeEvent.ResizingStart:\n      case GraphNodeEvent.Resizing:\n      case GraphNodeEvent.ResizingEnd:\n      case GraphNodeEvent.DragStart:\n      case GraphNodeEvent.Drag:\n      case GraphNodeEvent.DragEnd:\n      case GraphNodeEvent.SelectAll:\n        dispatch(event);\n        break;\n      case GraphNodeEvent.PointerMove:\n        if (event.rawEvent.pointerId === graphController.pointerId) {\n          animationFramedDispatch(event);\n        }\n        break;\n      case GraphNodeEvent.PointerDown:\n        {\n          graphController.nodeClickOnce = null;\n          if (graphController.getBehavior() !== GraphBehavior.Default) {\n            return;\n          }\n          const evt = event.rawEvent;\n          updateViewport();\n          onNodePointerDown(evt, event.node, {\n            svgRef,\n            rectRef,\n            isNodesDraggable,\n            isAutoAlignEnable,\n            dragThreshold,\n            getPositionFromEvent,\n            isClickNodeToSelectDisabled,\n            autoAlignThreshold,\n            eventChannel,\n            graphController\n          });\n        }\n        break;\n      case GraphNodeEvent.PointerEnter:\n        onNodePointerEnter(event);\n        break;\n      case GraphNodeEvent.PointerLeave:\n        onNodePointerLeave(event);\n        break;\n      case GraphNodeEvent.MouseDown:\n        graphController.nodeClickOnce = null;\n        event.rawEvent.preventDefault();\n        if (isNodesDraggable) {\n          event.rawEvent.stopPropagation();\n        }\n        setFocusedWithoutMouse(false);\n        break;\n      case GraphNodeEvent.Click:\n        if (((_a = graphController.nodeClickOnce) === null || _a === void 0 ? void 0 : _a.id) === event.node.id) {\n          const {\n            currentTarget\n          } = event.rawEvent;\n          if (currentTarget instanceof SVGElement) {\n            currentTarget.focus({\n              preventScroll: true\n            });\n          }\n          event.node = graphController.nodeClickOnce;\n          dispatch(event);\n          graphController.nodeClickOnce = null;\n        } else {\n          event.intercepted = true;\n        }\n        break;\n      case GraphNodeEvent.ContextMenu:\n        event.rawEvent.preventDefault();\n        event.rawEvent.stopPropagation();\n        dispatch(event);\n        break;\n      case GraphNodeEvent.DoubleClick:\n        onNodeDoubleClick(event);\n        break;\n      case GraphNodeEvent.KeyDown:\n        onNodeKeyDown(event);\n        break;\n    }\n  }; //#endregion node\n  //#region port\n\n  const onPortPointerDown = React.useCallback(event => {\n    const evt = event.rawEvent;\n    const {\n      node,\n      port\n    } = event;\n    setFocusedWithoutMouse(false);\n    evt.stopPropagation();\n    evt.preventDefault();\n    prevMouseDownPortId = `${node.id}:${port.id}`;\n    prevMouseDownPortTime = performance.now();\n    if (isConnectDisabled || isMouseButNotLeft(evt)) {\n      return;\n    }\n    updateViewport();\n    const globalEventTarget = graphController.getGlobalEventTarget();\n    const dragging = new DragController(new PointerEventProvider(globalEventTarget, evt.pointerId), getPositionFromEvent);\n    dragging.onMove = ({\n      clientX,\n      clientY,\n      e\n    }) => {\n      eventChannel.trigger({\n        type: GraphEdgeEvent.ConnectMove,\n        rawEvent: e,\n        clientX,\n        clientY\n      });\n    };\n    dragging.onEnd = ({\n      e,\n      totalDY,\n      totalDX\n    }) => {\n      var _a, _b;\n      const isCancel = isWithinThreshold(totalDX, totalDY, dragThreshold);\n      eventChannel.trigger({\n        type: GraphEdgeEvent.ConnectEnd,\n        rawEvent: e,\n        edgeWillAdd,\n        isCancel\n      });\n      graphController.pointerId = null;\n      if (isCancel) {\n        const simulatedEvent = new MouseEvent(\"click\", e);\n        (_b = (_a = evt.currentTarget) !== null && _a !== void 0 ? _a : evt.target) === null || _b === void 0 ? void 0 : _b.dispatchEvent(simulatedEvent);\n      }\n    };\n    eventChannel.trigger({\n      type: GraphEdgeEvent.ConnectStart,\n      nodeId: node.id,\n      portId: port.id,\n      rawEvent: evt,\n      clientPoint: {\n        x: evt.clientX,\n        y: evt.clientY\n      }\n    });\n    if (evt.target instanceof Element && evt.pointerType !== \"mouse\") {\n      evt.target.releasePointerCapture(evt.pointerId);\n    }\n    graphController.pointerId = evt.pointerId;\n    dragging.start(evt.nativeEvent);\n  }, [edgeWillAdd, eventChannel, getPositionFromEvent, graphController, isConnectDisabled, setFocusedWithoutMouse, updateViewport]);\n  const onPortPointerUp = React.useCallback(event => {\n    const evt = event.rawEvent;\n    const {\n      node,\n      port\n    } = event; // simulate port click event\n\n    if (prevMouseDownPortId === `${node.id}:${port.id}` && performance.now() - (prevMouseDownPortTime || 0) < 500) {\n      prevMouseDownPortId = undefined;\n      prevMouseDownPortTime = undefined;\n      eventChannel.trigger({\n        type: GraphPortEvent.Click,\n        node,\n        port,\n        rawEvent: evt\n      });\n    }\n  }, [eventChannel]);\n  const onPortPointerEnter = event => {\n    const behavior = graphController.getBehavior();\n    switch (behavior) {\n      case GraphBehavior.Default:\n        setCurHoverPort([event.node.id, event.port.id]);\n        break;\n    }\n    if (isPortHoverViewEnable) {\n      setCurHoverPort([event.node.id, event.port.id]);\n    }\n    if (event.rawEvent.pointerId === graphController.pointerId) {\n      dispatch(event);\n    }\n  };\n  const onPortPointerLeave = event => {\n    setCurHoverPort(undefined);\n    dispatch(event);\n  };\n  const onPortKeyDown = event => {\n    var _a, _b, _c;\n    if (!isA11yEnable) {\n      return;\n    }\n    const evt = event.rawEvent; // nativeEvent.code not support by Edge <79, use evt.key to polyfill\n\n    if (evt.altKey && (evt.nativeEvent.code === \"KeyC\" || evt.key === \"c\")) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      eventChannel.trigger({\n        type: GraphEdgeEvent.ConnectStart,\n        nodeId: event.node.id,\n        portId: event.port.id,\n        rawEvent: evt\n      });\n      return;\n    }\n    const data = graphController.getData();\n    const {\n      node,\n      port\n    } = event;\n    switch (evt.key) {\n      case \"Tab\":\n        if (isA11yEnable && graphController.getBehavior() === GraphBehavior.Connecting) {\n          evt.preventDefault();\n          evt.stopPropagation();\n          eventChannel.trigger({\n            type: GraphEdgeEvent.ConnectNavigate,\n            rawEvent: evt\n          });\n        } else {\n          const nextItem = evt.shiftKey ? getPrevItem(data, node, port) : getNextItem(data, node, port);\n          focusItem(svgRef, nextItem, evt, eventChannel);\n        }\n        break;\n      case \"ArrowUp\":\n      case \"ArrowLeft\":\n        evt.preventDefault();\n        evt.stopPropagation();\n        focusPrevPort((_a = node.ports) !== null && _a !== void 0 ? _a : [], node, port.id, svgRef, evt, eventChannel);\n        break;\n      case \"ArrowDown\":\n      case \"ArrowRight\":\n        evt.preventDefault();\n        evt.stopPropagation();\n        focusNextPort((_b = node.ports) !== null && _b !== void 0 ? _b : [], node, port.id, svgRef, evt, eventChannel);\n        break;\n      case \"g\":\n        evt.preventDefault();\n        evt.stopPropagation();\n        goToConnectedPort(data, node, port, svgRef, evt, eventChannel);\n        break;\n      case \"Escape\":\n        if (graphController.getBehavior() === GraphBehavior.Connecting) {\n          evt.preventDefault();\n          evt.stopPropagation();\n          if (svgRef.current) {\n            (_c = findDOMElement(svgRef.current, {\n              node,\n              port\n            })) === null || _c === void 0 ? void 0 : _c.blur();\n          }\n        }\n        break;\n      case \"Enter\":\n        evt.preventDefault();\n        evt.stopPropagation();\n        eventChannel.trigger({\n          type: GraphEdgeEvent.ConnectEnd,\n          rawEvent: evt.nativeEvent,\n          edgeWillAdd,\n          isCancel: false\n        });\n        break;\n    }\n  };\n  const handlePortEvent = event => {\n    switch (event.type) {\n      case GraphPortEvent.Click:\n        dispatch(event);\n        break;\n      case GraphPortEvent.PointerDown:\n        onPortPointerDown(event);\n        break;\n      case GraphPortEvent.PointerUp:\n        onPortPointerUp(event);\n        break;\n      case GraphPortEvent.PointerEnter:\n        onPortPointerEnter(event);\n        break;\n      case GraphPortEvent.PointerLeave:\n        onPortPointerLeave(event);\n        break;\n      case GraphPortEvent.ContextMenu:\n        event.rawEvent.preventDefault();\n        event.rawEvent.stopPropagation();\n        dispatch(event);\n        break;\n      case GraphPortEvent.Focus:\n        event.rawEvent.stopPropagation();\n        dispatch(event);\n        break;\n      case GraphPortEvent.Blur:\n        if (graphController.getBehavior() === GraphBehavior.Connecting) {\n          eventChannel.trigger({\n            type: GraphEdgeEvent.ConnectEnd,\n            rawEvent: event.rawEvent.nativeEvent,\n            edgeWillAdd,\n            isCancel: true\n          });\n        }\n        break;\n      case GraphPortEvent.KeyDown:\n        onPortKeyDown(event);\n        break;\n    }\n  }; //#endregion port\n\n  const handleEvent = event => {\n    const behavior = handleBehaviorChange(graphController.getBehavior(), event);\n    graphController.setBehavior(behavior);\n    handleEdgeEvent(event);\n    handleCanvasEvent(event);\n    handleNodeEvent(event);\n    handlePortEvent(event); //#region other events\n\n    switch (event.type) {\n      case GraphMinimapEvent.Pan:\n      case GraphScrollBarEvent.Scroll:\n      case GraphContextMenuEvent.Open:\n      case GraphContextMenuEvent.Close:\n        dispatch(event);\n        break;\n    } //#endregion other events\n  };\n  React.useImperativeHandle(eventChannel.listenersRef, () => handleEvent);\n  React.useImperativeHandle(eventChannel.externalHandlerRef, () => props.onEvent);\n}\nconst useFeatureControl = features => {\n  return React.useMemo(() => {\n    const isNodesDraggable = features.has(GraphFeatures.NodeDraggable);\n    const isNodeResizable = features.has(GraphFeatures.NodeResizable);\n    const isAutoFitDisabled = !features.has(GraphFeatures.AutoFit);\n    const isPanDisabled = !features.has(GraphFeatures.PanCanvas);\n    const isMultiSelectDisabled = !features.has(GraphFeatures.MultipleSelect);\n    const isLassoSelectEnable = features.has(GraphFeatures.LassoSelect);\n    const isNodeHoverViewEnabled = features.has(GraphFeatures.NodeHoverView);\n    const isClickNodeToSelectDisabled = !features.has(GraphFeatures.ClickNodeToSelect);\n    const isConnectDisabled = !features.has(GraphFeatures.AddNewEdges);\n    const isPortHoverViewEnable = features.has(GraphFeatures.PortHoverView);\n    const isNodeEditDisabled = !features.has(GraphFeatures.EditNode);\n    const isVerticalScrollDisabled = !features.has(GraphFeatures.CanvasVerticalScrollable);\n    const isHorizontalScrollDisabled = !features.has(GraphFeatures.CanvasHorizontalScrollable);\n    const isA11yEnable = features.has(GraphFeatures.A11yFeatures);\n    const isAutoAlignEnable = features.has(GraphFeatures.AutoAlign);\n    const isCtrlKeyZoomEnable = features.has(GraphFeatures.CtrlKeyZoom);\n    const isLimitBoundary = features.has(GraphFeatures.LimitBoundary);\n    const isVirtualizationEnabled = !features.has(GraphFeatures.AutoFit);\n    const isEdgeEditable = features.has(GraphFeatures.EditEdge);\n    const isDeleteDisabled = !features.has(GraphFeatures.Delete);\n    const isPasteDisabled = !features.has(GraphFeatures.AddNewNodes) || !features.has(GraphFeatures.AddNewEdges);\n    const isUndoEnabled = features.has(GraphFeatures.UndoStack);\n    const isScrollbarVisible = (!isVerticalScrollDisabled || !isHorizontalScrollDisabled || !isPanDisabled) && isLimitBoundary && !features.has(GraphFeatures.InvisibleScrollbar);\n    return {\n      isNodesDraggable,\n      isNodeResizable,\n      isAutoFitDisabled,\n      isPanDisabled,\n      isMultiSelectDisabled,\n      isLassoSelectEnable,\n      isNodeHoverViewEnabled,\n      isClickNodeToSelectDisabled,\n      isConnectDisabled,\n      isPortHoverViewEnable,\n      isNodeEditDisabled,\n      isVerticalScrollDisabled,\n      isHorizontalScrollDisabled,\n      isA11yEnable,\n      isAutoAlignEnable,\n      isCtrlKeyZoomEnable,\n      isLimitBoundary,\n      isVirtualizationEnabled,\n      isEdgeEditable,\n      isDeleteDisabled,\n      isPasteDisabled,\n      isUndoEnabled,\n      isScrollbarVisible\n    };\n  }, [features]);\n};\nconst emptyLine = () => ({\n  x1: 0,\n  y1: 0,\n  x2: 0,\n  y2: 0,\n  visible: false\n});\nconst Line = props => {\n  var _a;\n  const {\n    line,\n    style\n  } = props;\n  const lineStyle = Object.assign(Object.assign({\n    // strokeDasharray: \"0,0\",\n    strokeWidth: 1\n  }, style), {\n    stroke: line.visible ? (_a = style === null || style === void 0 ? void 0 : style.stroke) !== null && _a !== void 0 ? _a : \"#ea4300\" : \"none\"\n  });\n  return jsx(\"line\", {\n    className: \"auto-align-hint\",\n    x1: line.x1,\n    y1: line.y1,\n    x2: line.x2,\n    y2: line.y2,\n    style: lineStyle\n  });\n};\nconst AlignmentLines = /*#__PURE__*/React.memo(({\n  style\n}) => {\n  const alignmentLines = useAlignmentLines();\n  return jsx(Fragment, {\n    children: alignmentLines.map((l, index) => {\n      if (l.visible) {\n        return jsx(Line, {\n          line: l,\n          style: style\n        }, index);\n      }\n      return null;\n    })\n  });\n});\nAlignmentLines.displayName = \"AlignmentLines\";\nconst NodeFrame = props => {\n  var _a, _b;\n  const slotsContext = React.useContext(SlotsContext);\n  return jsx(Fragment, {\n    children: (_b = (_a = slotsContext.renderNodeFrame) === null || _a === void 0 ? void 0 : _a.call(slotsContext, props)) !== null && _b !== void 0 ? _b : props.children\n  });\n};\nconst NodeResizeHandler = props => {\n  var _a, _b;\n  const slotsContext = React.useContext(SlotsContext);\n  return jsx(Fragment, {\n    children: (_b = (_a = slotsContext.renderNodeResizeHandler) === null || _a === void 0 ? void 0 : _a.call(slotsContext, props)) !== null && _b !== void 0 ? _b : props.children\n  });\n};\nconst Slots = {\n  NodeFrame,\n  NodeResizeHandler\n};\nconst AnimatingNodeGroup = props => {\n  var _a, _b;\n  const {\n    dummyNodes,\n    graphData\n  } = props;\n  const graphConfig = useGraphConfig();\n  const {\n    dWidth,\n    dHeight\n  } = dummyNodes;\n  const dx = (_a = dummyNodes.alignedDX) !== null && _a !== void 0 ? _a : dummyNodes.dx;\n  const dy = (_b = dummyNodes.alignedDY) !== null && _b !== void 0 ? _b : dummyNodes.dy;\n  return jsx(\"g\", {\n    children: dummyNodes.nodes.map(dummyNode => {\n      const node = graphData.nodes.get(dummyNode.id);\n      if (!node) {\n        return null;\n      }\n      const x = dummyNode.x + dx;\n      const y = dummyNode.y + dy;\n      const width = dummyNode.width + dWidth;\n      const height = dummyNode.height + dHeight;\n      const nodeConfig = getNodeConfig(node, graphConfig);\n      if (nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.renderDummy) {\n        return nodeConfig.renderDummy(Object.assign(Object.assign({}, node.inner), {\n          x,\n          y,\n          width,\n          height\n        }));\n      }\n      return jsx(Slots.NodeFrame, Object.assign({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }, {\n        children: jsx(\"rect\", {\n          transform: `translate(${x},${y})`,\n          height: height,\n          width: width,\n          stroke: defaultColors.dummyNodeStroke,\n          strokeDasharray: \"4\",\n          fill: \"none\"\n        }, node.id)\n      }), `node-frame-${dummyNode.id}`);\n    })\n  });\n};\nconst ConnectingLine = props => {\n  const {\n    autoAttachLine,\n    connectingLine,\n    styles\n  } = props;\n  const strokeColor = (styles === null || styles === void 0 ? void 0 : styles.stroke) || defaultColors.primaryColor;\n  const fill = (styles === null || styles === void 0 ? void 0 : styles.fill) || \"none\";\n  const strokeDasharray = (styles === null || styles === void 0 ? void 0 : styles.strokeDasharray) || \"4,4\";\n  const connectingLineStroke = connectingLine.visible ? strokeColor : \"none\";\n  return jsxs(\"g\", {\n    children: [jsx(\"defs\", {\n      children: jsx(\"marker\", Object.assign({\n        id: \"markerArrow\",\n        markerWidth: \"10\",\n        markerHeight: \"10\",\n        refX: \"6\",\n        refY: \"5\",\n        orient: \"auto\",\n        markerUnits: \"strokeWidth\"\n      }, {\n        children: jsx(\"path\", {\n          d: \"M0,0 L6,5 L0,10\",\n          style: {\n            stroke: connectingLineStroke,\n            fill: \"none\"\n          }\n        })\n      }))\n    }), jsx(\"line\", {\n      x1: connectingLine.x1,\n      y1: connectingLine.y1,\n      x2: connectingLine.x2,\n      y2: connectingLine.y2,\n      style: {\n        stroke: connectingLineStroke,\n        fill,\n        strokeDasharray\n      },\n      markerEnd: \"url(#markerArrow)\"\n    }), jsx(\"path\", {\n      d: getCurvePathD(autoAttachLine.x2, autoAttachLine.x1, autoAttachLine.y2, autoAttachLine.y1),\n      style: {\n        stroke: autoAttachLine.visible ? strokeColor : \"none\",\n        fill: \"none\"\n      }\n    })]\n  });\n};\nconst Connecting = /*#__PURE__*/React.memo(props => {\n  const {\n    styles,\n    graphConfig,\n    viewport,\n    movingPoint\n  } = props;\n  const {\n    sourcePort,\n    sourceNode,\n    targetPort,\n    targetNode\n  } = useConnectingState();\n  if (!sourceNode || !sourcePort) {\n    return null;\n  }\n  const sourcePortPosition = sourceNode.getPortPosition(sourcePort.id, graphConfig);\n  let targetPortPosition;\n  let isAttach = false;\n  if (targetNode && targetPort) {\n    isAttach = true;\n    targetPortPosition = targetNode === null || targetNode === void 0 ? void 0 : targetNode.getPortPosition(targetPort.id, graphConfig);\n  } else {\n    targetPortPosition = sourcePortPosition;\n  }\n  if (!sourcePortPosition || !targetPortPosition) {\n    return null;\n  }\n  const sourcePoint = transformPoint(sourcePortPosition.x, sourcePortPosition.y, viewport.transformMatrix);\n  const targetPoint = transformPoint(targetPortPosition.x, targetPortPosition.y, viewport.transformMatrix);\n  const connectingLine = movingPoint ? {\n    x1: sourcePoint.x,\n    y1: sourcePoint.y,\n    x2: movingPoint.x,\n    y2: movingPoint.y,\n    visible: !isAttach\n  } : emptyLine();\n  const autoAttachLine = {\n    x1: sourcePoint.x,\n    y1: sourcePoint.y,\n    x2: targetPoint.x,\n    y2: targetPoint.y,\n    visible: isAttach\n  };\n  return jsx(ConnectingLine, {\n    connectingLine: connectingLine,\n    autoAttachLine: autoAttachLine,\n    styles: styles\n  });\n});\nConnecting.displayName = \"Connecting\";\nconst defaultStyle = {\n  position: \"fixed\",\n  userSelect: \"none\"\n};\nconst GraphContextMenu = ({\n  state,\n  onClick\n}) => {\n  var _a, _b;\n  const ref = React.useRef(null);\n  const [style, setStyle] = React.useState(Object.assign({}, defaultStyle));\n  React.useLayoutEffect(() => {\n    const el = ref.current;\n    if (!el || !state.contextMenuPosition) {\n      return;\n    }\n    const {\n      x,\n      y\n    } = state.contextMenuPosition;\n    const {\n      clientWidth,\n      clientHeight\n    } = document.documentElement;\n    const {\n      width,\n      height\n    } = el.getBoundingClientRect();\n    const nextStyle = Object.assign({}, defaultStyle);\n    if (x + width >= clientWidth) {\n      nextStyle.right = 0;\n    } else {\n      nextStyle.left = x;\n    }\n    if (y + height > clientHeight) {\n      nextStyle.bottom = 0;\n    } else {\n      nextStyle.top = y;\n    }\n    setStyle(nextStyle); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [(_a = state.contextMenuPosition) === null || _a === void 0 ? void 0 : _a.x, (_b = state.contextMenuPosition) === null || _b === void 0 ? void 0 : _b.y]);\n  const contextMenuConfig = useContextMenuConfigContext();\n  const [content, setContent] = React.useState(jsx(Fragment, {}));\n  React.useEffect(() => {\n    const data = state.data.present;\n    let selectedNodesCount = 0;\n    let selectedPortsCount = 0;\n    let selectedEdgesCount = 0;\n    data.nodes.forEach(node => {\n      var _a;\n      if (isSelected(node)) {\n        selectedNodesCount += 1;\n      }\n      (_a = node.ports) === null || _a === void 0 ? void 0 : _a.forEach(port => {\n        if (isSelected(port)) {\n          selectedPortsCount += 1;\n        }\n      });\n    });\n    data.edges.forEach(edge => {\n      if (isSelected(edge)) {\n        selectedEdgesCount += 1;\n      }\n    });\n    let menu; // todo port menu\n\n    if (selectedPortsCount + selectedNodesCount + selectedEdgesCount > 1) {\n      menu = contextMenuConfig.getMenu(MenuType.Multi);\n    } else if (selectedPortsCount + selectedNodesCount + selectedEdgesCount === 0) {\n      menu = contextMenuConfig.getMenu(MenuType.Canvas);\n    } else if (selectedNodesCount === 1) {\n      menu = contextMenuConfig.getMenu(MenuType.Node);\n    } else if (selectedPortsCount === 1) {\n      menu = contextMenuConfig.getMenu(MenuType.Port);\n    } else {\n      menu = contextMenuConfig.getMenu(MenuType.Edge);\n    }\n    setContent(menu);\n  }, [state.data.present, contextMenuConfig]);\n  const handleContextMenu = React.useCallback(evt => {\n    evt.stopPropagation();\n    evt.preventDefault();\n  }, []);\n  return jsx(Fragment, {\n    children: state.contextMenuPosition && jsx(\"div\", Object.assign({\n      ref: ref,\n      onClick: onClick,\n      onContextMenu: handleContextMenu,\n      role: \"button\",\n      style: style\n    }, {\n      children: content\n    }))\n  });\n};\nconst Renderer = props => jsx(\"rect\", {\n  height: props.height,\n  width: props.width,\n  fill: props.group.fill\n});\nconst defaultGroup = {\n  render: Renderer\n};\nconst Group = props => {\n  var _a;\n  const {\n    data,\n    group\n  } = props;\n  const graphConfig = useGraphConfig();\n  const {\n    x,\n    y,\n    width,\n    height\n  } = React.useMemo(() => getGroupRect(group, data.nodes, graphConfig), [group, data.nodes, graphConfig]);\n  const groupConfig = (_a = graphConfig.getGroupConfig(group)) !== null && _a !== void 0 ? _a : defaultGroup;\n  const automationId = `group-container-${group.id}`;\n  return jsx(\"g\", Object.assign({\n    \"data-automation-id\": automationId,\n    transform: `translate(${x}, ${y})`\n  }, {\n    children: groupConfig.render({\n      group,\n      height,\n      width\n    })\n  }), group.id);\n};\nconst GraphGroupsRenderer = props => {\n  return jsx(\"g\", {\n    children: React.useMemo(() => props.groups.map(group => {\n      return jsx(Group, {\n        group: group,\n        data: props.data\n      }, group.id);\n    }), [props.groups, props.data])\n  });\n};\nconst NodeTooltips = props => {\n  const {\n    node,\n    viewport\n  } = props;\n  const graphConfig = useGraphConfig();\n  if (!node) {\n    return null;\n  }\n  if (!has(GraphNodeStatus.Activated)(node.status)) {\n    return null;\n  }\n  const nodeConfig = getNodeConfig(node, graphConfig);\n  if (!(nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.renderTooltips)) {\n    return null;\n  }\n  return jsx(\"div\", Object.assign({\n    className: \"node-tooltips\"\n  }, {\n    children: nodeConfig.renderTooltips({\n      model: node,\n      viewport\n    })\n  }));\n};\nconst PortTooltips = props => {\n  const graphConfig = useGraphConfig();\n  const {\n    parentNode,\n    port,\n    viewport\n  } = props;\n  const isPortTooltipsVisible = has(GraphPortStatus.Activated)(port.status);\n  if (!isPortTooltipsVisible) {\n    return null;\n  }\n  const portConfig = graphConfig.getPortConfig(port);\n  if (!portConfig || !portConfig.renderTooltips) {\n    return null;\n  }\n  const pos = parentNode.getPortPosition(port.id, graphConfig);\n  if (!pos) {\n    return null;\n  }\n  return jsx(\"div\", Object.assign({\n    className: \"port-tooltips\"\n  }, {\n    children: jsx(ConnectingStateContext.Consumer, {\n      children: ({\n        sourceNode,\n        sourcePort\n      }) => portConfig.renderTooltips && portConfig.renderTooltips(Object.assign({\n        model: port,\n        parentNode,\n        data: props.data,\n        anotherNode: sourceNode,\n        anotherPort: sourcePort,\n        viewport\n      }, pos))\n    })\n  }));\n};\nfunction useRefValue(value) {\n  const ref = useRef(value);\n  useLayoutEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nconst SCROLL_BAR_WIDTH = 10;\nconst wrapperCommonStyle = {\n  position: \"absolute\",\n  cursor: \"initial\"\n};\nconst useStyles = createUseStyles({\n  verticalScrollWrapper: Object.assign(Object.assign({}, wrapperCommonStyle), {\n    height: \"100%\",\n    width: SCROLL_BAR_WIDTH,\n    top: 0,\n    right: 0\n  }),\n  horizontalScrollWrapper: Object.assign(Object.assign({}, wrapperCommonStyle), {\n    height: SCROLL_BAR_WIDTH,\n    width: \"100%\",\n    bottom: 0,\n    left: 0\n  }),\n  verticalScrollStyle: args => ({\n    height: args.scrollbarLayout.verticalScrollHeight,\n    width: \"100%\",\n    backgroundColor: defaultColors.scrollbarColor,\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    transform: `translateY(${args.scrollbarLayout.verticalScrollTop}px)`\n  }),\n  horizontalScrollStyle: args => ({\n    width: args.scrollbarLayout.horizontalScrollWidth - SCROLL_BAR_WIDTH,\n    height: \"100%\",\n    backgroundColor: defaultColors.scrollbarColor,\n    position: \"absolute\",\n    left: 0,\n    bottom: 0,\n    transform: `translateX(${args.scrollbarLayout.horizontalScrollLeft}px)`\n  })\n});\nconst Scrollbar = props => {\n  const {\n    vertical = true,\n    horizontal = true,\n    offsetLimit,\n    eventChannel,\n    viewport\n  } = props;\n  const graphController = useGraphController();\n  const scrollbarLayout = getScrollbarLayout(viewport, offsetLimit);\n  const classes = useStyles({\n    scrollbarLayout\n  });\n  const scrollbarLayoutRef = useRefValue(scrollbarLayout);\n  /**\r\n   * @param e\r\n   */\n\n  function onVerticalScrollMouseDown(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const {\n      height: containerHeight\n    } = viewport.rect;\n    const dragging = new DragController(new MouseMoveEventProvider(graphController.getGlobalEventTarget()), defaultGetPositionFromEvent);\n    dragging.onMove = ({\n      dy: scrollbarDy,\n      e: rawEvent\n    }) => {\n      const {\n        totalContentHeight\n      } = scrollbarLayoutRef.current;\n      const dy = -(scrollbarDy * totalContentHeight) / containerHeight;\n      eventChannel.trigger({\n        type: GraphScrollBarEvent.Scroll,\n        rawEvent,\n        dx: 0,\n        dy\n      });\n    };\n    dragging.onEnd = () => {\n      eventChannel.trigger({\n        type: GraphScrollBarEvent.ScrollEnd\n      });\n    };\n    dragging.start(e.nativeEvent);\n    eventChannel.trigger({\n      type: GraphScrollBarEvent.ScrollStart\n    });\n  }\n  /**\r\n   * @param e\r\n   */\n\n  function onHorizontalScrollMouseDown(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const {\n      width: containerWidth\n    } = viewport.rect;\n    const dragging = new DragController(new MouseMoveEventProvider(graphController.getGlobalEventTarget()), defaultGetPositionFromEvent);\n    dragging.onMove = ({\n      dx: scrollbarDx,\n      e: rawEvent\n    }) => {\n      const {\n        totalContentWidth\n      } = scrollbarLayoutRef.current;\n      const dx = -(scrollbarDx * totalContentWidth) / containerWidth;\n      eventChannel.trigger({\n        type: GraphScrollBarEvent.Scroll,\n        rawEvent,\n        dx,\n        dy: 0\n      });\n    };\n    dragging.onEnd = () => {\n      eventChannel.trigger({\n        type: GraphScrollBarEvent.ScrollEnd\n      });\n    };\n    dragging.start(e.nativeEvent);\n    eventChannel.trigger({\n      type: GraphScrollBarEvent.ScrollStart\n    });\n  }\n  return jsxs(Fragment, {\n    children: [vertical && jsx(\"div\", Object.assign({\n      className: classes.verticalScrollWrapper\n    }, {\n      children: jsx(\"div\", {\n        className: classes.verticalScrollStyle,\n        onMouseDown: onVerticalScrollMouseDown,\n        role: \"button\",\n        \"aria-label\": \"vertical scrollbar\",\n        \"aria-roledescription\": \"vertical scrollbar\",\n        id: \"canvas-vertical-scrollbar\"\n      })\n    })), horizontal && jsx(\"div\", Object.assign({\n      className: classes.horizontalScrollWrapper\n    }, {\n      children: jsx(\"div\", {\n        className: classes.horizontalScrollStyle,\n        onMouseDown: onHorizontalScrollMouseDown,\n        role: \"button\",\n        \"aria-label\": \"horizontal scrollbar\",\n        \"aria-roledescription\": \"horizontal scrollbar\",\n        id: \"canvas-horizontal-scrollbar\"\n      })\n    }))]\n  });\n}; // =========================== utils for scroll bar ================================\n\n/**\r\n * get the total content height, including the container height and the scrollable area\r\n *\r\n * @param containerHeight\r\n * @param offsetLimit\r\n * @returns totalContentHeight\r\n */\n\nfunction getTotalContentHeight(containerHeight, offsetLimit) {\n  const {\n    minY,\n    maxY\n  } = offsetLimit;\n  return containerHeight + maxY - minY;\n}\n/**\r\n * get the total content width, including the container width and the scrollable area\r\n *\r\n * @param containerWidth\r\n * @param offsetLimit\r\n * @returns totalContentWidth\r\n */\n\nfunction getTotalContentWidth(containerWidth, offsetLimit) {\n  const {\n    minX,\n    maxX\n  } = offsetLimit;\n  return containerWidth + maxX - minX;\n}\n/**\r\n * get the scrollbar size and position\r\n *\r\n * @param rect\r\n * @param offsetLimit\r\n * @param zoomPanSettings\r\n * @returns\r\n */\n\nfunction getScrollbarLayout(viewport, offsetLimit) {\n  const {\n    rect,\n    transformMatrix\n  } = viewport;\n  const totalContentHeight = getTotalContentHeight(rect.height, offsetLimit);\n  const totalContentWidth = getTotalContentWidth(rect.width, offsetLimit);\n  return {\n    totalContentHeight,\n    totalContentWidth,\n    verticalScrollHeight: rect.height * rect.height / totalContentHeight,\n    horizontalScrollWidth: rect.width * rect.width / totalContentWidth,\n    verticalScrollTop: (offsetLimit.maxY - transformMatrix[5]) * rect.height / totalContentHeight,\n    horizontalScrollLeft: (offsetLimit.maxX - transformMatrix[4]) * rect.width / totalContentWidth\n  };\n}\nconst Transform = ({\n  matrix,\n  children\n}) => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const transform = React.useMemo(() => `matrix(${matrix.join(\" \")})`, matrix);\n  return jsx(\"g\", Object.assign({\n    transform: transform\n  }, {\n    children: children\n  }));\n};\nfunction getHintPoints(source, target, {\n  minX,\n  minY,\n  maxX,\n  maxY\n}, yOnRightAxis, xOnBottomAxis, xOnTopAxis, yOnLeftAxis) {\n  if (source.x === target.x) {\n    return {\n      x: source.x,\n      y: source.y < target.y ? maxY : minY\n    };\n  }\n  if (source.x < target.x) {\n    if (source.y < target.y) {\n      return yOnRightAxis <= maxY ? {\n        x: maxX,\n        y: yOnRightAxis\n      } : {\n        x: xOnBottomAxis,\n        y: maxY\n      };\n    } else {\n      return yOnRightAxis >= minY ? {\n        x: maxX,\n        y: yOnRightAxis\n      } : {\n        x: xOnTopAxis,\n        y: minY\n      };\n    }\n  }\n  if (source.y < target.y) {\n    return xOnBottomAxis > minX ? {\n      x: xOnBottomAxis,\n      y: maxY\n    } : {\n      x: minX,\n      y: yOnLeftAxis\n    };\n  }\n  return yOnLeftAxis > minY ? {\n    x: minX,\n    y: yOnLeftAxis\n  } : {\n    x: xOnTopAxis,\n    y: minY\n  };\n}\nconst GraphEdge = /*#__PURE__*/React.memo(\n// eslint-disable-next-line complexity\nprops => {\n  var _a;\n  const {\n    edge,\n    data: graphModel,\n    eventChannel,\n    source,\n    target,\n    graphId\n  } = props;\n  const graphConfig = useGraphConfig();\n  const virtualization = useVirtualization();\n  const {\n    viewport,\n    renderedArea,\n    visibleArea\n  } = virtualization;\n  const edgeEvent = type => e => {\n    e.persist();\n    eventChannel.trigger({\n      type,\n      edge,\n      rawEvent: e\n    });\n  };\n  const isSourceRendered = isPointInRect(renderedArea, source);\n  const isTargetRendered = isPointInRect(renderedArea, target);\n  const isVisible = isSourceRendered && isTargetRendered;\n  React.useLayoutEffect(() => {\n    if (isVisible) {\n      virtualization.renderedEdges.add(edge.id);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [virtualization]);\n  if (!isVisible) {\n    return null;\n  }\n  const edgeConfig = graphConfig.getEdgeConfig(edge);\n  if (!edgeConfig) {\n    Debug.warn(`invalid edge ${JSON.stringify(edge)}`);\n    return null;\n  }\n  if (!edgeConfig.render) {\n    Debug.warn(`Missing \"render\" method in edge config ${JSON.stringify(edge)}`);\n    return null;\n  }\n  const isSourceVisible = isPointInRect(visibleArea, source);\n  const isTargetVisible = isPointInRect(visibleArea, target);\n  let edgeNode = edgeConfig.render({\n    model: edge,\n    data: graphModel,\n    x1: source.x,\n    y1: source.y,\n    x2: target.x,\n    y2: target.y,\n    viewport\n  });\n  if (has(GraphEdgeStatus.ConnectedToSelected)(edge.status) && (!isSourceVisible || !isTargetVisible)) {\n    const linearFunction = getLinearFunction(source.x, source.y, target.x, target.y);\n    const inverseLinearFunction = getLinearFunction(source.y, source.x, target.y, target.x);\n    const hintSource = isSourceVisible ? source : target;\n    const hintTarget = isSourceVisible ? target : source;\n    const yOnRightAxis = linearFunction(visibleArea.maxX);\n    const xOnBottomAxis = inverseLinearFunction(visibleArea.maxY);\n    const xOnTopAxis = inverseLinearFunction(visibleArea.minY);\n    const yOnLeftAxis = linearFunction(visibleArea.minX);\n    const hintPoint = getHintPoints(hintSource, hintTarget, visibleArea, yOnRightAxis, xOnBottomAxis, xOnTopAxis, yOnLeftAxis);\n    if (isSourceVisible && edgeConfig.renderWithTargetHint) {\n      edgeNode = edgeConfig.renderWithTargetHint({\n        model: edge,\n        data: graphModel,\n        x1: source.x,\n        y1: source.y,\n        x2: hintPoint.x,\n        y2: hintPoint.y,\n        viewport\n      });\n    } else if (isTargetVisible && edgeConfig.renderWithSourceHint) {\n      edgeNode = edgeConfig.renderWithSourceHint({\n        model: edge,\n        data: graphModel,\n        x1: hintPoint.x,\n        y1: hintPoint.y,\n        x2: target.x,\n        y2: target.y,\n        viewport\n      });\n    }\n  }\n  const id = getEdgeUid(graphId, edge);\n  const className = `edge-container-${edge.id}`;\n  const automationId = (_a = edge.automationId) !== null && _a !== void 0 ? _a : className;\n  return jsx(\"g\", Object.assign({\n    id: id,\n    onClick: edgeEvent(GraphEdgeEvent.Click),\n    onDoubleClick: edgeEvent(GraphEdgeEvent.DoubleClick),\n    onMouseDown: edgeEvent(GraphEdgeEvent.MouseDown),\n    onMouseUp: edgeEvent(GraphEdgeEvent.MouseUp),\n    onMouseEnter: edgeEvent(GraphEdgeEvent.MouseEnter),\n    onMouseLeave: edgeEvent(GraphEdgeEvent.MouseLeave),\n    onContextMenu: edgeEvent(GraphEdgeEvent.ContextMenu),\n    onMouseMove: edgeEvent(GraphEdgeEvent.MouseMove),\n    onMouseOver: edgeEvent(GraphEdgeEvent.MouseOver),\n    onMouseOut: edgeEvent(GraphEdgeEvent.MouseOut),\n    onFocus: undefined,\n    onBlur: undefined,\n    className: className,\n    \"data-automation-id\": automationId\n  }, {\n    children: edgeNode\n  }));\n});\nfunction compareEqual(prev, props) {\n  return prev.node === props.node;\n}\nconst EdgeChampNodeRender = /*#__PURE__*/React.memo(props => {\n  var _a, _b;\n  const {\n      node,\n      data\n    } = props,\n    others = __rest(props, [\"node\", \"data\"]);\n  const graphConfig = useGraphConfig();\n  const values = [];\n  const valueCount = node.valueCount;\n  for (let i = 0; i < valueCount; i += 1) {\n    const it = node.getValue(i);\n    const source = (_a = data.nodes.get(it.source)) === null || _a === void 0 ? void 0 : _a.getPortPosition(it.sourcePortId, graphConfig);\n    const target = (_b = data.nodes.get(it.target)) === null || _b === void 0 ? void 0 : _b.getPortPosition(it.targetPortId, graphConfig);\n    if (source && target) {\n      values.push(/*#__PURE__*/createElement(GraphEdge, Object.assign({}, others, {\n        key: it.id,\n        data: data,\n        edge: it,\n        source: source,\n        target: target\n      })));\n    }\n  }\n  const children = [];\n  const nodeCount = node.nodeCount;\n  for (let i = 0; i < nodeCount; i += 1) {\n    const it = node.getNode(i);\n    if (it.type === NodeType$1.Bitmap) {\n      children.push(jsx(EdgeChampNodeRender, Object.assign({}, props, {\n        node: it\n      }), node.getHash(i)));\n    } else {\n      children.push(jsx(EdgeHashCollisionNodeRender, Object.assign({}, props, {\n        node: it\n      }), it.getHash()));\n    }\n  }\n  return jsxs(Fragment, {\n    children: [values, children]\n  });\n}, compareEqual);\nEdgeChampNodeRender.displayName = \"EdgeChampNodeRender\";\nconst EdgeHashCollisionNodeRender = /*#__PURE__*/React.memo(props => {\n  const {\n      data,\n      node\n    } = props,\n    others = __rest(props, [\"data\", \"node\"]);\n  const graphConfig = useGraphConfig();\n  return jsx(Fragment, {\n    children: node.values.map(edge => {\n      var _a, _b;\n      const source = (_a = data.nodes.get(edge.source)) === null || _a === void 0 ? void 0 : _a.getPortPosition(edge.sourcePortId, graphConfig);\n      const target = (_b = data.nodes.get(edge.target)) === null || _b === void 0 ? void 0 : _b.getPortPosition(edge.targetPortId, graphConfig);\n      if (source && target) {\n        return /*#__PURE__*/createElement(GraphEdge, Object.assign({}, others, {\n          key: edge.id,\n          data: data,\n          edge: edge,\n          source: source,\n          target: target\n        }));\n      } else {\n        return null;\n      }\n    })\n  });\n}, compareEqual);\nEdgeHashCollisionNodeRender.displayName = \"EdgeHashCollisionNodeRender\";\nconst EdgeTree = props => {\n  const {\n      tree\n    } = props,\n    others = __rest(props, [\"tree\"]);\n  return jsx(EdgeChampNodeRender, Object.assign({}, others, {\n    node: tree.root\n  }));\n};\n\n// use static css file here\nconst styles = mergeStyleSets({\n  svg: [{\n    position: \"absolute\",\n    overflow: \"hidden\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\"\n  }, {\n    \"&:focus\": {\n      outline: \"none\"\n    }\n  }],\n  node: {\n    cursor: \"move\"\n  },\n  container: {\n    position: \"relative\",\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    touchAction: \"none\"\n  },\n  buttonA11Y: {\n    opacity: 0,\n    width: 0,\n    height: 0,\n    overflow: \"hidden\"\n  },\n  addingNodeSvg: {\n    zIndex: 1000000,\n    position: \"fixed\",\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"100%\"\n  },\n  moduleItem: {\n    userSelect: \"none\",\n    cursor: \"pointer\"\n  },\n  minimap: {\n    height: 320,\n    width: 320,\n    userSelect: \"none\",\n    touchAction: \"none\"\n  },\n  minimapSvg: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\"\n  }\n});\nconst GraphNode = props => {\n  var _a;\n  const {\n    node,\n    eventChannel,\n    getNodeAriaLabel,\n    viewport,\n    graphId\n  } = props;\n  const graphConfig = useGraphConfig();\n  const nodeConfig = getNodeConfig(node, graphConfig);\n  const nodeEvent = type => evt => {\n    evt.persist();\n    const e = {\n      type,\n      node,\n      rawEvent: evt\n    };\n    eventChannel.trigger(e);\n  };\n  const onClick = e => {\n    e.persist();\n    const isMultiSelect = checkIsMultiSelect(e);\n    eventChannel.trigger({\n      type: GraphNodeEvent.Click,\n      rawEvent: e,\n      isMultiSelect,\n      node\n    });\n  };\n  const id = getNodeUid(graphId, node);\n  const automationId = (_a = node.automationId) !== null && _a !== void 0 ? _a : getNodeAutomationId(node);\n  if (!(nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.render)) {\n    Debug.warn(`Missing \"render\" method in node config`);\n    return null;\n  }\n  return jsx(\"g\", Object.assign({\n    id: id,\n    // for IE and Edge\n    focusable: \"true\",\n    tabIndex: 0,\n    className: styles.node,\n    onPointerDown: nodeEvent(GraphNodeEvent.PointerDown),\n    onPointerEnter: nodeEvent(GraphNodeEvent.PointerEnter),\n    onPointerMove: nodeEvent(GraphNodeEvent.PointerMove),\n    onPointerLeave: nodeEvent(GraphNodeEvent.PointerLeave),\n    onPointerUp: nodeEvent(GraphNodeEvent.PointerUp),\n    onDoubleClick: nodeEvent(GraphNodeEvent.DoubleClick),\n    onMouseDown: nodeEvent(GraphNodeEvent.MouseDown),\n    onMouseUp: nodeEvent(GraphNodeEvent.MouseUp),\n    onMouseEnter: nodeEvent(GraphNodeEvent.MouseEnter),\n    onMouseLeave: nodeEvent(GraphNodeEvent.MouseLeave),\n    onContextMenu: nodeEvent(GraphNodeEvent.ContextMenu),\n    onMouseMove: nodeEvent(GraphNodeEvent.MouseMove),\n    onMouseOver: nodeEvent(GraphNodeEvent.MouseOver),\n    onMouseOut: nodeEvent(GraphNodeEvent.MouseOut),\n    onClick: onClick,\n    onKeyDown: nodeEvent(GraphNodeEvent.KeyDown),\n    \"aria-label\": getNodeAriaLabel(node),\n    role: \"group\",\n    \"aria-roledescription\": \"node\",\n    \"data-automation-id\": automationId\n  }, {\n    children: jsx(\"g\", Object.assign({\n      className: \"node-box-container\"\n    }, {\n      children: nodeConfig.render({\n        model: node,\n        viewport\n      })\n    }))\n  }));\n};\nconst RESIZE_POINT_WIDTH = 8;\nconst RESIZE_POINT_HEIGHT = 8;\nconst NodeAnchor = ({\n  x,\n  y,\n  cursor,\n  onMouseDown\n}) => {\n  return jsx(Slots.NodeResizeHandler, Object.assign({\n    x: x,\n    y: y,\n    cursor: cursor,\n    onMouseDown: onMouseDown\n  }, {\n    children: jsx(\"rect\", {\n      x: x,\n      y: y,\n      height: RESIZE_POINT_HEIGHT,\n      width: RESIZE_POINT_WIDTH,\n      stroke: defaultColors.controlPointColor,\n      fill: \"transparent\",\n      cursor: cursor,\n      onMouseDown: onMouseDown\n    })\n  }));\n};\nconst BBOX_PADDING = 15;\nconst GraphNodeAnchors = props => {\n  var _a, _b;\n  const {\n    node,\n    getMouseDown\n  } = props;\n  const graphConfig = useGraphConfig();\n  const nodeConfig = getNodeConfig(node, graphConfig);\n  const minWidth = (_a = nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.getMinWidth(node)) !== null && _a !== void 0 ? _a : 0;\n  const minHeight = (_b = nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.getMinHeight(node)) !== null && _b !== void 0 ? _b : 0;\n  const height = getRectHeight(nodeConfig, node);\n  const width = getRectWidth(nodeConfig, node);\n  const nw = getMouseDown((dx, dy) => {\n    const finalDx = Math.min(dx, width - minWidth);\n    const finalDy = Math.min(dy, height - minHeight);\n    return {\n      dx: +finalDx,\n      dy: +finalDy,\n      dWidth: -finalDx,\n      dHeight: -finalDy\n    };\n  });\n  const n = getMouseDown((_dx, dy) => {\n    const finalDy = Math.min(dy, height - minHeight);\n    return {\n      dy: +finalDy,\n      dHeight: -finalDy\n    };\n  });\n  const ne = getMouseDown((dx, dy) => {\n    const finalDx = Math.max(dx, minWidth - width);\n    const finalDy = Math.min(dy, height - minHeight);\n    return {\n      dy: +finalDy,\n      dWidth: +finalDx,\n      dHeight: -finalDy\n    };\n  });\n  const e = getMouseDown(dx => {\n    const finalDx = Math.max(dx, minWidth - width);\n    return {\n      dWidth: +finalDx\n    };\n  });\n  const se = getMouseDown((dx, dy) => {\n    const finalDx = Math.max(dx, minWidth - width);\n    const finalDy = Math.max(dy, minHeight - height);\n    return {\n      dWidth: +finalDx,\n      dHeight: +finalDy\n    };\n  });\n  const s = getMouseDown((_dx, dy) => {\n    const finalDy = Math.max(dy, minHeight - height);\n    return {\n      dHeight: +finalDy\n    };\n  });\n  const sw = getMouseDown((dx, dy) => {\n    const finalDx = Math.min(dx, width - minWidth);\n    const finalDy = Math.max(dy, minHeight - height);\n    return {\n      dx: +finalDx,\n      dWidth: -finalDx,\n      dHeight: +finalDy\n    };\n  });\n  const w = getMouseDown(dx => {\n    const finalDx = Math.min(dx, width - minWidth);\n    return {\n      dx: finalDx,\n      dWidth: -finalDx\n    };\n  });\n  return jsxs(Fragment, {\n    children: [jsx(NodeAnchor, {\n      cursor: \"nw-resize\",\n      x: node.x - BBOX_PADDING,\n      y: node.y - BBOX_PADDING - RESIZE_POINT_HEIGHT,\n      onMouseDown: nw\n    }, \"nw-resize\"), jsx(NodeAnchor, {\n      x: node.x + width / 2 - RESIZE_POINT_WIDTH / 2,\n      y: node.y - BBOX_PADDING - RESIZE_POINT_HEIGHT,\n      cursor: \"n-resize\",\n      onMouseDown: n\n    }, \"n-resize\"), jsx(NodeAnchor, {\n      x: node.x + width + BBOX_PADDING - RESIZE_POINT_WIDTH,\n      y: node.y - BBOX_PADDING - RESIZE_POINT_HEIGHT,\n      cursor: \"ne-resize\",\n      onMouseDown: ne\n    }, \"ne-resize\"), jsx(NodeAnchor, {\n      x: node.x + width + BBOX_PADDING - RESIZE_POINT_WIDTH,\n      y: node.y + height / 2 - RESIZE_POINT_HEIGHT / 2,\n      cursor: \"e-resize\",\n      onMouseDown: e\n    }, \"e-resize\"), jsx(NodeAnchor, {\n      x: node.x + width + BBOX_PADDING - RESIZE_POINT_WIDTH,\n      y: node.y + height + BBOX_PADDING,\n      cursor: \"se-resize\",\n      onMouseDown: se\n    }, \"se-resize\"), jsx(NodeAnchor, {\n      x: node.x + width / 2 - RESIZE_POINT_WIDTH / 2,\n      y: node.y + height + BBOX_PADDING,\n      cursor: \"s-resize\",\n      onMouseDown: s\n    }, \"s-resize\"), jsx(NodeAnchor, {\n      x: node.x - BBOX_PADDING,\n      y: node.y + height + BBOX_PADDING,\n      cursor: \"sw-resize\",\n      onMouseDown: sw\n    }, \"sw-resize\"), jsx(NodeAnchor, {\n      x: node.x - BBOX_PADDING,\n      y: node.y + height / 2 - RESIZE_POINT_HEIGHT / 2,\n      cursor: \"w-resize\",\n      onMouseDown: w\n    }, \"w-resize\")]\n  });\n};\nconst GraphOneNodePorts = props => {\n  const {\n    data,\n    node,\n    getPortAriaLabel,\n    eventChannel,\n    viewport,\n    graphId\n  } = props;\n  const graphConfig = useGraphConfig();\n  const ports = node.ports;\n  if (!ports) {\n    return null;\n  }\n  const portEvent = (type, port) => e => {\n    e.persist();\n    eventChannel.trigger({\n      type,\n      node,\n      port,\n      rawEvent: e\n    });\n  };\n  return jsx(\"g\", {\n    children: ports.map(p => {\n      var _a;\n      const portConfig = graphConfig.getPortConfig(p);\n      if (!portConfig || !portConfig.render) {\n        Debug.warn(`invalid port config ${node.id}:${node.name} - ${p.id}:${p.name}`);\n        return null;\n      }\n      const pos = node.getPortPosition(p.id, graphConfig);\n      if (!pos) {\n        return null;\n      }\n      const portKey = getPortUid(graphId, node, p);\n      const automationId = (_a = p.automationId) !== null && _a !== void 0 ? _a : getPortAutomationId(p, node);\n      return jsx(\"g\", Object.assign({\n        id: portKey,\n        tabIndex: 0,\n        // for IE and Edge\n        focusable: \"true\",\n        onPointerDown: portEvent(GraphPortEvent.PointerDown, p),\n        onPointerUp: portEvent(GraphPortEvent.PointerUp, p),\n        onDoubleClick: portEvent(GraphPortEvent.DoubleClick, p),\n        onMouseDown: portEvent(GraphPortEvent.MouseDown, p),\n        onMouseUp: portEvent(GraphPortEvent.MouseUp, p),\n        onContextMenu: portEvent(GraphPortEvent.ContextMenu, p),\n        onPointerEnter: portEvent(GraphPortEvent.PointerEnter, p),\n        onPointerLeave: portEvent(GraphPortEvent.PointerLeave, p),\n        onMouseMove: portEvent(GraphPortEvent.MouseMove, p),\n        onMouseOver: portEvent(GraphPortEvent.MouseOver, p),\n        onMouseOut: portEvent(GraphPortEvent.MouseOut, p),\n        onFocus: portEvent(GraphPortEvent.Focus, p),\n        onBlur: portEvent(GraphPortEvent.Blur, p),\n        onKeyDown: portEvent(GraphPortEvent.KeyDown, p),\n        onClick: portEvent(GraphPortEvent.Click, p),\n        \"aria-label\": getPortAriaLabel(data, node, p),\n        role: \"group\",\n        \"aria-roledescription\": \"port\",\n        \"data-automation-id\": automationId\n      }, {\n        children: jsx(ConnectingStateContext.Consumer, {\n          children: ({\n            sourceNode,\n            sourcePort\n          }) => portConfig === null || portConfig === void 0 ? void 0 : portConfig.render(Object.assign({\n            model: p,\n            data,\n            parentNode: node,\n            anotherNode: sourceNode,\n            anotherPort: sourcePort,\n            viewport\n          }, pos))\n        })\n      }), portKey);\n    })\n  });\n};\nconst GraphNodeParts = _a => {\n  var {\n      node,\n      isNodeResizable,\n      renderNodeAnchors\n    } = _a,\n    commonProps = __rest(_a, [\"node\", \"isNodeResizable\", \"renderNodeAnchors\"]);\n  const virtualization = useVirtualization();\n  const {\n    renderedArea,\n    viewport\n  } = virtualization;\n  const getMouseDown = useGetMouseDownOnAnchor(node, commonProps.eventChannel);\n  const isVisible = isPointInRect(renderedArea, node);\n  React.useLayoutEffect(() => {\n    if (isVisible) {\n      virtualization.renderedEdges.add(node.id);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [virtualization]);\n  if (!isVisible) {\n    return null;\n  }\n  let nodeAnchors;\n  if (isNodeResizable && isNodeEditing(node)) {\n    const defaultAnchors = jsx(GraphNodeAnchors, {\n      node: node,\n      getMouseDown: getMouseDown\n    });\n    nodeAnchors = renderNodeAnchors ? renderNodeAnchors(node, getMouseDown, defaultAnchors) : defaultAnchors;\n  }\n  return jsxs(Fragment, {\n    children: [jsx(GraphNode, Object.assign({}, commonProps, {\n      node: node,\n      viewport: viewport\n    })), jsx(GraphOneNodePorts, Object.assign({}, commonProps, {\n      node: node,\n      viewport: viewport\n    })), nodeAnchors]\n  });\n};\nconst GraphNodePartsMemo = /*#__PURE__*/React.memo(GraphNodeParts);\nconst NodeTreeNode = /*#__PURE__*/React.memo(_a => {\n  var {\n      node\n    } = _a,\n    others = __rest(_a, [\"node\"]);\n  const values = node.values.map(arg => {\n    const it = arg[1];\n    return jsx(GraphNodePartsMemo, Object.assign({\n      node: it\n    }, others), it.id);\n  });\n  const children = node.type === NodeType.Internal ? node.children.map((child, index) => {\n    const key = index < node.selfSize ? node.getKey(index) : \"last\";\n    return jsx(NodeTreeNode, Object.assign({\n      node: child\n    }, others), key);\n  }) : undefined;\n  return jsxs(Fragment, {\n    children: [values, children]\n  });\n}, (prevProps, nextProps) => prevProps.node === nextProps.node);\nNodeTreeNode.displayName = \"NodeTreeNode\";\nconst NodeTree = _a => {\n  var {\n      tree\n    } = _a,\n    others = __rest(_a, [\"tree\"]);\n  return jsx(NodeTreeNode, Object.assign({\n    node: tree.sortedRoot\n  }, others));\n};\nconst NodeLayers = ({\n  data,\n  renderTree\n}) => {\n  const layers = new Set();\n  data.nodes.forEach(n => layers.add(n.layer));\n  return jsx(Fragment, {\n    children: Array.from(layers.values()).sort().map(l => renderTree(data.nodes.filter(n => n.layer === l), l))\n  });\n};\nconst VirtualizationProvider = ({\n  viewport,\n  isVirtualizationEnabled,\n  virtualizationDelay,\n  eventChannel,\n  children\n}) => {\n  const renderedArea = useRenderedArea(viewport, isVirtualizationEnabled);\n  const visibleArea = React.useMemo(() => getVisibleArea(viewport), [viewport]);\n  const contextValue = React.useMemo(() => ({\n    viewport,\n    renderedArea,\n    visibleArea,\n    renderedEdges: new Set(),\n    renderedNodes: new Set(),\n    timestamp: performance.now()\n  }), [viewport, renderedArea, visibleArea]);\n  const context = useDeferredValue(contextValue, {\n    timeout: virtualizationDelay\n  });\n  const previousContextRef = React.useRef(context);\n  React.useEffect(() => {\n    const previousContext = previousContextRef.current;\n    previousContextRef.current = context;\n    eventChannel.trigger({\n      type: GraphCanvasEvent.VirtualizationRecalculated,\n      performanceStartTime: context.timestamp,\n      renderedNodes: previousContext.renderedNodes,\n      renderedEdges: previousContext.renderedEdges,\n      previousRenderedNodes: previousContext.renderedNodes,\n      previousRenderedEdges: previousContext.renderedEdges\n    });\n  }, [context, eventChannel]);\n  return jsx(VirtualizationContext.Provider, Object.assign({\n    value: context\n  }, {\n    children: children\n  }));\n};\nconst getCursorStyle = ({\n  canvasMouseMode,\n  state,\n  isPanDisabled,\n  isMultiSelecting\n}) => {\n  if (state.behavior === GraphBehavior.Connecting) {\n    return \"initial\";\n  }\n  const isClickMultipleSelect = [\"meta\", \"control\"].some(key => state.activeKeys.has(key));\n  if (isClickMultipleSelect) {\n    return \"initial\";\n  }\n  const isAreaSelection = state.activeKeys.has(\"shift\");\n  if (isAreaSelection) {\n    return \"crosshair\";\n  } // selection mode\n\n  if (canvasMouseMode !== CanvasMouseMode.Pan) {\n    if (state.activeKeys.has(\" \") && !isPanDisabled) {\n      return \"grab\";\n    }\n    if (isMultiSelecting) {\n      return \"crosshair\";\n    }\n    return \"inherit\";\n  }\n  return isPanDisabled ? \"inherit\" : \"grab\";\n};\n/**\r\n * @param state\r\n * @param isNodeDraggable\r\n */\n\nfunction getNodeCursor(isNodeDraggable) {\n  return isNodeDraggable ? \"move\" : \"initial\";\n}\nconst getGraphStyles = (props, state, isPanDisabled, isNodeDraggable, focusedWithoutMouse, isMultiSelecting) => {\n  var _a, _b;\n  return mergeStyleSets({\n    svg: [\"react-dag-editor-svg-container\", styles.svg, (_a = props.styles) === null || _a === void 0 ? void 0 : _a.svg, {\n      \"& *:focus\": {\n        outline: defaultColors.outlineStyle\n      },\n      [`& .${styles.node}`]: {\n        cursor: getNodeCursor(isNodeDraggable)\n      }\n    }],\n    container: [\"react-dag-editor-container\", styles.container, {\n      cursor: getCursorStyle({\n        canvasMouseMode: props.canvasMouseMode,\n        state,\n        isPanDisabled,\n        isMultiSelecting\n      }),\n      [`&.${styles.container}`]: Object.assign(Object.assign({\n        background: defaultColors.canvasBackground\n      }, props.style), (_b = props.styles) === null || _b === void 0 ? void 0 : _b.root)\n    }, focusedWithoutMouse && {\n      outline: `${defaultColors.focusOutlineColor} solid 1px`\n    }],\n    buttonA11y: [\"react-dag-editor-a11y-help-button\", styles.buttonA11Y],\n    node: [styles.node]\n  });\n};\nfunction Graph(props) {\n  var _a, _b, _c, _d, _e;\n  const [focusedWithoutMouse, setFocusedWithoutMouse] = React.useState(false);\n  const graphController = useGraphController();\n  const {\n    state,\n    dispatch\n  } = useGraphState();\n  const data = state.data.present;\n  const {\n    viewport\n  } = state;\n  const {\n    eventChannel\n  } = graphController;\n  const graphId = useConst(() => `graph-${v4()}`);\n  const defaultSVGRef = React.useRef(null);\n  const {\n    focusCanvasAccessKey = \"f\",\n    zoomSensitivity = 0.1,\n    scrollSensitivity = 0.5,\n    svgRef = defaultSVGRef,\n    virtualizationDelay = 500,\n    background = null\n  } = props;\n  const graphConfig = useGraphConfig();\n  const featureControl = useFeatureControl(state.settings.features);\n  const [curHoverNode, setCurHoverNode] = React.useState();\n  const [curHoverPort, setCurHoverPort] = React.useState(undefined);\n  const containerRef = React.useRef(null);\n  const rectRef = React.useRef(undefined);\n  const updateViewport = useUpdateViewportCallback(rectRef, svgRef, eventChannel);\n  useEventChannel({\n    props,\n    dispatch,\n    rectRef,\n    svgRef,\n    setFocusedWithoutMouse,\n    containerRef,\n    featureControl,\n    graphConfig,\n    setCurHoverNode,\n    setCurHoverPort,\n    updateViewport,\n    eventChannel,\n    graphController\n  });\n  useContainerRect(state, svgRef, containerRef, updateViewport);\n  const {\n    isNodesDraggable,\n    isNodeResizable,\n    isPanDisabled,\n    isMultiSelectDisabled,\n    isLassoSelectEnable,\n    isNodeEditDisabled,\n    isVerticalScrollDisabled,\n    isHorizontalScrollDisabled,\n    isA11yEnable,\n    isCtrlKeyZoomEnable,\n    isVirtualizationEnabled,\n    isScrollbarVisible\n  } = featureControl;\n  useSelectBox(dispatch, state.selectBoxPosition);\n  const canvasEventHandler = type => rawEvent => {\n    rawEvent.persist();\n    eventChannel.trigger({\n      type,\n      rawEvent\n    });\n  };\n  const classes = getGraphStyles(props, state, isPanDisabled, isNodesDraggable, focusedWithoutMouse, state.behavior === GraphBehavior.MultiSelect);\n  useWheelHandler({\n    containerRef,\n    svgRef,\n    rectRef,\n    zoomSensitivity,\n    scrollSensitivity,\n    dispatch,\n    isHorizontalScrollDisabled,\n    isVerticalScrollDisabled,\n    isCtrlKeyZoomEnable,\n    eventChannel,\n    graphConfig\n  });\n  const onContextMenuClick = React.useCallback(evt => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    eventChannel.trigger({\n      type: GraphContextMenuEvent.Close\n    });\n    if (svgRef.current) {\n      // to prevent: the keyboard events will be disabled after using the context menu (because the context menu is not the element of svg)\n      svgRef.current.focus({\n        preventScroll: true\n      });\n    }\n  }, [eventChannel, svgRef]);\n  const onFocusButtonClick = React.useCallback(() => {\n    setFocusedWithoutMouse(true);\n    if (svgRef.current) {\n      svgRef.current.focus({\n        preventScroll: true\n      });\n    }\n  }, [svgRef]);\n  useSafariScale({\n    rectRef,\n    svgRef,\n    eventChannel\n  });\n  const accessKey = isA11yEnable ? focusCanvasAccessKey : undefined;\n  const touchHandlers = useGraphTouchHandler(rectRef, eventChannel);\n  const renderNodeTree = React.useCallback((tree, layer) => {\n    var _a, _b;\n    return jsx(NodeTree, {\n      graphId: graphId,\n      isNodeResizable: isNodeResizable,\n      tree: tree,\n      data: data,\n      isNodeEditDisabled: isNodeEditDisabled,\n      eventChannel: eventChannel,\n      getNodeAriaLabel: (_a = props.getNodeAriaLabel) !== null && _a !== void 0 ? _a : defaultGetNodeAriaLabel,\n      getPortAriaLabel: (_b = props.getPortAriaLabel) !== null && _b !== void 0 ? _b : defaultGetPortAriaLabel,\n      renderNodeAnchors: props.renderNodeAnchors\n    }, layer);\n  }, [data, eventChannel, graphId, isNodeEditDisabled, isNodeResizable, props.getNodeAriaLabel, props.getPortAriaLabel, props.renderNodeAnchors]);\n  if (!isSupported()) {\n    const {\n      onBrowserNotSupported = () => jsx(\"p\", {\n        children: \"Your browser is not supported\"\n      })\n    } = props;\n    return jsx(Fragment, {\n      children: onBrowserNotSupported()\n    });\n  }\n  const renderPortTooltip = () => {\n    if (!curHoverPort || !isViewportComplete(state.viewport)) {\n      return null;\n    }\n    const [nodeId, portId] = curHoverPort;\n    const node = data.nodes.get(nodeId);\n    if (!node) {\n      return null;\n    }\n    const port = node.getPort(portId);\n    if (!port) {\n      return null;\n    }\n    return jsx(PortTooltips, {\n      port: port,\n      parentNode: node,\n      data: data,\n      viewport: state.viewport\n    });\n  };\n  const renderNodeTooltip = () => {\n    var _a;\n    if (!curHoverNode || !isViewportComplete(state.viewport)) {\n      return null;\n    } // do not show tooltip if current node has contextmenu\n\n    const curHoverNodeHasContextMenu = state.contextMenuPosition && curHoverNode === ((_a = state.data.present.nodes.find(isSelected)) === null || _a === void 0 ? void 0 : _a.id);\n    if (curHoverNodeHasContextMenu) {\n      return null;\n    }\n    return jsx(NodeTooltips, {\n      node: data.nodes.get(curHoverNode),\n      viewport: state.viewport\n    });\n  };\n  return jsxs(\"div\", Object.assign({\n    ref: containerRef,\n    role: \"application\",\n    id: graphId,\n    className: classes.container\n  }, touchHandlers, {\n    onDoubleClick: canvasEventHandler(GraphCanvasEvent.DoubleClick),\n    onMouseDown: canvasEventHandler(GraphCanvasEvent.MouseDown),\n    onMouseUp: canvasEventHandler(GraphCanvasEvent.MouseUp),\n    onContextMenu: canvasEventHandler(GraphCanvasEvent.ContextMenu),\n    onMouseMove: canvasEventHandler(GraphCanvasEvent.MouseMove),\n    onMouseOver: canvasEventHandler(GraphCanvasEvent.MouseOver),\n    onMouseOut: canvasEventHandler(GraphCanvasEvent.MouseOut),\n    onFocus: canvasEventHandler(GraphCanvasEvent.Focus),\n    onBlur: canvasEventHandler(GraphCanvasEvent.Blur),\n    onKeyDown: canvasEventHandler(GraphCanvasEvent.KeyDown),\n    onKeyUp: canvasEventHandler(GraphCanvasEvent.KeyUp)\n  }, {\n    children: [jsx(\"button\", {\n      className: classes.buttonA11y,\n      onClick: onFocusButtonClick,\n      accessKey: accessKey,\n      hidden: true\n    }), jsxs(\"svg\", Object.assign({\n      tabIndex: 0,\n      // for IE and Edge\n      focusable: \"true\",\n      preserveAspectRatio: \"xMidYMid meet\",\n      ref: svgRef,\n      className: classes.svg,\n      \"data-graph-id\": graphId\n    }, {\n      children: [jsx(\"title\", {\n        children: props.title\n      }), jsx(\"desc\", {\n        children: props.desc\n      }), jsxs(Transform, Object.assign({\n        matrix: viewport.transformMatrix\n      }, {\n        children: [state.viewport.rect && jsxs(VirtualizationProvider, Object.assign({\n          viewport: state.viewport,\n          isVirtualizationEnabled: isVirtualizationEnabled,\n          virtualizationDelay: virtualizationDelay,\n          eventChannel: eventChannel\n        }, {\n          children: [background, jsx(GraphGroupsRenderer, {\n            data: data,\n            groups: (_a = data.groups) !== null && _a !== void 0 ? _a : constantEmptyArray()\n          }), jsx(EdgeTree, {\n            graphId: graphId,\n            tree: data.edges,\n            data: data,\n            eventChannel: eventChannel\n          }), jsx(NodeLayers, {\n            data: data,\n            renderTree: renderNodeTree\n          })]\n        })), state.dummyNodes.isVisible && jsx(AnimatingNodeGroup, {\n          dummyNodes: state.dummyNodes,\n          graphData: state.data.present\n        }), jsx(AlignmentLines, {\n          style: (_b = props.styles) === null || _b === void 0 ? void 0 : _b.alignmentLine\n        })]\n      })), (!isMultiSelectDisabled || isLassoSelectEnable) && jsx(SelectBox, {\n        selectBoxPosition: state.selectBoxPosition,\n        style: (_c = props.styles) === null || _c === void 0 ? void 0 : _c.selectBox\n      }), state.connectState && jsx(Connecting, {\n        graphConfig: graphConfig,\n        eventChannel: eventChannel,\n        viewport: state.viewport,\n        styles: (_d = props.styles) === null || _d === void 0 ? void 0 : _d.connectingLine,\n        movingPoint: state.connectState.movingPoint\n      })]\n    })), isScrollbarVisible && isViewportComplete(state.viewport) && jsx(Scrollbar, {\n      viewport: state.viewport,\n      offsetLimit: getOffsetLimit({\n        data,\n        graphConfig,\n        rect: state.viewport.rect,\n        transformMatrix: viewport.transformMatrix,\n        canvasBoundaryPadding: state.settings.canvasBoundaryPadding,\n        groupPadding: (_e = data.groups[0]) === null || _e === void 0 ? void 0 : _e.padding\n      }),\n      dispatch: dispatch,\n      horizontal: !isHorizontalScrollDisabled,\n      vertical: !isVerticalScrollDisabled,\n      eventChannel: eventChannel\n    }), jsx(GraphContextMenu, {\n      state: state,\n      onClick: onContextMenuClick,\n      \"data-automation-id\": \"context-menu-container\"\n    }), renderNodeTooltip(), renderPortTooltip()]\n  }));\n}\nconst emptyNodeConfig = {\n  render() {\n    return null;\n  },\n  getMinHeight() {\n    return 0;\n  },\n  getMinWidth() {\n    return 0;\n  }\n};\nfunction useSvgRect(svgRef) {\n  const [rect, setRect] = useState(undefined);\n  useLayoutEffect(() => {\n    if (!svgRef.current) {\n      return;\n    }\n    setRect(svgRef.current.getBoundingClientRect());\n  }, [svgRef]);\n  return rect;\n}\nconst AddingNodeSvg = ({\n  model,\n  svgRef,\n  nextNodeRef\n}) => {\n  const rect = useSvgRect(svgRef);\n  const graphConfig = useGraphConfig();\n  const graphController = useGraphController();\n  const alignmentLines = useAlignmentLines();\n  const viewport = useViewport();\n  const dummyNode = React.useMemo(() => {\n    if (!model || !viewport.rect) {\n      return null;\n    }\n    const {\n      transformMatrix\n    } = viewport;\n    const {\n      left,\n      top\n    } = viewport.rect;\n    const diffLeft = left / transformMatrix[0];\n    const diffTop = top / transformMatrix[3];\n    return Object.assign({\n      id: model.id,\n      x: model.x - diffLeft,\n      y: model.y - diffTop\n    }, getNodeSize(model, graphConfig));\n  }, [graphConfig, viewport, model]);\n  React.useLayoutEffect(() => {\n    if (!dummyNode) {\n      return;\n    }\n    graphController.eventChannel.trigger({\n      type: GraphCanvasEvent.DraggingNodeFromItemPanel,\n      node: dummyNode\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dummyNode === null || dummyNode === void 0 ? void 0 : dummyNode.x, dummyNode === null || dummyNode === void 0 ? void 0 : dummyNode.y]);\n  const attachedNode = React.useMemo(() => {\n    if (!dummyNode || !model) {\n      return null;\n    }\n    const dxAligned = getAutoAlignDisplacement(alignmentLines, [dummyNode], graphConfig, \"x\");\n    const dyAligned = getAutoAlignDisplacement(alignmentLines, [dummyNode], graphConfig, \"y\");\n    return Object.assign(Object.assign({}, model), {\n      x: model.x + dxAligned,\n      y: model.y + dyAligned\n    });\n  }, [alignmentLines, dummyNode, graphConfig, model]);\n  React.useEffect(() => {\n    nextNodeRef.current = attachedNode;\n  }, [nextNodeRef, attachedNode]);\n  const eventChannel = useConst(() => new EventChannel());\n  const tempGraphId = useConst(v4);\n  const node = React.useMemo(() => NodeModel.fromJSON(attachedNode !== null && attachedNode !== void 0 ? attachedNode : model, undefined, undefined), [attachedNode, model]);\n  return jsx(\"svg\", Object.assign({\n    id: tempGraphId,\n    ref: svgRef,\n    className: styles.addingNodeSvg,\n    preserveAspectRatio: \"xMidYMid meet\"\n  }, {\n    children: jsx(Transform, Object.assign({\n      matrix: viewport.transformMatrix\n    }, {\n      children: rect && jsx(GraphNode, {\n        graphId: tempGraphId,\n        node: node,\n        viewport: {\n          rect,\n          transformMatrix: viewport.transformMatrix\n        },\n        eventChannel: eventChannel,\n        getNodeAriaLabel: defaultGetNodeAriaLabel\n      })\n    }))\n  }));\n};\nconst el = document.createElement(\"div\");\ndocument.body.appendChild(el);\n/**\r\n * @param rect the container clement bounding box rect\r\n * @param clientX point: x\r\n * @param clientY point: y\r\n *\r\n * @returns boolean value to indicate whether the point is in bound or not.\r\n */\n\nfunction isWithInBound(rect, clientX, clientY) {\n  const {\n    top,\n    right,\n    bottom,\n    left\n  } = rect;\n  return clientX >= left && clientX <= right && clientY >= top && clientY <= bottom;\n}\nconst adjustedClientPoint = (x, y, rect, transformMatrix) => {\n  let adjustedX = x;\n  let adjustedY = y;\n  if (rect) {\n    const {\n      left,\n      top\n    } = rect;\n    adjustedX = x - left;\n    adjustedY = y - top;\n  }\n  return reverseTransformPoint(adjustedX, adjustedY, transformMatrix);\n}; // adjust position to the middle of the node, and with the correct zoom/pan\n\nconst adjustPosition = (clientX, clientY, rect, transformMatrix, node, nodeConfig) => {\n  const rectWidth = getRectWidth(nodeConfig, node);\n  const rectHeight = getRectHeight(nodeConfig, node); // get transformed width and height\n\n  const realWidth = transformMatrix[0] * rectWidth + transformMatrix[2] * rectHeight;\n  const realHeight = transformMatrix[1] * rectWidth + transformMatrix[3] * rectHeight;\n  return adjustedClientPoint(clientX - realWidth / 2, clientY - realHeight / 2, rect, transformMatrix);\n};\n/**\r\n * The Item in the item panel from which we can add node to the canvas.\r\n *\r\n * @param props type IItemProps\r\n * @returns\r\n */\n\nconst Item = props => {\n  const graphConfig = useGraphConfig();\n  const graphController = useGraphController();\n  const [workingModel, setWorkingModel] = React.useState(null);\n  const nextNodeRef = useRefValue(workingModel);\n  const svgRef = React.useRef(null);\n  const {\n    style,\n    children,\n    getNode,\n    dragWillStart = noop\n  } = props;\n  const onPointerDown = React.useCallback(evt => {\n    var _a;\n    evt.stopPropagation();\n    if (isMouseButNotLeft(evt) || !graphController.getEnabledFeatures().has(GraphFeatures.AddNewNodes)) {\n      return;\n    }\n    const partial = getNode();\n    const nodeConfig = (_a = graphConfig.getNodeConfig(partial)) !== null && _a !== void 0 ? _a : emptyNodeConfig;\n    const position = adjustPosition(evt.clientX, evt.clientY, undefined, graphController.state.viewport.transformMatrix, partial, nodeConfig);\n    const node = Object.assign(Object.assign(Object.assign({}, partial), position), {\n      id: partial.id || v4()\n    });\n    const drag = new DragController(new PointerEventProvider(graphController.getGlobalEventTarget()), defaultGetPositionFromEvent);\n    const eventChannel = graphController.eventChannel;\n    eventChannel.trigger({\n      type: GraphCanvasEvent.DraggingNodeFromItemPanelStart,\n      rawEvent: evt\n    });\n    drag.onMove = ({\n      e\n    }) => {\n      setWorkingModel(n => {\n        if (!n) {\n          return n;\n        }\n        return Object.assign(Object.assign({}, n), adjustPosition(e.clientX, e.clientY, undefined, graphController.state.viewport.transformMatrix, n, nodeConfig));\n      });\n    };\n    drag.onEnd = ({\n      e\n    }) => {\n      const viewport = graphController.state.viewport;\n      let nextNode = nextNodeRef.current;\n      if (!isViewportComplete(viewport) || !nextNode || !isWithInBound(viewport.rect, e.clientX, e.clientY)) {\n        setWorkingModel(null);\n        eventChannel.trigger({\n          type: GraphCanvasEvent.DraggingNodeFromItemPanelEnd,\n          node: null\n        });\n        return;\n      }\n      nextNodeRef.current = null;\n      nextNode = Object.assign(Object.assign({}, nextNode), adjustPosition(e.clientX, e.clientY, viewport.rect, viewport.transformMatrix, nextNode, nodeConfig));\n      eventChannel.trigger({\n        type: GraphCanvasEvent.DraggingNodeFromItemPanelEnd,\n        node: nextNode\n      });\n      setWorkingModel(null);\n    };\n    dragWillStart(node);\n    setWorkingModel(node);\n    drag.start(evt.nativeEvent);\n  }, [graphController, getNode, graphConfig, dragWillStart, nextNodeRef]);\n  const className = mergeStyles(styles.moduleItem, props.className);\n  return jsxs(Fragment, {\n    children: [jsx(\"div\", Object.assign({\n      className: className,\n      style: style,\n      onPointerDown: onPointerDown,\n      role: \"button\"\n    }, {\n      children: children\n    })), workingModel && /*#__PURE__*/ReactDOM.createPortal(jsx(AddingNodeSvg, {\n      svgRef: svgRef,\n      model: workingModel,\n      nextNodeRef: nextNodeRef\n    }), el)]\n  });\n};\nclass TouchDragAdapter {\n  constructor() {\n    this.startListeners = new Set();\n    this.moveListeners = new Set();\n    this.endListeners = new Set();\n  }\n  off(type, callback) {\n    switch (type) {\n      case \"start\":\n        this.startListeners.delete(callback);\n        break;\n      case \"move\":\n        this.moveListeners.delete(callback);\n        break;\n      case \"end\":\n        this.endListeners.delete(callback);\n        break;\n    }\n    return this;\n  }\n  on(type, callback) {\n    switch (type) {\n      case \"start\":\n        this.startListeners.add(callback);\n        break;\n      case \"move\":\n        this.moveListeners.add(callback);\n        break;\n      case \"end\":\n        this.endListeners.add(callback);\n        break;\n    }\n    return this;\n  }\n  onStart(_events, e, ...args) {\n    this.startListeners.forEach(cb => {\n      cb.call(undefined, e, ...args);\n    });\n  }\n  onMove(_events, e, ...args) {\n    this.moveListeners.forEach(cb => {\n      cb.call(undefined, e, ...args);\n    });\n  }\n  onEnd(e, ...args) {\n    this.endListeners.forEach(cb => {\n      cb.call(undefined, e, ...args);\n    });\n  }\n}\nconst StaticNode = props => {\n  const {\n    node\n  } = props;\n  const graphConfig = useGraphConfig();\n  const nodeConfig = getNodeConfig(node, graphConfig);\n  if (nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.renderStatic) {\n    return jsx(\"g\", {\n      children: nodeConfig.renderStatic({\n        model: node\n      })\n    });\n  }\n  const rectHeight = getRectHeight(nodeConfig, node);\n  const rectWidth = getRectWidth(nodeConfig, node);\n  return jsx(\"rect\", {\n    transform: `translate(${node.x}, ${node.y})`,\n    height: rectHeight,\n    width: rectWidth,\n    fill: defaultColors.dummyNodeStroke\n  });\n};\nconst StaticNodeWithMemo = /*#__PURE__*/React.memo(StaticNode, (prevProps, nextProps) => {\n  const prevNode = prevProps.node;\n  const nextNode = nextProps.node;\n  return prevNode.x === nextNode.x && prevNode.y === nextNode.y && prevNode.height === nextNode.height && prevNode.width === nextNode.width && prevNode.isInSearchResults === nextNode.isInSearchResults && prevNode.isCurrentSearchResult === nextNode.isCurrentSearchResult;\n});\nconst ReadonlyNodeTreeNode = /*#__PURE__*/React.memo(({\n  node\n}) => {\n  const values = node.values.map(it => jsx(StaticNodeWithMemo, {\n    node: it[1]\n  }, it[1].id));\n  const children = node.type === NodeType.Internal ? node.children.map((child, index) => {\n    const key = index < node.selfSize ? node.getKey(index) : \"last\";\n    return jsx(ReadonlyNodeTreeNode, {\n      node: child\n    }, key);\n  }) : undefined;\n  return jsxs(Fragment, {\n    children: [values, children]\n  });\n});\nReadonlyNodeTreeNode.displayName = \"ReadonlyNodeTreeNode\";\nconst ReadonlyNodeTree = ({\n  tree\n}) => {\n  return jsx(ReadonlyNodeTreeNode, {\n    node: tree.sortedRoot\n  });\n};\nconst StaticGraph = props => {\n  const {\n    nodes\n  } = props.data;\n  const style = Object.assign({\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    height: \"100%\",\n    width: \"100%\"\n  }, props.style);\n  return jsx(\"svg\", Object.assign({\n    style: style\n  }, {\n    children: jsx(Transform, Object.assign({\n      matrix: props.transformMatrix\n    }, {\n      children: jsx(ReadonlyNodeTree, {\n        tree: nodes\n      })\n    }))\n  }));\n};\nconst MiniMapShadow = ({\n  containerRect: rect,\n  viewport,\n  shadowPadding: _shadowPadding = 0,\n  onClick\n}) => {\n  if (!rect) {\n    return null;\n  }\n  const shadowStyle = {\n    fill: defaultColors.minimapShadow,\n    opacity: 0.1\n  };\n  const lineStyle = {\n    stroke: defaultColors.inputFocusBorderAlt,\n    strokeWidth: 1\n  };\n  const viewportStartX = Math.max(viewport.startX, _shadowPadding);\n  const viewportStartY = Math.max(viewport.startY, _shadowPadding);\n  const viewportEndX = Math.min(viewport.endX, rect.width - _shadowPadding);\n  const viewportEndY = Math.min(viewport.endY, rect.height - _shadowPadding);\n  const sideShadowHeight = viewportEndY - viewportStartY;\n  const rightShadowWidth = rect.width - viewportEndX;\n  const bottomShadowHeight = rect.height - viewportEndY;\n  return jsxs(Fragment, {\n    children: [viewportStartY > 0 && jsxs(\"g\", {\n      children: [jsx(\"rect\", {\n        onClick: onClick,\n        onMouseDown: stopPropagation,\n        onPointerDown: stopPropagation,\n        x: 0,\n        y: 0,\n        height: viewportStartY,\n        width: rect.width,\n        style: shadowStyle\n      }), jsx(\"line\", {\n        x1: viewportStartX,\n        y1: viewportStartY,\n        x2: viewportEndX,\n        y2: viewportStartY,\n        style: lineStyle\n      })]\n    }), viewportStartX && sideShadowHeight > 0 && jsxs(\"g\", {\n      children: [jsx(\"rect\", {\n        onClick: onClick,\n        onMouseDown: stopPropagation,\n        onPointerDown: stopPropagation,\n        x: 0,\n        y: viewportStartY,\n        height: sideShadowHeight,\n        width: viewportStartX,\n        style: shadowStyle\n      }), jsx(\"line\", {\n        x1: viewportStartX,\n        y1: viewportStartY,\n        x2: viewportStartX,\n        y2: viewportEndY,\n        style: lineStyle\n      })]\n    }), rightShadowWidth && sideShadowHeight > 0 && jsxs(\"g\", {\n      children: [jsx(\"rect\", {\n        onClick: onClick,\n        onMouseDown: stopPropagation,\n        onPointerDown: stopPropagation,\n        x: viewportEndX,\n        y: viewportStartY,\n        height: sideShadowHeight,\n        width: rightShadowWidth,\n        style: shadowStyle\n      }), jsx(\"line\", {\n        x1: viewportEndX,\n        y1: viewportStartY,\n        x2: viewportEndX,\n        y2: viewportEndY,\n        style: lineStyle\n      })]\n    }), bottomShadowHeight > 0 && jsxs(\"g\", {\n      children: [jsx(\"rect\", {\n        onClick: onClick,\n        onMouseDown: stopPropagation,\n        onPointerDown: stopPropagation,\n        x: 0,\n        y: viewportEndY,\n        height: bottomShadowHeight,\n        width: rect.width,\n        style: shadowStyle\n      }), jsx(\"line\", {\n        x1: viewportStartX,\n        y1: viewportEndY,\n        x2: viewportEndX,\n        y2: viewportEndY,\n        style: lineStyle\n      })]\n    })]\n  });\n};\nconst Minimap = props => {\n  const {\n    shadowPadding = 0,\n    maxNodesCountAllowed = 150,\n    onRenderUnavailable = () => null,\n    renderArrow = () => undefined\n  } = props;\n  const graphViewport = useViewport();\n  const graphController = useGraphController();\n  const data = useGraphData();\n  const minimapContainerStyle = Object.assign({\n    background: defaultColors.minimapBackground\n  }, props.style);\n  const svgRef = React.useRef(null);\n  const graphConfig = useGraphConfig();\n  const rect = useMinimapRect(svgRef);\n  const rectRef = useRefValue(rect);\n  const minimapTransformMatrix = React.useMemo(() => {\n    if (!rect) {\n      return EMPTY_TRANSFORM_MATRIX;\n    }\n    return getZoomFitMatrix({\n      data,\n      rect,\n      graphConfig,\n      nodeMaxVisibleSize: {\n        width: 0,\n        height: 0\n      },\n      nodeMinVisibleSize: {\n        width: Infinity,\n        height: Infinity\n      }\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rect, data.nodes]);\n  const minimapTransformMatrixRef = useRefValue(minimapTransformMatrix);\n  const viewport = React.useMemo(() => {\n    if (!rect || !isViewportComplete(graphViewport)) {\n      return {\n        startX: 0,\n        startY: 0,\n        endX: 0,\n        endY: 0\n      };\n    }\n    const boundaryPoints = getVisibleArea(graphViewport);\n    const {\n      x: startX,\n      y: startY\n    } = transformPoint(boundaryPoints.minX, boundaryPoints.minY, minimapTransformMatrix);\n    const {\n      x: endX,\n      y: endY\n    } = transformPoint(boundaryPoints.maxX, boundaryPoints.maxY, minimapTransformMatrix);\n    return {\n      startX,\n      startY,\n      endX,\n      endY\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rect, minimapTransformMatrix, graphViewport.rect, ...graphViewport.transformMatrix]);\n  const onClick = React.useCallback(evt => {\n    evt.stopPropagation();\n    if (!rect) {\n      return;\n    }\n    const viewportWidth = viewport.endX - viewport.startX;\n    const viewportHeight = viewport.endY - viewport.startY;\n    const point = reverseTransformPoint(clamp(shadowPadding + viewportWidth / 2, rect.width - shadowPadding - viewportWidth / 2, evt.clientX - rect.left), clamp(shadowPadding + viewportHeight / 2, rect.height - shadowPadding - viewportHeight / 2, evt.clientY - rect.top), minimapTransformMatrix);\n    graphController.eventChannel.batch([{\n      type: GraphCanvasEvent.ScrollIntoView,\n      x: point.x,\n      y: point.y\n    }, {\n      type: GraphMinimapEvent.Click,\n      rawEvent: evt\n    }]);\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [rect]);\n  const onStartDrag = React.useCallback((evt, eventProvider) => {\n    if (!rectRef.current) {\n      return;\n    }\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = rectRef.current;\n    const validMouseRect = {\n      startX: left + shadowPadding,\n      startY: top + shadowPadding,\n      endX: right - shadowPadding,\n      endY: bottom - shadowPadding\n    };\n    graphController.eventChannel.trigger({\n      type: GraphMinimapEvent.PanStart,\n      rawEvent: evt\n    });\n    const drag = new DragController(eventProvider, e => {\n      const x = clamp(validMouseRect.startX, validMouseRect.endX, e.clientX);\n      const y = clamp(validMouseRect.startY, validMouseRect.endY, e.clientY);\n      return {\n        x,\n        y\n      };\n    });\n    drag.onMove = ({\n      dx,\n      dy,\n      e\n    }) => {\n      const {\n        x,\n        y\n      } = getPointDeltaByClientDelta(-dx, -dy, minimapTransformMatrixRef.current);\n      graphController.eventChannel.trigger({\n        type: GraphMinimapEvent.Pan,\n        dx: x,\n        dy: y,\n        rawEvent: e\n      });\n    };\n    drag.start(evt);\n    drag.onEnd = () => {\n      graphController.eventChannel.trigger({\n        type: GraphMinimapEvent.PanEnd,\n        rawEvent: evt\n      });\n    };\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [shadowPadding]);\n  const arrowParams = React.useMemo(() => {\n    if (!rect) {\n      return {\n        showArrow: false,\n        arrowDeg: 0\n      };\n    }\n    const showArrow = viewport.startX > rect.width - shadowPadding || viewport.startY > rect.height - shadowPadding || viewport.endX < shadowPadding || viewport.endY < shadowPadding; // arrow rotate center\n\n    const x0 = rect.width / 2;\n    const y0 = rect.height / 2;\n    const x1 = (viewport.startX + viewport.endX) / 2;\n    const y1 = (viewport.startY + viewport.endY) / 2;\n    let arrowDeg = Math.atan2(y1 - y0, x1 - x0) * 180 / Math.PI;\n    if (arrowDeg < 0) {\n      arrowDeg = arrowDeg + 360;\n    }\n    return {\n      showArrow,\n      arrowDeg\n    };\n  }, [rect, viewport, shadowPadding]);\n  const onMouseDown = React.useCallback(evt => {\n    onStartDrag(evt.nativeEvent, new MouseMoveEventProvider(graphController.getGlobalEventTarget()));\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [onStartDrag]);\n  const touchController = React.useMemo(() => {\n    const handlers = new Map();\n    const touchDragAdapter = new TouchDragAdapter();\n    touchDragAdapter.on(\"start\", e => {\n      onStartDrag(e, touchDragAdapter);\n    });\n    handlers.set(1, touchDragAdapter);\n    return new TouchController(handlers); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onStartDrag, rect]);\n  const staticGraphEl = React.useMemo(() => jsx(StaticGraph, {\n    data: data,\n    transformMatrix: minimapTransformMatrix\n  }),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [data.nodes, ...minimapTransformMatrix]);\n  if (data.nodes.size > maxNodesCountAllowed) {\n    return jsx(\"div\", Object.assign({\n      className: \"minimap-container\",\n      style: minimapContainerStyle\n    }, {\n      children: onRenderUnavailable()\n    }));\n  }\n  return jsxs(\"div\", Object.assign({\n    className: `minimap-container ${styles.minimap}`,\n    style: minimapContainerStyle\n  }, {\n    children: [staticGraphEl, jsx(\"svg\", Object.assign({\n      className: styles.minimapSvg\n    }, touchController.eventHandlers, {\n      onMouseDown: onMouseDown,\n      ref: svgRef,\n      \"data-automation-id\": \"minimap-id\"\n    }, {\n      children: jsx(MiniMapShadow, {\n        containerRect: rect,\n        viewport: viewport,\n        shadowPadding: shadowPadding,\n        onClick: onClick\n      })\n    })), arrowParams.showArrow && renderArrow(arrowParams.arrowDeg)]\n  }));\n};\nconst ContextMenu = props => {\n  const classes = mergeStyleSets({\n    contextMenu: {\n      fontSize: 14,\n      background: defaultColors.contextMenuBackground,\n      color: defaultColors.fontColor,\n      border: `1px solid ${defaultColors.contextMenuBorder}`,\n      width: 193,\n      lineHeight: \"20px\",\n      cursor: \"default\",\n      \"> *\": {\n        padding: 8,\n        \":hover\": {\n          background: defaultColors.contextMenuHoverBackground\n        }\n      }\n    }\n  });\n  const propsMerged = Object.assign(Object.assign({}, props), {\n    className: `${classes.contextMenu} ${props.className}`\n  });\n  const contextMenuConfig = useContextMenuConfigContext();\n  contextMenuConfig.registerContextMenu(propsMerged);\n  return jsx(\"div\", {\n    children: props.children\n  });\n};\nconst NodeMenu = props => {\n  const contextMenuConfig = useContextMenuConfigContext();\n  contextMenuConfig.registerMenu(props.children, MenuType.Node);\n  return null;\n};\nconst EdgeMenu = props => {\n  const contextMenuConfig = useContextMenuConfigContext();\n  contextMenuConfig.registerMenu(props.children, MenuType.Edge);\n  return null;\n};\nconst PortMenu = props => {\n  const contextMenuConfig = useContextMenuConfigContext();\n  contextMenuConfig.registerMenu(props.children, MenuType.Port);\n  return null;\n};\nconst CanvasMenu = props => {\n  const contextMenuConfig = useContextMenuConfigContext();\n  contextMenuConfig.registerMenu(props.children, MenuType.Canvas);\n  return null;\n};\nconst MultiMenu = props => {\n  const contextMenuConfig = useContextMenuConfigContext();\n  contextMenuConfig.registerMenu(props.children, MenuType.Multi);\n  return null;\n};\nconst GridBackground = ({\n  smallGridAttributes,\n  gridAttributes,\n  backgroundAttributes,\n  rect\n}) => {\n  const rectX = rect.minX;\n  const rectY = rect.minY;\n  const width = rect.maxX - rect.minX;\n  const height = rect.maxY - rect.minY;\n  return jsxs(Fragment, {\n    children: [jsxs(\"defs\", {\n      children: [jsx(\"pattern\", Object.assign({\n        id: \"smallGrid\",\n        width: \"8\",\n        height: \"8\",\n        patternUnits: \"userSpaceOnUse\"\n      }, {\n        children: jsx(\"path\", Object.assign({\n          d: \"M 8 0 L 0 0 0 8\",\n          fill: \"none\",\n          stroke: \"gray\",\n          strokeWidth: \"0.5\"\n        }, smallGridAttributes))\n      })), jsxs(\"pattern\", Object.assign({\n        id: \"grid\",\n        width: \"80\",\n        height: \"80\",\n        patternUnits: \"userSpaceOnUse\"\n      }, {\n        children: [jsx(\"rect\", {\n          width: \"80\",\n          height: \"80\",\n          fill: \"url(#smallGrid)\"\n        }), jsx(\"path\", Object.assign({\n          d: \"M 80 0 L 0 0 0 80\",\n          fill: \"none\",\n          stroke: \"gray\",\n          strokeWidth: \"1\"\n        }, gridAttributes))]\n      }))]\n    }), jsx(\"rect\", Object.assign({\n      x: rectX,\n      y: rectY,\n      width: width,\n      height: height,\n      fill: \"url(#grid)\"\n    }, backgroundAttributes))]\n  });\n};\nclass TestAPI {\n  constructor(adapter) {\n    this.adapter = adapter;\n  }\n  getNodesCount() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield this.adapter.selectAll(\"g[data-automation-id*='node-container-']\")).length;\n    });\n  }\n  getEdgesCount() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield this.adapter.selectAll(\"g[data-automation-id*='edge-container-']\")).length;\n    });\n  }\n  addNodeFromItemPanel(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const addColumnsModuleInPanelElPos = yield this.getCentralPosBySelector(options.itemSelector);\n      yield this.adapter.mouseMove(addColumnsModuleInPanelElPos.x, addColumnsModuleInPanelElPos.y);\n      yield this.adapter.mouseDown();\n      const canvasBBOx = yield this.getCanvasBoundingBox();\n      yield this.adapter.mouseMove(canvasBBOx.x + options.x, canvasBBOx.y + options.y);\n      yield this.adapter.mouseUp();\n    });\n  }\n  connectTwoNodes({\n    sourceNodeName,\n    sourcePortName,\n    targetNodeName,\n    targetPortName\n  }) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const sourcePos = yield this.getCentralPosBySelector(this.getPortCssSelector(sourceNodeName, sourcePortName));\n      yield this.adapter.mouseMove(sourcePos.x, sourcePos.y);\n      yield this.adapter.mouseDown();\n      const targetPos = yield this.getCentralPosBySelector(this.getPortCssSelector(targetNodeName, targetPortName));\n      yield this.adapter.mouseMove(targetPos.x, targetPos.y);\n      yield this.adapter.mouseUp();\n    });\n  }\n  draggingNode(nodeName, toPosition) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const nodeCenterPos = yield this.getCentralPosBySelector(this.getNodeCssSelector(nodeName));\n      yield this.adapter.mouseMove(nodeCenterPos.x, nodeCenterPos.y);\n      yield this.adapter.mouseDown();\n      const canvasBBOx = yield this.getCanvasBoundingBox();\n      yield this.adapter.mouseMove(toPosition.x + canvasBBOx.x, toPosition.y + canvasBBOx.y);\n    });\n  }\n  rightClickOnNode(nodeName) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.rightClick(this.getNodeCssSelector(nodeName));\n    });\n  }\n  clickOnNode(nodeName) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.click(this.getNodeCssSelector(nodeName));\n    });\n  }\n  hoverOnNode(nodeName) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.hover(this.getNodeCssSelector(nodeName));\n    });\n  }\n  hoverOnPort(nodeName, portName) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.hover(this.getPortCssSelector(nodeName, portName));\n    });\n  }\n  hoverOnEdge(edgeId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.hover(this.getEdgeCssSelector(edgeId));\n    });\n  }\n  getAutoAlignHintLineCount() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield this.adapter.selectAll(\"line.auto-align-hint\")).length;\n    });\n  }\n  /**\r\n   * select node(s) with ctrl key\r\n   *\r\n   * @param nodeNames node names to be selected\r\n   */\n\n  clickOnNodesWithCtrlKey(nodeNames) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.keyDown(\"Control\");\n      for (const name of nodeNames) {\n        yield this.clickOnNode(name);\n      }\n      yield this.adapter.keyUp(\"Control\");\n    });\n  }\n  rightClickOnCanvas(x, y) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.rightClick(\"svg.react-dag-editor-svg-container\", {\n        position: {\n          x,\n          y\n        }\n      });\n    });\n  }\n  selectArea(start, end) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.mouseMove(start.x, start.y);\n      yield this.adapter.mouseDown();\n      yield this.adapter.mouseMove(end.x, end.y);\n      yield this.adapter.mouseUp();\n    });\n  }\n  connectWithKeyboard(isCancelConnect = false) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // focus to a port\n      yield this.focusOnCanvasWithKeyboard();\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"Tab\"); // enter connect mode\n\n      yield this.adapter.keyDown(\"Alt\");\n      yield this.adapter.keyPress(\"c\");\n      yield this.adapter.keyUp(\"Alt\"); // focus to another port\n\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"Tab\"); // finish connect or cancel connect\n\n      if (isCancelConnect) {\n        yield this.adapter.keyPress(\"Escape\");\n      } else {\n        yield this.adapter.keyPress(\"Enter\");\n      }\n    });\n  }\n  navigateAroundNodesWithKeyboard() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.focusOnCanvasWithKeyboard();\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"ArrowDown\");\n      yield this.adapter.keyPress(\"ArrowDown\");\n      yield this.adapter.keyPress(\"ArrowRight\");\n      yield this.adapter.keyPress(\"ArrowLeft\");\n    });\n  }\n  navigateBackWithKeyboard() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.focusOnCanvasWithKeyboard();\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"Tab\"); // pressing shift key to navigate back\n\n      yield this.adapter.keyDown(\"Shift\");\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyUp(\"Shift\");\n    });\n  }\n  navigateAroundPortsWithKeyboard() {\n    return __awaiter(this, void 0, void 0, function* () {\n      // focus on canvas\n      yield this.focusOnCanvasWithKeyboard(); // navigate to a node\n\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"ArrowDown\"); // navigate to a port\n\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"ArrowDown\");\n      yield this.adapter.keyPress(\"ArrowDown\");\n    });\n  }\n  goToConnectedPortWithKeyboard() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.focusOnCanvasWithKeyboard(); // navigate to a node\n\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"ArrowDown\"); // navigate to a port\n\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"Tab\"); // go to connected port\n\n      yield this.adapter.keyDown(\"Alt\");\n      yield this.adapter.keyPress(\"g\");\n      yield this.adapter.keyUp(\"Alt\");\n    });\n  }\n  deleteNodeWithKeyboard() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.focusOnCanvasWithKeyboard();\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"ArrowDown\");\n      yield this.adapter.keyPress(\"Delete\");\n    });\n  }\n  panCanvas(from, to) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.mouseMove(from.x, from.y);\n      yield this.adapter.mouseDown();\n      yield this.adapter.mouseMove(to.x, to.y);\n      yield this.adapter.mouseUp();\n    });\n  }\n  getElementBoundingBox(cssSelector) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const el = yield this.adapter.waitForSelector(cssSelector);\n      const {\n        x = 0,\n        y = 0,\n        height = 0,\n        width = 0\n      } = (yield el.boundingBox()) || {};\n      return {\n        x,\n        y,\n        width,\n        height\n      };\n    });\n  }\n  getCanvasBoundingBox() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getElementBoundingBox(\"svg.react-dag-editor-svg-container\");\n    });\n  }\n  getMinimapBoundingBox() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        x,\n        y,\n        height,\n        width\n      } = yield this.getElementBoundingBox(\"svg[data-automation-id*='minimap-id']\");\n      return {\n        x,\n        y,\n        width,\n        height\n      };\n    });\n  }\n  dragOnItem(start, end) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.selectArea(start, end);\n    });\n  }\n  getNodeCentralPosition(nodeName) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const pos = yield this.getCentralPosBySelector(this.getNodeCssSelector(nodeName));\n      return pos;\n    });\n  }\n  getNodes() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getDomElements(\"g[data-automation-id*='node-container-']\");\n    });\n  }\n  getEdges() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getDomElements(\"g[data-automation-id*='edge-container-']\");\n    });\n  }\n  getPorts() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getDomElements(\"g[aria-roledescription='port']\");\n    });\n  }\n  getNodeTooltips() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getDomElements(\".node-tooltips\");\n    });\n  }\n  getPortTooltips() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getDomElements(\".port-tooltips\");\n    });\n  }\n  composeGraph() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const nodes = yield this.getNodes();\n      const edges = yield this.getEdges();\n      const ports = yield this.getPorts();\n      const nodeTooltips = yield this.getNodeTooltips();\n      const portTooltips = yield this.getPortTooltips();\n      return {\n        nodes,\n        edges,\n        ports,\n        nodeTooltips,\n        portTooltips\n      };\n    });\n  }\n  getCentralPosBySelector(cssSelector) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getCentralPosByBBox(yield this.getElementBoundingBox(cssSelector));\n    });\n  }\n  getDomElements(selector) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      return Promise.all((_a = yield this.adapter.selectAll(selector)) === null || _a === void 0 ? void 0 : _a.map(handle => __awaiter(this, void 0, void 0, function* () {\n        const bbox = yield handle.boundingBox();\n        const className = yield handle.getAttribute(\"class\");\n        const innerHTML = yield handle.innerHTML();\n        const textContent = yield handle.textContent();\n        const ariaLabel = yield handle.getAttribute(\"aria-label\");\n        const automationId = yield handle.getAttribute(\"data-automation-id\");\n        return {\n          bbox,\n          textContent,\n          className,\n          innerHTML,\n          ariaLabel,\n          automationId\n        };\n      })));\n    });\n  }\n  getCentralPosByBBox(bbox) {\n    if (!bbox) {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n    return {\n      x: bbox.width / 2 + bbox.x,\n      y: bbox.height / 2 + bbox.y\n    };\n  }\n  getPortCssSelector(nodeName, portName) {\n    return `g[data-automation-id*='${nodeName}'][data-automation-id*='${portName}'][data-automation-id*='port-']`;\n  }\n  getNodeCssSelector(nodeName) {\n    return `g[data-automation-id*='node-container-'][data-automation-id*='${nodeName}']`;\n  }\n  getEdgeCssSelector(edgeId) {\n    return `g[data-automation-id*='edge-container-${edgeId}']`;\n  }\n  focusOnCanvasWithKeyboard() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.keyDown(\"Alt\");\n      yield this.adapter.keyDown(\"Shift\");\n      yield this.adapter.keyPress(\"f\");\n      yield this.adapter.keyUp(\"Alt\");\n      yield this.adapter.keyUp(\"Shift\");\n    });\n  }\n}\nexport { ACTIVATED_STATUS, bitset as Bitset, BrowserType, CanvasMenu, CanvasMouseMode, ContextMenu, ContextMenuConfig, ContextMenuConfigContext, DEFAULT_GRAPH_SETTINGS, DEFAULT_NODE_MAX_VISIBLE_SIZE, DEFAULT_NODE_MIN_VISIBLE_SIZE, Debug, DefaultClipboard, DefaultStorage, Direction, EMPTY_CONNECT_STATE, EMPTY_GAP, EMPTY_GRAPH_STATE, EMPTY_STATUS, EMPTY_TRANSFORM_MATRIX, EMPTY_VIEW_PORT, EdgeMenu, EdgeModel, GanttChartFeatures, Graph, GraphBehavior, GraphCanvasEvent, GraphConfigBuilder, GraphConfigContext, GraphContextMenuEvent, GraphEdgeEvent, GraphEdgeStatus, GraphFeatures, GraphMinimapEvent, GraphModel, GraphNodeAnchors, GraphNodeEvent, GraphNodeStatus, GraphPortEvent, GraphPortStatus, GraphScrollBarEvent, GraphStateContext, GraphValueContext, GridBackground, Item, LinearEquation, MenuType, Minimap, MultiMenu, NodeAnchor, NodeMenu, NodeModel, PortMenu, RESIZE_POINT_HEIGHT, RESIZE_POINT_WIDTH, ReactDagEditor, SELECTED_STATUS, StaticGraph, TestAPI, ViewportContext, allFeatures, applyDefaultPortsPosition, applyHorizontalGraphPortsPosition, arrayEquals, canRedo, canUndo, checkRectIntersect, clamp, composeReducers, constantEmptyArray, createGraphState, dataReadonlyMode, debounce, defaultFeatures, defaultGetPositionFromEvent, defaultGraphStateContext, defaultPort, diffGraphEdge, diffGraphNode, diffGraphPort, distance, filterSelectedItems, focusArea, getBrowser, getClientDeltaByPointDelta, getClientPointFromRealPoint, getContainer, getContainerCenter, getContainerClientPoint, getContentArea$1 as getContentArea, getCriticalPath, getCurvePathD, getEdgeSourceTargetCoordinate, getEdgeUid, getGraphReducer, getGroupRect, getLinearFunction, getMinimapRect, getNearestConnectablePort, getNeighborPorts, getNodeAutomationId, getNodeConfig, getNodeRect, getNodeSize, getNodeUid, getOffsetLimit, getPointDeltaByClientDelta, getPortAutomationId, getPortPosition, getPortPositionByPortId, getPortUid, getRealPointFromClientPoint, getRectHeight, getRectWidth, getRelativePoint, getRenderedArea, getRenderedEdges, getRenderedNodes, getScaleLimit, getScaleRange, getTopoSortingNodes, getVisibleArea, getVisibleNodes, getZoomFitMatrix, isActivated, isCanvasEvent, isConnectable, isEdgeEvent, isMacOs, isMobile, isNodeEditing, isNodeEvent, isNodeVisible, isPointInRect, isPointVisible, isPortEvent, isRectVisible, isSelected, isSupported, isViewportComplete, isViewportEmpty, isWithinRect, isWithinThreshold, line, markCriticalPath, markEdgeDirty, memoize, minimapPan, nodeSelection, notSelected, pan, previewMode, pushHistory, rect, redo, resetConnectStatus, resetNodePortsState, resetUndoStack, resolveValueOrCallback, reverseTransformPoint, scrollIntoView, setData, stopPropagation, transformPoint, unSelectAllEntity, undo, updateData, updateStatus, useAlignmentLines, useBackgroundRect, useConnectingState, useContainerRect, useContextMenuConfigContext, useDeferredValue, useGetMouseDownOnAnchor, useGraphConfig, useGraphController, useGraphData, useGraphReducer, useGraphState, useGraphTouchHandler, useMinimapRect, useRenderedArea, useSafariScale, useSelectBox, useThrottle, useUpdateViewportCallback, useViewport, useVirtualization, useWheelHandler, zoom, zoomTo };","map":{"version":3,"names":["jsxs","jsx","Fragment","React","createContext","createRef","useRef","useContext","useLayoutEffect","useCallback","useEffect","useMemo","useState","createElement","uuid","v4","toposort","ReactDOM","unstable_batchedUpdates","DOMPurify","EventEmitter","createUseStyles","mergeStyleSets","mergeStyles","has","mask","state","Boolean","pick","add","t","Array","isArray","reduce","c","m","toggle","remove","replace","bitset","Object","freeze","__proto__","EMPTY_STATUS","SELECTED_STATUS","ACTIVATED_STATUS","GraphEdgeStatus","GraphNodeStatus","GraphPortStatus","updateStatus","updater","value","_a","next","status","assign","isActivated","isNodeEditing","node","Editing","isSelected","notSelected","resetConnectStatus","prevStatus","Activated","isDev","process","env","NODE_ENV","Debug","log","message","console","warn","error","args","never","Error","getNodeConfig","graphConfig","nodeConfig","JSON","stringify","undefined","getRectWidth","rectConfig","rect","minWidth","getMinWidth","width","getRectHeight","minHeight","getMinHeight","height","getNodeSize","getGroupRect","group","nodes","_b","_c","_d","_e","_f","_g","_h","childrenIds","Set","nodeIds","children","from","values","filter","id","minX","Math","min","map","x","maxX","max","minY","y","maxY","padding","left","top","bottom","MouseEventButton","MouseEventButtons","DEFAULT_AUTO_ALIGN_THRESHOLD","COPIED_NODE_SPACING","NODE_MIN_VISIBLE_LENGTH","NODE_MAX_VISIBLE_LENGTH","defaultColors","controlPointColor","primaryColor","defaultColor","borderColor","defaultBorderColor","unConnectableBgColor","defaultBackgroundColor","portStroke","portFill","connectedPortColor","nodeActivateFill","nodeActivateStroke","nodeFill","nodeStroke","contextMenuBackground","contextMenuBorder","contextMenuHoverBackground","fontColor","canvasBackground","minimapBackground","edgeColor","edgeColorSelected","minimapShadow","outlineStyle","focusOutlineColor","dummyNodeStroke","inputFocusBorderAlt","buttonBorder","scrollbarColor","RectComponent","props","style","textY","comment","data","isEditing","rx","borderRadius","fontSize","name","className","placeholder","render","model","Selected","fill","stroke","fillOpacity","getCurvePathD","x1","x2","y1","y2","getControlPointDistance","abs","line","edge","cursor","strokeWidth","d","DefaultPort","getStyle","port","_parentNode","_data","connectedAsSource","connectedAsTarget","getIsConnectable","parentNode","isPortConnectedAsSource","isPortConnectedAsTarget","polygonPoints","points","r","cx","cy","defaultPort","DefaultClipboard","constructor","storage","write","setItem","n","edges","e","read","str","getItem","parse","nodeIdHash","Map","newId","set","source","get","target","DefaultStorage","length","items","size","key","clear","removeItem","delete","applyDefaultPortsPosition","list","inputPorts","p","isInputDisabled","outputPorts","inputPortsCount","outputPortsCount","inputPortsInterval","outputPortsInterval","res","i","push","position","applyHorizontalGraphPortsPosition","isOutputDisabled","GraphConfigBuilder","defaultClipboard","draft","getEdgeConfig","getPortConfig","getGroupConfig","getClipboard","default","registerNode","bind","registerEdge","registerPort","registerGroup","registerClipboard","getConfig","build","GraphConfigContext","MenuType","ContextMenuConfig","contextMenu","registerContextMenu","contextMenuProps","registerMenu","element","menuType","getMenu","styles","reactElement","ContextMenuConfigContext","emptySelectBoxPosition","startX","startY","SelectBox","selectBoxPosition","selectBoxD","pathStyle","GraphFeatures","allFeatures","NodeDraggable","NodeResizable","ClickNodeToSelect","PanCanvas","MultipleSelect","LassoSelect","Delete","AddNewNodes","AddNewEdges","AddNewPorts","CanvasHorizontalScrollable","CanvasVerticalScrollable","NodeHoverView","PortHoverView","AddEdgesByKeyboard","A11yFeatures","AutoFit","EditNode","AutoAlign","UndoStack","CtrlKeyZoom","LimitBoundary","EditEdge","defaultFeatures","dataReadonlyMode","GanttChartFeatures","previewMode","emptyDummyNodes","dx","dy","dWidth","dHeight","alignedDX","alignedDY","isVisible","is$1","is","MapIterator","upstream","f","Symbol","iterator","done","NodeType$1","NodeType","HASH_CODE_LENGTH","BIT_PARTITION_SIZE","FULL_MASK","bitPosFrom","indexFrom","bitmap","bitPos","bitCount","maskFrom","hash","shift","BitmapIndexedNode","valueCount","nodeCount","owner","dataMap","nodeMap","keys","hashes","type","Bitmap","empty","getKey","index","getValue","getHash","getNode","contains","keyHash","key0","insert","value0","key0Hash","setValue","subNodeNew","mergeTwoKeyValPairs","migrateInlineToNode","subNode","setNode","insertValue","update","removeValue","removedValue","subNodeNewSize","migrateNodeToInline","toOwned","slice","iter","BitmapIndexedNodeIterator","same","node0","forEach","child","find","predicate","found","dataIndex","nodeIndex","originalHash","splice","indexOld","indexNew","sizeDelta","newNode","keyHash0","key1","value1","keyHash1","HashCollisionNode","mask0","mask1","Collision","includes","findIndex","it","_","HashCollisionNodeIterator","len","delegate","clone","hashing","o","hashNumber","hashString","String","hashed","ii","charCodeAt","smi","isFinite","Uid","take","peek","uid$1","HashMap","root","HashMapBuilder","finish","iterable","h","withRoot","entries","v","mutate","newRoot","fromArray","builder","MAX_SIZE","MIN_SIZE","HALF_NODE_SPLIT","binaryFind","start","end","mid","InternalNode","selfSize","Internal","BTreeIterator","getChild","child0","updateWithSplit","originalSize","removedKey","removeMostRight","balanceChild","balanceTail","balanceHead","isChildInternal","left0","right0","rotateRight","rotateLeft","right","unshift","updateSize","newKey","newValue","grandChild","delta","pop","child1","child2","next1","next2","nextKey","nextValue","sum","LeafNode","Leaf","removeIndex","emptyRoot","rootInsert","rootRemove","setDelegate","yieldValue","uid","OrderedMap","hashRoot","itemId","sortedRoot","OrderedMapBuilder","tempId","valueId","got","temp","prev","prevKey","prevValue","OrderedMapIterator","g","first","getPortPosition","xOffset","yOffset","getPortPositionByPortId","portId","ports","identical","isMobile","toMatch","some","toMatchItem","navigator","userAgent","match","BrowserType","getBrowser","agent","toLowerCase","indexOf","Electron","Edge","EdgeChromium","window","opr","Opera","chrome","Chrome","IE","Firefox","Safari","Unknown","isSupported","browser","supported","isMacOs","metaControl","metaKey","ctrlKey","checkIsMultiSelect","shiftKey","transformPoint","transformMatrix","reverseTransformPoint","t0","t1","t2","t3","t4","t5","getPointDeltaByClientDelta","a","b","realDx","realDy","getClientDeltaByPointDelta","getRealPointFromClientPoint","clientX","clientY","viewport","getClientPointFromRealPoint","realX","realY","getContainerClientPoint","client","markEdgeDirty","shallow","getNearestConnectablePort","params","minDistance","Infinity","nearestPort","point","isConnectable","portPos","diffX","diffY","distance","portConfig","resetNodePortsState","updatePorts","Default","filterSelectedItems","inner","getNeighborPorts","nodeId","neighbors","edgesBySource","getEdgesBySource","edgesByTarget","getEdgesByTarget","edgeId","targetPortId","sourcePortId","unSelectAllEntity","mapNodes","curNode","nextNode","mapEdges","nodeSelection","isMultiSelect","button","Secondary","selectNodes","getNodeAutomationId","getPortAutomationId","getNodeUid","graphId","getPortUid","getEdgeUid","preventSpread","obj","defineProperty","enumerable","configurable","document","currentScript","EdgeModel","automationId","fromJSON","toJSON","mapCow","NodeModel","ariaLabel","isInSearchResults","isCurrentSearchResult","layer","portPositionCache","getPort","link","updateData","hasPort","updatePositionAndSize","dummy","invalidCache","GraphModel","init","groups","head","tail","selectedNodes","second","last","setEdgeByPortMutable","getNavigationFirstNode","updateNode","edgeIds","merge","updateNodeData","updatePort","insertNode","deleteItems","deleted","call","prevNode","current","deleteEdgeByPort","insertEdge","isEdgeExist","setEdgeByPort","updateEdge","deleteEdge","updateNodesPositionAndSize","dummies","updates","ids","topNode","selected","isNodeSelected","UnconnectedToSelected","setConnected","ConnectedToSelected","sources","targets","exist","partial","edgesByPort","edgeByPortsMap","CanvasMouseMode","GraphBehavior","arrayEquals","clamp","isDef","debounce","callback","timeout","options","instance","maxWait","timer","firstInvokeTime","clearTimeout","now","Date","invokeCallback","setTimeout","apply","diffGraphEdge","preData","isAdded","larger","smaller","edgeIdSet","diffGraphNode","nodeIdSet","diffGraphPort","prePortIdSet","preNodes","portIdSet","CONNECT","small","large","largeNodes","split","diffPorts","emptyArrayInstance","constantEmptyArray","isEdgeEvent","event","startsWith","isNodeEvent","isPortEvent","isCanvasEvent","maxCost","Task","cost","dependencies","earlyStart","latestStart","latestFinish","criticalCost","earlyFinish","isDependent","dep","criticalPath","tasks","completed","remaining","progress","task","containAll","critical","getMaxCost","calculateEarly","ret","sort","o1","o2","setEarly","completionTime","setLatest","AllItems","every","item","getTopoSortingNodes","canvasData","edgesForTopo","nodesForTopo","orderOfNodeIds","array","newNodes","getCriticalPath","durations","isNodesSorted","nodesSorted","allTasks","curAllTasksMap","reverse","getSuccessors","path","result","markCriticalPath","isCritical","parentTask","criticalCostTask","getMaxCriticalCostTask","criticalTask","allTasksMap","successors","checkRectIntersect","rectA","rectB","isALeftOfB","isARightOfB","isABelowB","isAAboveB","isPointInRect","square","pow","sqrt","getLinearFunction","Number","MAX_SAFE_INTEGER","LinearEquation","getX","getY","shallowEqual","memoize","selector","selectedArgs","Direction","isViewportComplete","isViewportEmpty","getNodeRect","isNodeVisible","isRectVisible","shapeRect","isPointVisible","getVisibleNodes","getRenderedNodes","renderedArea","getRenderedArea","isNodeInRenderedArea","getRenderedEdges","edgeCoordinate","getEdgeSourceTargetCoordinate","isEdgeInRenderedArea","isSourceVisible","isTargetVisible","getVisibleArea","normalizeSpacing","spacing","zoomTo","scale","anchor","direction","limitScale","prevState","scaleX","scaleY","X","Y","XY","zoom","resultX","resultY","pan","minimapPan","getContentArea$1","minNodeWidth","minNodeHeight","minNodeX","minNodeY","maxNodeX","maxNodeY","forEachNode","fn","forEachByIds","nodeWidth","nodeHeight","normalizeNodeVisibleMinMax","nodeMinVisibleSize","nodeMaxVisibleSize","nodeMinVisibleWidth","nodeMinVisibleHeight","nodeMaxVisibleWidth","nodeMaxVisibleHeight","getScaleRange","minScaleX","minScaleY","maxScaleX","maxScaleY","getZoomFitMatrix","disablePan","scaleCommon","newScaleX","newScaleY","visibleNodes","focusNode","focusArea","getContainer","svgRef","closest","getContainerCenter","rectRef","getRelativePoint","scrollIntoView","alwaysScroll","shouldScroll","getScaleLimit","settings","getContentArea","getOffsetLimit","canvasBoundaryPadding","groupPadding","contentArea","nodeMin","nodeMax","pushHistory","history","mapPresent","present","past","future","undo","redo","resetUndoStack","canUndo","canRedo","isWithinThreshold","threshold","isWithinRect","p0","w","x0","y0","stopPropagation","resolveValueOrCallback","valueOrCallback","EMPTY_TRANSFORM_MATRIX","EMPTY_VIEW_PORT","EMPTY_GAP","DEFAULT_NODE_MIN_VISIBLE_SIZE","DEFAULT_NODE_MAX_VISIBLE_SIZE","DEFAULT_GRAPH_SETTINGS","features","EMPTY_GRAPH_STATE","createGraphState","behavior","dummyNodes","alignmentLines","activeKeys","connectState","ViewportContext","warnGraphStateContext","defaultGraphStateContext","dispatch","EMPTY_CONNECT_STATE","sourceNode","sourcePort","targetNode","targetPort","movingPoint","GraphValueContext","Proxy","prop","Reflect","GraphStateContext","setData","SlotsContext","EventChannel","listenersRef","externalHandlerRef","queue","working","trigger","callHandlers","batch","events","intercepted","GraphController","pointerId","canvasClickOnce","nodeClickOnce","eventChannel","action","dispatchDelegate","UNSAFE_latestState","setMouseClientPosition","pos","mouseClientPoint","unsetMouseClientPosition","getMouseClientPosition","getEnabledFeatures","getBehavior","setBehavior","getData","getGlobalEventTarget","getGlobalEventTargetDelegate","useConst","ref","noop","ErrorBoundary","Component","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","setState","renderOnError","componentStackLines","componentStack","color","EMPTY_CONNECT_CONTEXT","ConnectingStateContext","displayName","ConnectingState","context","Provider","AlignmentLinesContext","GraphControllerContext","GraphStateStore","graphController","contextValue","ReactDagEditor","handleWarning","handleError","useContextMenuConfigContext","GraphNodeEvent","GraphEdgeEvent","GraphPortEvent","GraphCanvasEvent","GraphScrollBarEvent","GraphMinimapEvent","GraphContextMenuEvent","getScrollLineHeight","iframe","src","body","appendChild","contentDocument","documentElement","innerHTML","sanitize","RETURN_TRUSTED_TYPE","span","firstElementChild","offsetHeight","removeChild","scrollLineHeight","normalizeWheelDelta","WheelEvent","deltaMode","DOM_DELTA_PIXEL","DOM_DELTA_LINE","DOM_DELTA_PAGE","innerHeight","_deltaMode","EMPTY_RECT","VirtualizationContext","visibleArea","renderedNodes","renderedEdges","timestamp","useGraphConfig","useGraphController","useViewport","useAlignmentLines","useConnectingState","useVirtualization","shouldRespondWheel","useWheelHandler","containerRef","zoomSensitivity","scrollSensitivity","isHorizontalScrollDisabled","isVerticalScrollDisabled","isCtrlKeyZoomEnable","globalEventTarget","svg","container","onWheel","preventDefault","deltaY","Zoom","rawEvent","deltaX","MouseWheelScroll","mouseEnterHandler","addEventListener","mouseLeaveHandler","passive","removeEventListener","nextFrame","requestAnimationFrame","LIMIT","isRectChanged","useUpdateViewportCallback","force","viewportRect","getBoundingClientRect","ViewportResize","useContainerRect","updateViewport","onResize","ResizeObserver","resizeObserver","observe","unobserve","disconnect","listener","Element","capture","makeScheduledCallback","schedule","cancel","scheduled","currentArgs","scheduledCallback","animationFramed","cancelAnimationFrame","throttle","limit","cb","useThrottle","deps","useRenderedArea","isVirtualizationEnabled","getMinimapRect","useMinimapRect","setRect","DragController","eventProvider","getPositionFromEvent","onMove","onEnd","lastEvent","prevClientX","prevClientY","onMouseUp","doOnMouseUp","onMouseMove","mouseMove","doOnMouseMove","on","stop","off","getDelta","clientDX","clientDY","getTotalDelta","totalDX","totalDY","defaultGetPositionFromEvent","DragNodeController","globalMoveEventProvider","TouchController","handlers","eventHandlers","onPointerDown","pointerType","pointers","nativeEvent","updateHandler","onPointerMove","onPointerUp","currentHandler","handler","onStart","TwoFingerHandler","prevDistance","currentDistance","prevEvents","dx1","dx2","dy1","dy2","Pinch","useGraphTouchHandler","touchEvents","isSafari","prevScale","useSafariScale","el","onGestureEvent","onGestureStart","onGestureChange","onGestureEnd","useDeferredValue","useSelectBox","selectBoxPositionState","UpdateNodeSelectionBySelectBox","useGraphState","useGraphData","handleBehaviorChange","prevBehavior","DragStart","Dragging","ConnectStart","Connecting","SelectStart","MultiSelect","Panning","DraggingNodeFromItemPanelStart","AddingNode","DragEnd","ConnectEnd","SelectEnd","DraggingNodeFromItemPanelEnd","behaviorReducer","nextBehavior","__rest","s","prototype","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","rejected","then","canvasReducer","Paste","pasteNodes","realPoint","idx","Undo","Redo","KeyDown","KeyUp","SetData","UpdateData","shouldRecord","ResetUndoStack","UpdateSettings","composeReducers","reducers","reduceRight","VisitPortHelper","neighborPorts","selectRef","selectedItem","setSelectedItem","onContainerKeyDown","evt","onComplete","onContainerBlur","onContainerChange","focus","preventScroll","onKeyDown","onBlur","onChange","label","findDOMElement","dataset","getElementById","focusItem","nextItem","Navigate","getNextItem","portIndex","nextPortIndex","getPrevItem","prevPortIndex","nextConnectablePort","focusNextPort","curPortId","curPortIndex","nextPort","focusPrevPort","prevPort","getFocusNodeHandler","compareFn","curNodeId","sortedNodes","curNodeIndex","Select","Centralize","focusLeftNode","n1","n2","focusRightNode","focusDownNode","focusUpNode","goToConnectedPort","unmountComponentAtNode","visitPortHelperContainer","curEditorContainer","editorContainer","defaultGetPortAriaLabel","_node","defaultGetNodeAriaLabel","attachPort","ConnectingAsTarget","clearAttach","connectingReducer","clientPoint","ConnectMove","edgeWillAdd","isCancel","ConnectNavigate","anotherNode","anotherPort","PointerEnter","PointerMove","PointerLeave","contextMenuReducer","nextContextMenuPosition","contextMenuPosition","ContextMenu","Click","Open","Close","edgeReducer","DoubleClick","MouseEnter","MouseLeave","Add","getAlignmentLines","draggingNodes","dummyDraggingNodeHW","getDummyDraggingNode","closestNodes","getClosestNodes","getLines","getAutoAlignDisplacement","_graphConfig","alignDirection","nodeHW","widthOrHeight","alignLine","distance1","distanceMiddle","distance2","getMinCoordinate","field","getMaxCoordinate","setSizeForNode","getBoundingBoxOfNodes","tempMinX","tempMinY","tempMaxX","tempMaxY","dummyDraggingNode","resX","resY","draggingNodeX","draggingNodeY","draggingNodeWidth","draggingNodeHeight","minDistanceX","minDistanceY","dn","draggingNodeValue","alignPos","comparedValue","alignCoordinateValue","closestX","closestY","draggingNode","numberOfDraggingNodes","xLines","yLines","closestXNodes","closestYNodes","sameXNodes","visible","sameYNodes","pipe","getSelectedNodes","dragNodeHandler","nextState","viewportDx","viewportDy","isAutoAlignEnable","autoAlignThreshold","dxAligned","dyAligned","handleDraggingNewNode","dragStart","dragEnd","isDragCanceled","locateNode","nodeX","nodeY","Locate","nodeReducer","ResizingStart","Resizing","ResizingEnd","Drag","DraggingNodeFromItemPanel","portReducer","Focus","Blur","selectNodeBySelectBox","selectBox","selectAreaMinX","selectAreaMaxX","selectAreaMinY","selectAreaMaxY","primeSelectionMin","primeSelectionMax","primeRectSelectionBox","rectNode","handleNavigate","selectionReducer","isLassoSelectEnable","ResetSelection","SelectMove","SelectAll","getRectCenter","resetViewport","ensureNodeVisible","isShapeRectInViewport","nodeRects","hasVisibleNode","groupRects","hasVisibleGroup","findTopMostRect","cur","zoomToFit","reducer","Scroll","Pan","limitBoundary","ResetViewport","ZoomTo","ZoomToFit","ScrollIntoView","viewportReducer","builtinReducer","getGraphReducer","middleware","finalReducer","finalMiddleware","useGraphReducer","dispatchImpl","useReducer","sideEffects","prevStateRef","useBackgroundRect","MouseMoveEventProvider","useGetMouseDownOnAnchor","drag","PointerEventProvider","eventEmitter","emit","onUp","ensureRemoveListener","ensureAddListener","listeners","withSimulatedClick","dragThreshold","Node","dragMultiSelect","dragging","dragPan","onContainerMouseDown","Primary","canvasMouseMode","isPanDisabled","isMultiSelectDisabled","isPanMode","isMouseButNotLeft","onNodePointerDown","isNodesDraggable","isClickNodeToSelectDisabled","isMouseRight","simulatedEvent","MouseEvent","currentTarget","dispatchEvent","releasePointerCapture","useCanvasKeyboardEventHandlers","featureControl","setCurHoverNode","setCurHoverPort","isDeleteDisabled","isPasteDisabled","isUndoEnabled","keyDownHandlerMap","deleteKeyDownHandler","cKeyDownHandler","Copy","vKeyDownHandler","zKeyDownHandler","yKeyDownHandler","aKeyDownHandler","spaceKeyDownHandler","ctrlKeyDownHandler","metaKeyDownHandler","shiftKeyDownHandler","repeat","prevMouseDownPortId","prevMouseDownPortTime","useEventChannel","setFocusedWithoutMouse","isConnectDisabled","isPortHoverViewEnable","isNodeEditDisabled","isA11yEnable","animationFramedDispatch","keyDownHandler","focusFirstNode","firstNode","handleEdgeEvent","handleCanvasEvent","selectedData","clipboard","MouseDown","MouseUp","nodeName","MouseMove","onNodePointerEnter","isNodeHoverViewEnabled","onNodePointerLeave","onNodeDoubleClick","onNodeKeyDown","handleNodeEvent","PointerDown","SVGElement","onPortPointerDown","performance","onPortPointerUp","onPortPointerEnter","onPortPointerLeave","onPortKeyDown","altKey","code","blur","handlePortEvent","PointerUp","handleEvent","useImperativeHandle","onEvent","useFeatureControl","isNodeResizable","isAutoFitDisabled","isLimitBoundary","isEdgeEditable","isScrollbarVisible","InvisibleScrollbar","emptyLine","Line","lineStyle","AlignmentLines","memo","l","NodeFrame","slotsContext","renderNodeFrame","NodeResizeHandler","renderNodeResizeHandler","Slots","AnimatingNodeGroup","graphData","dummyNode","renderDummy","transform","strokeDasharray","ConnectingLine","autoAttachLine","connectingLine","strokeColor","connectingLineStroke","markerWidth","markerHeight","refX","refY","orient","markerUnits","markerEnd","sourcePortPosition","targetPortPosition","isAttach","sourcePoint","targetPoint","defaultStyle","userSelect","GraphContextMenu","onClick","setStyle","clientWidth","clientHeight","nextStyle","contextMenuConfig","content","setContent","selectedNodesCount","selectedPortsCount","selectedEdgesCount","menu","Multi","Canvas","Port","handleContextMenu","onContextMenu","role","Renderer","defaultGroup","Group","groupConfig","GraphGroupsRenderer","NodeTooltips","renderTooltips","PortTooltips","isPortTooltipsVisible","Consumer","useRefValue","SCROLL_BAR_WIDTH","wrapperCommonStyle","useStyles","verticalScrollWrapper","horizontalScrollWrapper","verticalScrollStyle","scrollbarLayout","verticalScrollHeight","backgroundColor","verticalScrollTop","horizontalScrollStyle","horizontalScrollWidth","horizontalScrollLeft","Scrollbar","vertical","horizontal","offsetLimit","getScrollbarLayout","classes","scrollbarLayoutRef","onVerticalScrollMouseDown","containerHeight","scrollbarDy","totalContentHeight","ScrollEnd","ScrollStart","onHorizontalScrollMouseDown","containerWidth","scrollbarDx","totalContentWidth","onMouseDown","getTotalContentHeight","getTotalContentWidth","Transform","matrix","join","getHintPoints","yOnRightAxis","xOnBottomAxis","xOnTopAxis","yOnLeftAxis","GraphEdge","graphModel","virtualization","edgeEvent","persist","isSourceRendered","isTargetRendered","edgeConfig","edgeNode","linearFunction","inverseLinearFunction","hintSource","hintTarget","hintPoint","renderWithTargetHint","renderWithSourceHint","onDoubleClick","onMouseEnter","onMouseLeave","onMouseOver","MouseOver","onMouseOut","MouseOut","onFocus","compareEqual","EdgeChampNodeRender","others","EdgeHashCollisionNodeRender","EdgeTree","tree","overflow","outline","touchAction","buttonA11Y","opacity","addingNodeSvg","zIndex","moduleItem","minimap","minimapSvg","GraphNode","getNodeAriaLabel","nodeEvent","focusable","tabIndex","onPointerEnter","onPointerLeave","RESIZE_POINT_WIDTH","RESIZE_POINT_HEIGHT","NodeAnchor","BBOX_PADDING","GraphNodeAnchors","getMouseDown","nw","finalDx","finalDy","_dx","ne","se","sw","GraphOneNodePorts","getPortAriaLabel","portEvent","portKey","GraphNodeParts","renderNodeAnchors","commonProps","nodeAnchors","defaultAnchors","GraphNodePartsMemo","NodeTreeNode","arg","prevProps","nextProps","NodeTree","NodeLayers","renderTree","layers","VirtualizationProvider","virtualizationDelay","previousContextRef","previousContext","VirtualizationRecalculated","performanceStartTime","previousRenderedNodes","previousRenderedEdges","getCursorStyle","isMultiSelecting","isClickMultipleSelect","isAreaSelection","getNodeCursor","isNodeDraggable","getGraphStyles","focusedWithoutMouse","background","buttonA11y","Graph","defaultSVGRef","focusCanvasAccessKey","curHoverNode","curHoverPort","canvasEventHandler","onContextMenuClick","onFocusButtonClick","accessKey","touchHandlers","renderNodeTree","onBrowserNotSupported","renderPortTooltip","renderNodeTooltip","curHoverNodeHasContextMenu","onKeyUp","hidden","preserveAspectRatio","title","desc","alignmentLine","emptyNodeConfig","useSvgRect","AddingNodeSvg","nextNodeRef","diffLeft","diffTop","attachedNode","tempGraphId","isWithInBound","adjustedClientPoint","adjustedX","adjustedY","adjustPosition","rectWidth","rectHeight","realWidth","realHeight","Item","workingModel","setWorkingModel","dragWillStart","createPortal","TouchDragAdapter","startListeners","moveListeners","endListeners","_events","StaticNode","renderStatic","StaticNodeWithMemo","ReadonlyNodeTreeNode","ReadonlyNodeTree","StaticGraph","MiniMapShadow","containerRect","shadowPadding","_shadowPadding","shadowStyle","viewportStartX","viewportStartY","viewportEndX","endX","viewportEndY","endY","sideShadowHeight","rightShadowWidth","bottomShadowHeight","Minimap","maxNodesCountAllowed","onRenderUnavailable","renderArrow","graphViewport","minimapContainerStyle","minimapTransformMatrix","minimapTransformMatrixRef","boundaryPoints","viewportWidth","viewportHeight","onStartDrag","validMouseRect","PanStart","PanEnd","arrowParams","showArrow","arrowDeg","atan2","PI","touchController","touchDragAdapter","staticGraphEl","border","lineHeight","propsMerged","NodeMenu","EdgeMenu","PortMenu","CanvasMenu","MultiMenu","GridBackground","smallGridAttributes","gridAttributes","backgroundAttributes","rectX","rectY","patternUnits","TestAPI","adapter","getNodesCount","selectAll","getEdgesCount","addNodeFromItemPanel","addColumnsModuleInPanelElPos","getCentralPosBySelector","itemSelector","mouseDown","canvasBBOx","getCanvasBoundingBox","mouseUp","connectTwoNodes","sourceNodeName","sourcePortName","targetNodeName","targetPortName","sourcePos","getPortCssSelector","targetPos","toPosition","nodeCenterPos","getNodeCssSelector","rightClickOnNode","rightClick","clickOnNode","click","hoverOnNode","hover","hoverOnPort","portName","hoverOnEdge","getEdgeCssSelector","getAutoAlignHintLineCount","clickOnNodesWithCtrlKey","nodeNames","keyDown","keyUp","rightClickOnCanvas","selectArea","connectWithKeyboard","isCancelConnect","focusOnCanvasWithKeyboard","keyPress","navigateAroundNodesWithKeyboard","navigateBackWithKeyboard","navigateAroundPortsWithKeyboard","goToConnectedPortWithKeyboard","deleteNodeWithKeyboard","panCanvas","to","getElementBoundingBox","cssSelector","waitForSelector","boundingBox","getMinimapBoundingBox","dragOnItem","getNodeCentralPosition","getNodes","getDomElements","getEdges","getPorts","getNodeTooltips","getPortTooltips","composeGraph","nodeTooltips","portTooltips","getCentralPosByBBox","all","handle","bbox","getAttribute","textContent","Bitset"],"sources":["/Users/aidancorrell/repos/data_catalog/frontend/node_modules/react-dag-editor/index.js"],"sourcesContent":["import { jsxs, jsx, Fragment } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { createContext, createRef, useRef, useContext, useLayoutEffect, useCallback, useEffect, useMemo, useState, createElement } from 'react';\nimport * as uuid from 'uuid';\nimport { v4 } from 'uuid';\nimport * as toposort from 'toposort';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport DOMPurify from 'dompurify';\nimport { EventEmitter } from 'eventemitter3';\nimport { createUseStyles } from 'react-jss';\nimport { mergeStyleSets, mergeStyles } from '@fluentui/merge-styles';\n\nconst has = mask => state => Boolean(pick(mask)(state));\nconst add = mask => state => {\n  const t = state || 0;\n\n  if (Array.isArray(mask)) {\n    return mask.reduce((c, m) => c | m, t);\n  } else {\n    return t | mask;\n  }\n};\nconst toggle = mask => state => {\n  const t = state || 0;\n  return t ^ mask;\n};\nconst pick = mask => state => {\n  const t = state || 0;\n  return t & mask;\n};\nconst remove = mask => state => {\n  const t = state || 0;\n\n  if (Array.isArray(mask)) {\n    return mask.reduce((c, m) => c & ~m, t);\n  } else {\n    return t & ~mask;\n  }\n};\nconst replace = state => () => state;\n\nvar bitset = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  has: has,\n  add: add,\n  toggle: toggle,\n  pick: pick,\n  remove: remove,\n  replace: replace\n});\n\nconst EMPTY_STATUS = 0;\nconst SELECTED_STATUS = 0b0001;\nconst ACTIVATED_STATUS = 0b00000010;\nvar GraphEdgeStatus;\n\n(function (GraphEdgeStatus) {\n  GraphEdgeStatus[GraphEdgeStatus[\"Default\"] = EMPTY_STATUS] = \"Default\";\n  GraphEdgeStatus[GraphEdgeStatus[\"Selected\"] = SELECTED_STATUS] = \"Selected\";\n  GraphEdgeStatus[GraphEdgeStatus[\"Activated\"] = ACTIVATED_STATUS] = \"Activated\";\n  GraphEdgeStatus[GraphEdgeStatus[\"ConnectedToSelected\"] = 4] = \"ConnectedToSelected\";\n  GraphEdgeStatus[GraphEdgeStatus[\"UnconnectedToSelected\"] = 8] = \"UnconnectedToSelected\";\n  GraphEdgeStatus[GraphEdgeStatus[\"Editing\"] = 16] = \"Editing\";\n})(GraphEdgeStatus || (GraphEdgeStatus = {}));\n\nvar GraphNodeStatus;\n\n(function (GraphNodeStatus) {\n  GraphNodeStatus[GraphNodeStatus[\"Default\"] = EMPTY_STATUS] = \"Default\";\n  GraphNodeStatus[GraphNodeStatus[\"Selected\"] = SELECTED_STATUS] = \"Selected\";\n  GraphNodeStatus[GraphNodeStatus[\"Activated\"] = ACTIVATED_STATUS] = \"Activated\";\n  GraphNodeStatus[GraphNodeStatus[\"Editing\"] = 4] = \"Editing\";\n  GraphNodeStatus[GraphNodeStatus[\"ConnectedToSelected\"] = 8] = \"ConnectedToSelected\";\n  GraphNodeStatus[GraphNodeStatus[\"UnconnectedToSelected\"] = 16] = \"UnconnectedToSelected\";\n})(GraphNodeStatus || (GraphNodeStatus = {}));\n\nvar GraphPortStatus;\n\n(function (GraphPortStatus) {\n  GraphPortStatus[GraphPortStatus[\"Default\"] = EMPTY_STATUS] = \"Default\";\n  GraphPortStatus[GraphPortStatus[\"Selected\"] = SELECTED_STATUS] = \"Selected\";\n  GraphPortStatus[GraphPortStatus[\"Activated\"] = ACTIVATED_STATUS] = \"Activated\";\n  GraphPortStatus[GraphPortStatus[\"Connecting\"] = 4] = \"Connecting\";\n  GraphPortStatus[GraphPortStatus[\"ConnectingAsTarget\"] = 8] = \"ConnectingAsTarget\";\n})(GraphPortStatus || (GraphPortStatus = {}));\n\nconst updateStatus = updater => value => {\n  var _a;\n\n  const next = updater((_a = value.status) !== null && _a !== void 0 ? _a : 0);\n\n  if (next === value.status) {\n    return value;\n  }\n\n  return Object.assign(Object.assign({}, value), {\n    status: next\n  });\n};\nfunction isActivated(value) {\n  return has(ACTIVATED_STATUS)(value.status);\n}\nfunction isNodeEditing(node) {\n  return has(GraphNodeStatus.Editing)(node.status);\n}\nfunction isSelected(value) {\n  return has(SELECTED_STATUS)(value.status);\n}\nfunction notSelected(value) {\n  return !isSelected(value);\n}\nconst resetConnectStatus = mask => prevStatus => {\n  return (prevStatus || 0) & GraphNodeStatus.Activated | mask;\n};\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-ignore\nconst isDev = process.env.NODE_ENV !== \"production\";\n\n/* eslint-disable no-console */\n\nclass Debug {\n  static log(message) {\n    if (isDev) {\n      console.log(message);\n    }\n  }\n\n  static warn(message) {\n    if (isDev) {\n      console.warn(message);\n    }\n  }\n\n  static error(...args) {\n    // tslint:disable-next-line: no-console\n    console.error(...args);\n  }\n\n  static never(value, message) {\n    throw new Error(message !== null && message !== void 0 ? message : `${value} is unexpected`);\n  }\n\n}\n\nconst getNodeConfig = (node, graphConfig) => {\n  const nodeConfig = graphConfig.getNodeConfig(node);\n\n  if (!nodeConfig) {\n    Debug.warn(`invalid node ${JSON.stringify(node)}`);\n    return undefined;\n  }\n\n  return nodeConfig;\n};\n\n/**\r\n * @param rectConfig\r\n * @param rect\r\n */\n\nfunction getRectWidth(rectConfig, rect) {\n  var _a;\n\n  const minWidth = (_a = rectConfig === null || rectConfig === void 0 ? void 0 : rectConfig.getMinWidth(rect)) !== null && _a !== void 0 ? _a : 0;\n\n  if (rect.width && rect.width >= minWidth) {\n    return rect.width;\n  }\n\n  return minWidth;\n}\n/**\r\n * @param rectConfig\r\n * @param rect\r\n */\n\nfunction getRectHeight(rectConfig, rect) {\n  var _a;\n\n  const minHeight = (_a = rectConfig === null || rectConfig === void 0 ? void 0 : rectConfig.getMinHeight(rect)) !== null && _a !== void 0 ? _a : 0;\n\n  if (rect.height && rect.height >= minHeight) {\n    return rect.height;\n  }\n\n  return minHeight;\n}\n/**\r\n * get node height and width by graphConfig\r\n *\r\n * @param node the node to get the size\r\n * @param graphConfig type IGraphConfig\r\n */\n\nfunction getNodeSize(node, graphConfig) {\n  const nodeConfig = getNodeConfig(node, graphConfig);\n  const width = getRectWidth(nodeConfig, node);\n  const height = getRectHeight(nodeConfig, node);\n  return {\n    height,\n    width\n  };\n}\n/**\r\n * @param group\r\n * @param nodes\r\n * @param graphConfig\r\n */\n\nfunction getGroupRect(group, nodes, graphConfig) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n\n  const childrenIds = new Set(group.nodeIds);\n  const children = Array.from(nodes.values()).filter(node => childrenIds.has(node.id));\n  const minX = Math.min(...children.map(node => node.x));\n  const maxX = Math.max(...children.map(node => node.x + getNodeSize(node, graphConfig).width));\n  const minY = Math.min(...children.map(node => node.y));\n  const maxY = Math.max(...children.map(node => node.y + getNodeSize(node, graphConfig).height));\n  const x = minX - ((_b = (_a = group.padding) === null || _a === void 0 ? void 0 : _a.left) !== null && _b !== void 0 ? _b : 0);\n  const y = minY - ((_d = (_c = group.padding) === null || _c === void 0 ? void 0 : _c.top) !== null && _d !== void 0 ? _d : 0);\n  const height = maxY - y + ((_f = (_e = group.padding) === null || _e === void 0 ? void 0 : _e.bottom) !== null && _f !== void 0 ? _f : 0);\n  const width = maxX - x + ((_h = (_g = group.padding) === null || _g === void 0 ? void 0 : _g.left) !== null && _h !== void 0 ? _h : 0);\n  return {\n    x,\n    y,\n    width,\n    height\n  };\n}\n\n/**\r\n * https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\r\n */\nvar MouseEventButton;\n\n(function (MouseEventButton) {\n  /**\r\n   * usually the left button or the un-initialized state\r\n   */\n  MouseEventButton[MouseEventButton[\"Primary\"] = 0] = \"Primary\";\n  /**\r\n   * usually the wheel button or the middle button (if present)\r\n   */\n\n  MouseEventButton[MouseEventButton[\"Auxiliary\"] = 1] = \"Auxiliary\";\n  /**\r\n   * usually the right button\r\n   */\n\n  MouseEventButton[MouseEventButton[\"Secondary\"] = 2] = \"Secondary\";\n  /**\r\n   * typically the Browser Back button\r\n   */\n\n  MouseEventButton[MouseEventButton[\"Fourth\"] = 4] = \"Fourth\";\n  /**\r\n   * typically the Browser Forward button\r\n   */\n\n  MouseEventButton[MouseEventButton[\"Fifth\"] = 5] = \"Fifth\";\n})(MouseEventButton || (MouseEventButton = {}));\n\nvar MouseEventButtons;\n\n(function (MouseEventButtons) {\n  MouseEventButtons[MouseEventButtons[\"None\"] = 0] = \"None\";\n  MouseEventButtons[MouseEventButtons[\"Left\"] = 1] = \"Left\";\n  MouseEventButtons[MouseEventButtons[\"Right\"] = 2] = \"Right\";\n  MouseEventButtons[MouseEventButtons[\"Middle\"] = 4] = \"Middle\";\n})(MouseEventButtons || (MouseEventButtons = {}));\n\nconst DEFAULT_AUTO_ALIGN_THRESHOLD = 50;\nconst COPIED_NODE_SPACING = 50;\nconst NODE_MIN_VISIBLE_LENGTH = 5;\nconst NODE_MAX_VISIBLE_LENGTH = 500;\nconst defaultColors = {\n  controlPointColor: \"#333333\",\n  primaryColor: \"#0078D4\",\n  defaultColor: \"#CCCCCC\",\n  borderColor: \"#B3B0AD\",\n  defaultBorderColor: \"#FFFFFF\",\n  unConnectableBgColor: \"#E1DFDD\",\n  defaultBackgroundColor: \"#FFFFFF\",\n  portStroke: \"#ccc\",\n  portFill: \"#fff\",\n  connectedPortColor: \"gray\",\n  nodeActivateFill: \"#ffffff\",\n  nodeActivateStroke: \"#0078D4\",\n  nodeFill: \"#ffffff\",\n  nodeStroke: \"#cccccc\",\n  contextMenuBackground: \"#FFFFFF\",\n  contextMenuBorder: \"#E1DFDD\",\n  contextMenuHoverBackground: \"rgba(0, 120, 212, 0.05)\",\n  fontColor: \"#000000\",\n  canvasBackground: \"#EDEDED\",\n  minimapBackground: \"#EDEDED\",\n  edgeColor: \"#ccc\",\n  edgeColorSelected: \"#015cda\",\n  minimapShadow: \"#000000\",\n  outlineStyle: \"none\",\n  focusOutlineColor: \"#000000\",\n  dummyNodeStroke: \"#015cda\",\n  inputFocusBorderAlt: \"#0078d4\",\n  buttonBorder: \"#797775\",\n  scrollbarColor: \"#c8c8c8\"\n};\n\nconst RectComponent = props => {\n  const {\n    style,\n    node,\n    width,\n    height,\n    textY\n  } = props;\n  const comment = node.data && node.data.comment ? node.data.comment : \"\";\n  const isEditing = isNodeEditing(node);\n  return jsxs(\"g\", {\n    children: [jsx(\"rect\", {\n      width: width,\n      height: height,\n      x: node.x,\n      y: node.y,\n      style: style,\n      rx: style.borderRadius\n    }), jsx(\"text\", Object.assign({\n      x: node.x,\n      y: textY,\n      fontSize: 12\n    }, {\n      children: node.name\n    })), node.data && node.data.comment && !isEditing && jsx(\"text\", Object.assign({\n      x: node.x,\n      y: textY + 20,\n      fontSize: 12,\n      className: `comment-${node.id}`\n    }, {\n      children: node.data.comment\n    })), isEditing && jsx(\"foreignObject\", Object.assign({\n      x: node.x,\n      y: textY,\n      height: height / 2.5,\n      width: width - 5\n    }, {\n      children: jsx(\"input\", {\n        value: comment,\n        placeholder: \"Input your comment here\"\n      })\n    }))]\n  }, node.id);\n};\n\nconst rect = {\n  getMinHeight() {\n    return 150;\n  },\n\n  getMinWidth() {\n    return 150;\n  },\n\n  render(args) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const node = args.model;\n    const width = getRectWidth(rect, node);\n    const height = getRectHeight(rect, node);\n    const style = has(GraphNodeStatus.Selected | GraphNodeStatus.Activated)(node.status) ? {\n      fill: defaultColors.nodeActivateFill,\n      stroke: defaultColors.nodeActivateStroke\n    } : {\n      fill: defaultColors.nodeFill,\n      fillOpacity: 0.1,\n      stroke: defaultColors.nodeStroke,\n      borderRadius: \"5\"\n    };\n    const textY = node.y + height / 3;\n    return jsx(RectComponent, {\n      style: style,\n      node: node,\n      width: width,\n      height: height,\n      textY: textY\n    });\n  }\n\n};\n\nconst getCurvePathD = (x1, x2, y1, y2) => {\n  // The ports are even width in px. and paths are 2 px. wide. We therefore subtract 1 from the HalfWidth to have them appear centered -- center of the path lines up with center of the port.\n  return `M${x1},${y1}C${x1},${y1 - getControlPointDistance(y1, y2)},${x2},${y2 + 5 + getControlPointDistance(y1, y2)},${x2},${y2 + 5}`;\n};\n\nconst getControlPointDistance = (y1, y2) => {\n  return Math.min(5 * 15, // 5 is port height\n  Math.max(5 * 3, Math.abs((y1 - (y2 + 5)) / 2)));\n};\n\nconst line = {\n  render(args) {\n    const edge = args.model;\n    const style = {\n      cursor: \"crosshair\",\n      stroke: has(GraphEdgeStatus.Selected)(edge.status) ? defaultColors.edgeColorSelected : defaultColors.edgeColor,\n      strokeWidth: \"2\"\n    };\n    return jsx(\"path\", {\n      d: getCurvePathD(args.x2, args.x1, args.y2, args.y1),\n      fill: \"none\",\n      style: style,\n      id: `edge${edge.id}`\n    }, edge.id);\n  }\n\n};\n\nclass DefaultPort {\n  getStyle(port, _parentNode, _data, connectedAsSource, connectedAsTarget) {\n    const stroke = defaultColors.portStroke;\n    let fill = defaultColors.portFill;\n\n    if (connectedAsSource || connectedAsTarget) {\n      fill = defaultColors.connectedPortColor;\n    }\n\n    if (has(GraphPortStatus.Activated)(port.status)) {\n      fill = defaultColors.primaryColor;\n    }\n\n    return {\n      stroke,\n      fill\n    };\n  }\n\n  getIsConnectable() {\n    return true;\n  }\n\n  render(args) {\n    const {\n      model: port,\n      data,\n      parentNode\n    } = args;\n    const connectedAsSource = data.isPortConnectedAsSource(parentNode.id, port.id);\n    const connectedAsTarget = data.isPortConnectedAsTarget(parentNode.id, port.id);\n    const style = this.getStyle(port, parentNode, data, connectedAsSource, connectedAsTarget);\n    const {\n      x,\n      y\n    } = args;\n    const polygonPoints = `${x - 5} ${y}, ${x + 7} ${y}, ${x + 1} ${y + 8}`;\n    return connectedAsTarget ? jsx(\"polygon\", {\n      points: polygonPoints,\n      style: style\n    }) : jsx(\"circle\", {\n      r: 5,\n      cx: x,\n      cy: y,\n      style: style\n    }, `${args.parentNode.id}-${args.model.id}`);\n  }\n\n}\n\nconst defaultPort = new DefaultPort();\n\nclass DefaultClipboard {\n  constructor(storage) {\n    this.storage = storage;\n  }\n\n  write(data) {\n    this.storage.setItem(\"graph-clipboard\", JSON.stringify({\n      nodes: data.nodes.map(n => Object.assign(Object.assign({}, n), {\n        data: {}\n      })),\n      edges: data.edges.map(e => Object.assign(Object.assign({}, e), {\n        data: {}\n      }))\n    }));\n  }\n\n  read() {\n    const str = this.storage.getItem(\"graph-clipboard\");\n\n    if (!str) {\n      return null;\n    }\n\n    try {\n      const data = JSON.parse(str);\n      const nodeIdHash = new Map();\n      return {\n        nodes: data.nodes.map(n => {\n          const newId = uuid.v4();\n          nodeIdHash.set(n.id, newId);\n          return Object.assign(Object.assign({}, n), {\n            x: n.x + COPIED_NODE_SPACING,\n            y: n.y + COPIED_NODE_SPACING,\n            id: newId\n          });\n        }),\n        edges: data.edges.map(e => Object.assign(Object.assign({}, e), {\n          id: uuid.v4(),\n          source: nodeIdHash.get(e.source) || \"\",\n          target: nodeIdHash.get(e.target) || \"\"\n        }))\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n\n}\n\nclass DefaultStorage {\n  get length() {\n    return this.items.size;\n  }\n\n  constructor() {\n    this.key = () => \"DefaultLocalStorage\";\n\n    this.items = new Map();\n  }\n\n  clear() {\n    this.items = new Map();\n  }\n\n  setItem(key, data) {\n    this.items.set(key, data);\n  }\n\n  getItem(key) {\n    if (!this.items.has(key)) {\n      return null;\n    }\n\n    return this.items.get(key);\n  }\n\n  removeItem(key) {\n    this.items.delete(key);\n  }\n\n}\n\nfunction applyDefaultPortsPosition(list) {\n  const inputPorts = list.filter(p => !p.isInputDisabled);\n  const outputPorts = list.filter(p => p.isInputDisabled);\n  const inputPortsCount = inputPorts.length;\n  const outputPortsCount = outputPorts.length;\n  const inputPortsInterval = 1 / (inputPortsCount + 1);\n  const outputPortsInterval = 1 / (outputPortsCount + 1);\n  const res = [];\n\n  for (let i = 0; i < inputPortsCount; i += 1) {\n    res.push(Object.assign(Object.assign({}, inputPorts[i]), {\n      position: [(i + 1) * inputPortsInterval, 0]\n    }));\n  }\n\n  for (let i = 0; i < outputPortsCount; i += 1) {\n    const port = outputPorts[i];\n    res.push(Object.assign(Object.assign({}, port), {\n      position: [(i + 1) * outputPortsInterval, 1]\n    }));\n  }\n\n  return res;\n}\n\nfunction applyHorizontalGraphPortsPosition(list) {\n  const inputPorts = list.filter(p => !p.isInputDisabled);\n  const outputPorts = list.filter(p => !p.isOutputDisabled);\n  const inputPortsCount = inputPorts.length;\n  const outputPortsCount = outputPorts.length;\n  const inputPortsInterval = 1 / (inputPortsCount + 1);\n  const outputPortsInterval = 1 / (outputPortsCount + 1);\n  const res = [];\n\n  for (let i = 0; i < inputPortsCount; i += 1) {\n    res.push(Object.assign(Object.assign({}, inputPorts[i]), {\n      position: [0, (i + 1) * inputPortsInterval]\n    }));\n  }\n\n  for (let i = 0; i < outputPortsCount; i += 1) {\n    res.push(Object.assign(Object.assign({}, outputPorts[i]), {\n      position: [1, (i + 1) * outputPortsInterval]\n    }));\n  }\n\n  return res;\n}\n\nclass GraphConfigBuilder {\n  constructor() {\n    const storage = new DefaultStorage();\n    const defaultClipboard = new DefaultClipboard(storage);\n    this.draft = {\n      getNodeConfig: () => rect,\n      getEdgeConfig: () => line,\n      getPortConfig: () => defaultPort,\n      getGroupConfig: () => undefined,\n      getClipboard: () => defaultClipboard\n    };\n  }\n\n  static default() {\n    return new GraphConfigBuilder();\n  }\n\n  static from(graphConfig) {\n    return new GraphConfigBuilder().registerNode(graphConfig.getNodeConfig.bind(graphConfig)).registerEdge(graphConfig.getEdgeConfig.bind(graphConfig)).registerPort(graphConfig.getPortConfig.bind(graphConfig)).registerGroup(graphConfig.getGroupConfig.bind(graphConfig)).registerClipboard(graphConfig.getClipboard.bind(graphConfig));\n  }\n\n  registerNode(getConfig) {\n    this.draft.getNodeConfig = getConfig;\n    return this;\n  }\n\n  registerEdge(getConfig) {\n    this.draft.getEdgeConfig = getConfig;\n    return this;\n  }\n\n  registerPort(getConfig) {\n    this.draft.getPortConfig = getConfig;\n    return this;\n  }\n\n  registerGroup(getConfig) {\n    this.draft.getGroupConfig = getConfig;\n    return this;\n  }\n\n  registerClipboard(getClipboard) {\n    this.draft.getClipboard = getClipboard;\n    return this;\n  }\n\n  build() {\n    return this.draft;\n  }\n\n}\n\nconst GraphConfigContext = /*#__PURE__*/createContext(GraphConfigBuilder.default().build());\n\nvar MenuType;\n\n(function (MenuType) {\n  MenuType[\"Node\"] = \"node\";\n  MenuType[\"Edge\"] = \"edge\";\n  MenuType[\"Port\"] = \"port\";\n  MenuType[\"Canvas\"] = \"canvas\";\n  MenuType[\"Multi\"] = \"multi\";\n})(MenuType || (MenuType = {}));\n\nclass ContextMenuConfig {\n  constructor() {\n    this.contextMenu = new Map();\n  }\n\n  registerContextMenu(props) {\n    this.contextMenuProps = Object.assign({}, props);\n  }\n\n  registerMenu(element, menuType) {\n    this.contextMenu.set(menuType, element);\n  }\n\n  getMenu(menuType) {\n    if (this.contextMenuProps && this.contextMenu.has(menuType)) {\n      const {\n        className,\n        styles\n      } = this.contextMenuProps;\n      const reactElement = /*#__PURE__*/React.createElement(\"div\", {\n        className,\n        style: styles\n      }, this.contextMenu.get(menuType));\n      return reactElement;\n    }\n\n    return null;\n  }\n\n}\nconst ContextMenuConfigContext = /*#__PURE__*/React.createContext(new ContextMenuConfig());\n\nconst emptySelectBoxPosition = () => ({\n  startX: 0,\n  startY: 0,\n  height: 0,\n  width: 0\n});\nconst SelectBox = props => {\n  const {\n    selectBoxPosition,\n    style\n  } = props;\n  const selectBoxD = `m${selectBoxPosition.startX} ${selectBoxPosition.startY} v ${selectBoxPosition.height} h ${selectBoxPosition.width} v${-selectBoxPosition.height} h ${-selectBoxPosition.width}`;\n  const pathStyle = style !== null && style !== void 0 ? style : {\n    fill: \"none\",\n    stroke: defaultColors.defaultColor\n  };\n  return jsx(\"path\", {\n    style: pathStyle,\n    d: selectBoxD\n  });\n};\n\nvar GraphFeatures;\n\n(function (GraphFeatures) {\n  GraphFeatures[\"NodeDraggable\"] = \"nodeDraggable\";\n  GraphFeatures[\"NodeResizable\"] = \"nodeResizable\";\n  GraphFeatures[\"ClickNodeToSelect\"] = \"clickNodeToSelect\";\n  GraphFeatures[\"PanCanvas\"] = \"panCanvas\";\n  GraphFeatures[\"MultipleSelect\"] = \"multipleSelect\";\n  GraphFeatures[\"LassoSelect\"] = \"lassoSelect\";\n  GraphFeatures[\"Delete\"] = \"delete\";\n  GraphFeatures[\"AddNewNodes\"] = \"addNewNodes\";\n  GraphFeatures[\"AddNewEdges\"] = \"addNewEdges\";\n  GraphFeatures[\"AddNewPorts\"] = \"addNewPorts\";\n  GraphFeatures[\"AutoFit\"] = \"autoFit\";\n  GraphFeatures[\"CanvasHorizontalScrollable\"] = \"canvasHorizontalScrollable\";\n  GraphFeatures[\"CanvasVerticalScrollable\"] = \"canvasVerticalScrollable\";\n  GraphFeatures[\"NodeHoverView\"] = \"nodeHoverView\";\n  GraphFeatures[\"PortHoverView\"] = \"portHoverView\";\n  GraphFeatures[\"AddEdgesByKeyboard\"] = \"addEdgesByKeyboard\";\n  GraphFeatures[\"A11yFeatures\"] = \"a11YFeatures\";\n  GraphFeatures[\"EditNode\"] = \"editNode\";\n  GraphFeatures[\"AutoAlign\"] = \"autoAlign\";\n  GraphFeatures[\"UndoStack\"] = \"undoStack\";\n  GraphFeatures[\"CtrlKeyZoom\"] = \"ctrlKeyZoom\";\n  GraphFeatures[\"LimitBoundary\"] = \"limitBoundary\";\n  GraphFeatures[\"EditEdge\"] = \"editEdge\";\n  GraphFeatures[\"InvisibleScrollbar\"] = \"InvisibleScrollbar\";\n})(GraphFeatures || (GraphFeatures = {}));\n\nconst allFeatures = new Set([GraphFeatures.NodeDraggable, GraphFeatures.NodeResizable, GraphFeatures.ClickNodeToSelect, GraphFeatures.PanCanvas, GraphFeatures.MultipleSelect, GraphFeatures.LassoSelect, GraphFeatures.Delete, GraphFeatures.AddNewNodes, GraphFeatures.AddNewEdges, GraphFeatures.AddNewPorts, GraphFeatures.CanvasHorizontalScrollable, GraphFeatures.CanvasVerticalScrollable, GraphFeatures.NodeHoverView, GraphFeatures.PortHoverView, GraphFeatures.AddEdgesByKeyboard, GraphFeatures.A11yFeatures, GraphFeatures.AutoFit, GraphFeatures.EditNode, GraphFeatures.AutoAlign, GraphFeatures.UndoStack, GraphFeatures.CtrlKeyZoom, GraphFeatures.LimitBoundary, GraphFeatures.EditEdge]);\nconst defaultFeatures = new Set([GraphFeatures.NodeDraggable, GraphFeatures.NodeResizable, GraphFeatures.ClickNodeToSelect, GraphFeatures.PanCanvas, GraphFeatures.MultipleSelect, GraphFeatures.Delete, GraphFeatures.AddNewNodes, GraphFeatures.AddNewEdges, GraphFeatures.AddNewPorts, GraphFeatures.CanvasHorizontalScrollable, GraphFeatures.CanvasVerticalScrollable, GraphFeatures.NodeHoverView, GraphFeatures.PortHoverView, GraphFeatures.AddEdgesByKeyboard, GraphFeatures.A11yFeatures, GraphFeatures.EditNode, GraphFeatures.AutoAlign, GraphFeatures.UndoStack, GraphFeatures.CtrlKeyZoom, GraphFeatures.LimitBoundary]);\nconst dataReadonlyMode = new Set([GraphFeatures.NodeDraggable, GraphFeatures.NodeResizable, GraphFeatures.ClickNodeToSelect, GraphFeatures.PanCanvas, GraphFeatures.MultipleSelect, GraphFeatures.CanvasHorizontalScrollable, GraphFeatures.CanvasVerticalScrollable, GraphFeatures.NodeHoverView, GraphFeatures.PortHoverView, GraphFeatures.A11yFeatures, GraphFeatures.CtrlKeyZoom, GraphFeatures.LimitBoundary]);\nconst GanttChartFeatures = new Set([GraphFeatures.ClickNodeToSelect, GraphFeatures.CanvasHorizontalScrollable, GraphFeatures.CanvasVerticalScrollable, GraphFeatures.NodeHoverView, GraphFeatures.PortHoverView, GraphFeatures.A11yFeatures, GraphFeatures.LassoSelect, GraphFeatures.LimitBoundary]);\nconst previewMode = new Set([GraphFeatures.NodeHoverView, GraphFeatures.PortHoverView, GraphFeatures.AutoFit]);\n\nconst emptyDummyNodes = () => ({\n  dx: 0,\n  dy: 0,\n  dWidth: 0,\n  dHeight: 0,\n  alignedDX: undefined,\n  alignedDY: undefined,\n  nodes: [],\n  isVisible: false\n});\n\nconst is$1 = Object.is;\nclass MapIterator {\n  constructor(upstream, f) {\n    this.upstream = upstream;\n    this.f = f;\n  }\n\n  [Symbol.iterator]() {\n    return this;\n  }\n\n  next() {\n    const next = this.upstream.next();\n\n    if (next.done) {\n      return next;\n    }\n\n    return {\n      done: false,\n      value: this.f(next.value)\n    };\n  }\n\n}\n\n/* eslint-disable no-param-reassign */\nvar NodeType$1;\n\n(function (NodeType) {\n  NodeType[NodeType[\"Bitmap\"] = 0] = \"Bitmap\";\n  NodeType[NodeType[\"Collision\"] = 1] = \"Collision\";\n})(NodeType$1 || (NodeType$1 = {}));\n\nconst HASH_CODE_LENGTH = 30;\nconst BIT_PARTITION_SIZE = 5;\nconst FULL_MASK = 0x3fffffff;\n/**\r\n * @param mask\r\n */\n\nfunction bitPosFrom(mask) {\n  return 1 << mask;\n}\n/**\r\n * @param bitmap\r\n * @param mask\r\n * @param bitPos\r\n */\n\nfunction indexFrom(bitmap, mask, bitPos) {\n  return bitmap === FULL_MASK ? mask : bitCount(bitmap & bitPos - 1);\n}\n/**\r\n * @param hash\r\n * @param shift\r\n */\n\nfunction maskFrom(hash, shift) {\n  return hash >>> shift & 0b11111;\n}\n/**\r\n * https://jsperf.com/hamming-weight/19\r\n *\r\n * @param x uint32\r\n */\n\nfunction bitCount(x) {\n  x |= 0;\n  x -= x >>> 1 & 0x55555555; // put count of each 2 bits into those 2 bits\n\n  x = (x & 0x33333333) + (x >>> 2 & 0x33333333); // put count of each 4 bits into those 4 bits\n\n  x = x + (x >>> 4) & 0x0f0f0f0f; // put count of each 8 bits into those 8 bits\n\n  x += x >>> 8; // put count of each 16 bits into their lowest 8 bits\n\n  x += x >>> 16; // put count of each 32 bits into their lowest 8 bits\n\n  return x & 0x7f;\n} // tslint:enable:no-parameter-reassignment comment-format\n\nclass BitmapIndexedNode {\n  get valueCount() {\n    return this.values.length;\n  }\n\n  get nodeCount() {\n    return this.children.length;\n  }\n\n  constructor(owner, dataMap, nodeMap, keys, values, children, hashes, size) {\n    this.type = NodeType$1.Bitmap;\n    this.owner = owner;\n    this.dataMap = dataMap;\n    this.nodeMap = nodeMap;\n    this.keys = keys;\n    this.values = values;\n    this.children = children;\n    this.hashes = hashes;\n    this.size = size;\n  }\n\n  static empty(owner) {\n    return new BitmapIndexedNode(owner, 0, 0, [], [], [], [], 0);\n  }\n\n  getKey(index) {\n    return this.keys[index];\n  }\n\n  getValue(index) {\n    return this.values[index];\n  }\n\n  getHash(index) {\n    return this.hashes[index];\n  }\n\n  getNode(index) {\n    return this.children[index];\n  }\n\n  contains(key, keyHash, shift) {\n    const mask = maskFrom(keyHash, shift);\n    const bitPos = bitPosFrom(mask);\n    const {\n      dataMap,\n      nodeMap\n    } = this;\n\n    if ((dataMap & bitPos) !== 0) {\n      const index = indexFrom(dataMap, mask, bitPos);\n      const key0 = this.getKey(index);\n      return is$1(key0, key);\n    } else if ((nodeMap & bitPos) !== 0) {\n      const index = indexFrom(nodeMap, mask, bitPos);\n      return this.getNode(index).contains(key, keyHash, shift + BIT_PARTITION_SIZE);\n    }\n\n    return false;\n  }\n\n  get(key, keyHash, shift) {\n    const mask = maskFrom(keyHash, shift);\n    const bitPos = bitPosFrom(mask);\n    const {\n      dataMap,\n      nodeMap\n    } = this;\n\n    if ((dataMap & bitPos) !== 0) {\n      const index = indexFrom(dataMap, mask, bitPos);\n      const key0 = this.getKey(index);\n      return is$1(key0, key) ? this.getValue(index) : undefined;\n    } else if ((nodeMap & bitPos) !== 0) {\n      const index = indexFrom(nodeMap, mask, bitPos);\n      return this.getNode(index).get(key, keyHash, shift + BIT_PARTITION_SIZE);\n    }\n\n    return undefined;\n  }\n\n  insert(owner, key, value, hash, shift) {\n    const mask = maskFrom(hash, shift);\n    const bitPos = bitPosFrom(mask);\n    const {\n      dataMap,\n      nodeMap\n    } = this;\n\n    if ((dataMap & bitPos) !== 0) {\n      const index = indexFrom(dataMap, mask, bitPos);\n      const key0 = this.getKey(index);\n      const value0 = this.getValue(index);\n      const key0Hash = this.getHash(index);\n\n      if (key0Hash === hash && is$1(key0, key)) {\n        return is$1(value0, value) ? this : this.setValue(owner, value, index);\n      } else {\n        const subNodeNew = mergeTwoKeyValPairs(owner, key0, value0, key0Hash, key, value, hash, shift + BIT_PARTITION_SIZE);\n        return this.migrateInlineToNode(owner, bitPos, subNodeNew);\n      }\n    } else if ((nodeMap & bitPos) !== 0) {\n      const index = indexFrom(nodeMap, mask, bitPos);\n      const subNode = this.getNode(index);\n      const subNodeNew = subNode.insert(owner, key, value, hash, shift + BIT_PARTITION_SIZE);\n      return this.setNode(owner, 1, subNodeNew, bitPos);\n    }\n\n    return this.insertValue(owner, bitPos, key, hash, value);\n  }\n\n  update(owner, key, updater, hash, shift) {\n    const mask = maskFrom(hash, shift);\n    const bitPos = bitPosFrom(mask);\n    const {\n      dataMap,\n      nodeMap\n    } = this;\n\n    if ((dataMap & bitPos) !== 0) {\n      const index = indexFrom(dataMap, mask, bitPos);\n      const key0 = this.getKey(index);\n      const key0Hash = this.getHash(index);\n\n      if (key0Hash === hash && is$1(key0, key)) {\n        const value0 = this.getValue(index);\n        const value = updater(value0);\n        return is$1(value0, value) ? this : this.setValue(owner, value, index);\n      }\n    } else if ((nodeMap & bitPos) !== 0) {\n      const index = indexFrom(nodeMap, mask, bitPos);\n      const subNode = this.getNode(index);\n      const subNodeNew = subNode.update(owner, key, updater, hash, shift + BIT_PARTITION_SIZE);\n      return subNodeNew === subNode ? this : this.setNode(owner, 0, subNodeNew, bitPos);\n    }\n\n    return this;\n  }\n\n  remove(owner, key, keyHash, shift) {\n    const mask = maskFrom(keyHash, shift);\n    const bitPos = bitPosFrom(mask);\n\n    if ((this.dataMap & bitPos) !== 0) {\n      const index = indexFrom(this.dataMap, mask, bitPos);\n      const key0 = this.getKey(index);\n\n      if (is$1(key0, key)) {\n        return this.removeValue(owner, bitPos);\n      }\n\n      return undefined;\n    } else if ((this.nodeMap & bitPos) !== 0) {\n      const index = indexFrom(this.nodeMap, mask, bitPos);\n      const subNode = this.getNode(index);\n      const remove = subNode.remove(owner, key, keyHash, shift + BIT_PARTITION_SIZE);\n\n      if (remove === undefined) {\n        return undefined;\n      }\n\n      const [subNodeNew, removedValue] = remove;\n      const subNodeNewSize = subNodeNew.size;\n\n      if (subNodeNewSize === 1) {\n        if (this.size === subNode.size) {\n          return [new BitmapIndexedNode(owner, bitPos, 0, [subNodeNew.getKey(0)], [subNodeNew.getValue(0)], [], [subNodeNew.getHash(0)], 1), removedValue];\n        }\n\n        return [this.migrateNodeToInline(owner, bitPos, subNodeNew), removedValue];\n      }\n\n      return [this.setNode(owner, -1, subNodeNew, bitPos), removedValue];\n    }\n\n    return undefined;\n  }\n\n  toOwned(owner) {\n    return this.owner === owner ? this : new BitmapIndexedNode(owner, this.dataMap, this.nodeMap, this.keys.slice(), this.values.slice(), this.children.slice(), this.hashes.slice(), this.size);\n  }\n\n  iter() {\n    return new BitmapIndexedNodeIterator(this);\n  }\n\n  map(owner, f) {\n    const valueCount = this.valueCount;\n    const keys = [];\n    const values = [];\n    const children = [];\n    let same = true;\n\n    for (let i = 0; i < valueCount; i += 1) {\n      const key = this.getKey(i);\n      const value0 = this.getValue(i);\n      const value = f(value0, key);\n      same = same && is$1(value0, value);\n      keys.push(key);\n      values.push(value);\n    }\n\n    for (let i = 0; i < this.children.length; i += 1) {\n      const node0 = this.getNode(i);\n      const node = node0.map(owner, f);\n      same = same && node === node0;\n      children.push(node);\n    }\n\n    return same ? this : new BitmapIndexedNode(owner, this.dataMap, this.nodeMap, keys, values, children, this.hashes, this.size);\n  }\n\n  forEach(f) {\n    for (let i = 0; i < this.values.length; i += 1) {\n      const key = this.getKey(i);\n      const value = this.getValue(i);\n      f(value, key);\n    }\n\n    for (let i = 0; i < this.children.length; i += 1) {\n      const child = this.getNode(i);\n      child.forEach(f);\n    }\n  }\n\n  find(predicate) {\n    for (let i = 0; i < this.values.length; i += 1) {\n      const value = this.getValue(i);\n\n      if (predicate(value)) {\n        return value;\n      }\n    }\n\n    for (let i = 0; i < this.children.length; i += 1) {\n      const child = this.getNode(i);\n      const found = child.find(predicate);\n\n      if (found) {\n        return found;\n      }\n    }\n\n    return undefined;\n  }\n\n  dataIndex(bitPos) {\n    return bitCount(this.dataMap & bitPos - 1);\n  }\n\n  nodeIndex(bitPos) {\n    return bitCount(this.nodeMap & bitPos - 1);\n  }\n\n  setValue(owner, value, index) {\n    const next = this.toOwned(owner);\n    next.values[index] = value;\n    return next;\n  }\n\n  insertValue(owner, bitPos, key, originalHash, value) {\n    const index = this.dataIndex(bitPos);\n    const next = this.toOwned(owner);\n    next.size += 1;\n    next.dataMap |= bitPos;\n    next.keys.splice(index, 0, key);\n    next.values.splice(index, 0, value);\n    next.hashes.splice(index, 0, originalHash);\n    return next;\n  }\n\n  migrateInlineToNode(owner, bitPos, child) {\n    const indexOld = this.dataIndex(bitPos);\n    const indexNew = this.nodeIndex(bitPos);\n    const next = this.toOwned(owner);\n    next.dataMap ^= bitPos;\n    next.nodeMap |= bitPos;\n    next.keys.splice(indexOld, 1);\n    next.values.splice(indexOld, 1);\n    next.children.splice(indexNew, 0, child);\n    next.hashes.splice(indexOld, 1);\n    next.size += 1;\n    return next;\n  }\n\n  migrateNodeToInline(owner, bitPos, node) {\n    const indexOld = this.nodeIndex(bitPos);\n    const indexNew = this.dataIndex(bitPos);\n    const key = node.getKey(0);\n    const value = node.getValue(0);\n    const hash = node.getHash(0);\n    const next = this.toOwned(owner);\n    next.dataMap = next.dataMap | bitPos;\n    next.nodeMap = next.nodeMap ^ bitPos;\n    next.children.splice(indexOld, 1);\n    next.keys.splice(indexNew, 0, key);\n    next.values.splice(indexNew, 0, value);\n    next.size -= 1;\n    next.hashes.splice(indexNew, 0, hash);\n    return next;\n  }\n\n  setNode(owner, sizeDelta, newNode, bitPos) {\n    const index = this.nodeIndex(bitPos);\n    const next = this.toOwned(owner);\n    next.children[index] = newNode;\n    next.size = next.size + sizeDelta;\n    return next;\n  }\n\n  removeValue(owner, bitPos) {\n    const index = this.dataIndex(bitPos);\n    const value = this.getValue(index);\n    const next = this.toOwned(owner);\n    next.dataMap ^= bitPos;\n    next.keys.splice(index, 1);\n    next.values.splice(index, 1);\n    next.hashes.splice(index, 1);\n    next.size -= 1;\n    return [next, value];\n  }\n\n}\n/**\r\n * @param owner\r\n * @param key0\r\n * @param value0\r\n * @param keyHash0\r\n * @param key1\r\n * @param value1\r\n * @param keyHash1\r\n * @param shift\r\n */\n\nfunction mergeTwoKeyValPairs(owner, key0, value0, keyHash0, key1, value1, keyHash1, shift) {\n  if (shift >= HASH_CODE_LENGTH) {\n    return new HashCollisionNode(owner, keyHash0, [key0, key1], [value0, value1]);\n  } else {\n    const mask0 = maskFrom(keyHash0, shift);\n    const mask1 = maskFrom(keyHash1, shift);\n\n    if (mask0 !== mask1) {\n      const dataMap = bitPosFrom(mask0) | bitPosFrom(mask1);\n\n      if (mask0 < mask1) {\n        return new BitmapIndexedNode(owner, dataMap, 0, [key0, key1], [value0, value1], [], [keyHash0, keyHash1], 2);\n      }\n\n      return new BitmapIndexedNode(owner, dataMap, 0, [key1, key0], [value1, value0], [], [keyHash1, keyHash0], 2);\n    } else {\n      const nodeMap = bitPosFrom(mask0);\n      const node = mergeTwoKeyValPairs(owner, key0, value0, keyHash0, key1, value1, keyHash1, shift + BIT_PARTITION_SIZE);\n      return new BitmapIndexedNode(owner, 0, nodeMap, [], [], [node], [], node.size);\n    }\n  }\n}\n\nclass HashCollisionNode {\n  get size() {\n    return this.keys.length;\n  }\n\n  constructor(owner, hash, keys, values) {\n    this.type = NodeType$1.Collision;\n    this.owner = owner;\n    this.hash = hash;\n    this.keys = keys;\n    this.values = values;\n  }\n\n  toOwned(owner) {\n    return this.owner === owner ? this : new HashCollisionNode(owner, this.hash, this.keys.slice(), this.values.slice());\n  }\n\n  contains(key) {\n    return this.keys.includes(key);\n  }\n\n  get(key) {\n    const index = this.keys.findIndex(it => is$1(it, key));\n    return index >= 0 ? this.values[index] : undefined;\n  }\n\n  insert(owner, key, value) {\n    const index = this.keys.findIndex(it => is$1(it, key));\n\n    if (index >= 0) {\n      const value0 = this.values[index];\n\n      if (is$1(value0, value)) {\n        return this;\n      }\n\n      const next = this.toOwned(owner);\n      next.values[index] = value;\n      return next;\n    } else {\n      const next = this.toOwned(owner);\n      next.keys.push(key);\n      next.values.push(value);\n      return next;\n    }\n  }\n\n  update(owner, key, updater) {\n    const index = this.keys.findIndex(it => is$1(it, key));\n\n    if (index >= 0) {\n      const value0 = this.values[index];\n      const value = updater(value0);\n\n      if (is$1(value0, value)) {\n        return this;\n      }\n\n      const next = this.toOwned(owner);\n      next.values[index] = value;\n      return next;\n    }\n\n    return this;\n  }\n\n  remove(owner, key) {\n    const index = this.keys.findIndex(it => is$1(it, key));\n\n    if (index === -1) {\n      return undefined;\n    }\n\n    const value = this.getValue(index);\n    return [new HashCollisionNode(owner, this.hash, this.keys.filter((_, i) => i !== index), this.values.filter((_, i) => i !== index)), value];\n  }\n\n  getKey(index) {\n    return this.keys[index];\n  }\n\n  getValue(index) {\n    return this.values[index];\n  }\n\n  getHash() {\n    return this.hash;\n  }\n\n  iter() {\n    return new HashCollisionNodeIterator(this);\n  }\n\n  map(owner, f) {\n    const len = this.size;\n    const values = [];\n    let update = false;\n\n    for (let i = 0; i < len; i += 1) {\n      const key = this.getKey(i);\n      const value0 = this.getValue(i);\n      const value = f(value0, key);\n      values.push(value);\n      update = is$1(value0, value);\n    }\n\n    return update ? new HashCollisionNode(owner, this.hash, this.keys, values) : this;\n  }\n\n  forEach(f) {\n    const len = this.size;\n\n    for (let i = 0; i < len; i += 1) {\n      const key = this.getKey(i);\n      const value0 = this.getValue(i);\n      f(value0, key);\n    }\n  }\n\n  find(predicate) {\n    return this.values.find(predicate);\n  }\n\n}\nclass BitmapIndexedNodeIterator {\n  constructor(node) {\n    this.index = 0;\n    this.delegate = null;\n    this.done = false;\n    this.node = node;\n    this.valueCount = node.valueCount;\n    this.nodeCount = node.nodeCount;\n    this.size = this.valueCount + this.nodeCount;\n  }\n\n  [Symbol.iterator]() {\n    return this.clone();\n  }\n\n  next() {\n    if (this.done) {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n\n    if (this.index < this.valueCount) {\n      const key = this.node.getKey(this.index);\n      const value = this.node.getValue(this.index);\n      this.index += 1;\n      return {\n        done: false,\n        value: [key, value]\n      };\n    }\n\n    if (this.index < this.size) {\n      if (this.delegate === null) {\n        this.delegate = this.node.getNode(this.index - this.valueCount).iter();\n      }\n\n      const next = this.delegate.next();\n\n      if (next.done) {\n        this.index += 1;\n        this.delegate = null;\n        return this.next();\n      }\n\n      return next;\n    }\n\n    this.done = true;\n    return {\n      done: true,\n      value: undefined\n    };\n  }\n\n  clone() {\n    const iter = new BitmapIndexedNodeIterator(this.node);\n    iter.index = this.index;\n    iter.delegate = this.delegate;\n    iter.done = this.done;\n    return iter;\n  }\n\n}\nclass HashCollisionNodeIterator {\n  constructor(node) {\n    this.index = 0;\n    this.node = node;\n  }\n\n  [Symbol.iterator]() {\n    return this.clone();\n  }\n\n  next() {\n    if (this.index >= this.node.size) {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n\n    const key = this.node.getKey(this.index);\n    const value = this.node.getValue(this.index);\n    this.index += 1;\n    return {\n      done: false,\n      value: [key, value]\n    };\n  }\n\n  clone() {\n    const iter = new HashCollisionNodeIterator(this.node);\n    iter.index = this.index;\n    return iter;\n  }\n\n}\n\n/* eslint-disable no-plusplus */\n\n/**\r\n * keep the hash function the same as immutable.js\r\n *\r\n * @param o\r\n */\nfunction hashing(o) {\n  if (o === null) {\n    return 0x42108422;\n  }\n\n  switch (typeof o) {\n    case \"boolean\":\n      // The hash values for built-in constants are a 1 value for each 5-byte\n      // shift region expect for the first, which encodes the value. This\n      // reduces the odds of a hash collision for these common values.\n      return o ? 0x32108421 : 0x32108420;\n\n    case \"number\":\n      return hashNumber(o);\n\n    case \"string\":\n      return hashString(o);\n\n    case \"object\":\n    case \"function\":\n    case \"symbol\":\n      throw new Error(\"Using object, function and symbol as hash map key is not supported\");\n\n    case \"undefined\":\n      return 0x32108423;\n\n    default:\n      return hashString(String(o));\n  }\n} // http://jsperf.com/hashing-strings\n\n/**\r\n * @param str\r\n */\n\nfunction hashString(str) {\n  // This is the hash from JVM\n  // The hash code for a string is computed as\n  // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n  // where s[i] is the ith character of the string and n is the length of\n  // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n  // (exclusive) by dropping high bits.\n  let hashed = 0;\n\n  for (let ii = 0; ii < str.length; ii++) {\n    hashed = hashed * 31 + str.charCodeAt(ii) | 0;\n  }\n\n  return smi(hashed);\n}\n/**\r\n * @param n\r\n */\n\n\nfunction hashNumber(n) {\n  if (!isFinite(n)) {\n    return 0;\n  }\n\n  let hash = n | 0;\n\n  if (hash !== n) {\n    hash ^= n * 0xffffffff;\n  }\n\n  while (n > 0xffffffff) {\n    // eslint-disable-next-line no-param-reassign\n    n /= 0xffffffff;\n    hash ^= n;\n  }\n\n  return smi(hash);\n}\n/**\r\n * retain 30 bits of number\r\n *\r\n * @param value\r\n */\n\n\nfunction smi(value) {\n  return value & 0x3fffffff;\n}\n\nclass Uid {\n  constructor() {\n    this.id = 0;\n  }\n\n  take() {\n    this.id += 1;\n    return this.id;\n  }\n\n  peek() {\n    return this.id + 1;\n  }\n\n}\n\n/* eslint-disable max-classes-per-file */\nconst uid$1 = new Uid();\nclass HashMap {\n  get size() {\n    return this.root.size;\n  }\n  /**\r\n   * @param root\r\n   * @internal\r\n   */\n\n\n  constructor(root) {\n    this.id = uid$1.take();\n    this.root = root;\n  }\n\n  static empty() {\n    return HashMapBuilder.empty().finish();\n  }\n\n  static from(iterable) {\n    return HashMapBuilder.from(iterable).finish();\n  }\n\n  get(key) {\n    const h = hashing(key);\n    return this.root.get(key, h, 0);\n  }\n\n  has(key) {\n    const h = hashing(key);\n    return this.root.contains(key, h, 0);\n  }\n\n  set(key, value) {\n    return this.withRoot(this.root.insert(uid$1.peek(), key, value, hashing(key), 0));\n  }\n\n  update(key, updater) {\n    return this.withRoot(this.root.update(uid$1.peek(), key, updater, hashing(key), 0));\n  }\n\n  delete(key) {\n    const h = hashing(key);\n    const id = uid$1.peek();\n    const remove = this.root.remove(id, key, h, 0);\n    return remove === undefined ? this : new HashMap(remove[0]);\n  }\n\n  clone() {\n    return new HashMap(this.root);\n  }\n\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  entries() {\n    return this.root.iter();\n  }\n\n  values() {\n    return new MapIterator(this.entries(), ([, v]) => v);\n  }\n\n  mutate() {\n    return new HashMapBuilder(this.root);\n  }\n\n  map(f) {\n    return new HashMap(this.root.map(uid$1.peek(), f));\n  }\n\n  filter(predicate) {\n    const map = this.mutate();\n    this.forEach((value, key) => {\n      if (!predicate(value, key)) {\n        map.delete(key);\n      }\n    });\n    return map.finish();\n  }\n\n  forEach(f) {\n    this.root.forEach(f);\n  }\n\n  find(predicate) {\n    return this.root.find(predicate);\n  }\n\n  withRoot(newRoot) {\n    return newRoot === this.root ? this : new HashMap(newRoot);\n  }\n\n}\nclass HashMapBuilder {\n  /**\r\n   * @param root\r\n   * @internal\r\n   */\n  constructor(root) {\n    this.id = uid$1.take();\n    this.root = root;\n  }\n\n  static empty() {\n    const id = uid$1.peek();\n    const root = BitmapIndexedNode.empty(id);\n    return new HashMapBuilder(root);\n  }\n\n  static from(iterable) {\n    if (Array.isArray(iterable)) {\n      return HashMapBuilder.fromArray(iterable);\n    }\n\n    const iter = iterable[Symbol.iterator]();\n    const builder = HashMapBuilder.empty();\n    let next = iter.next();\n\n    while (!next.done) {\n      const [key, value] = next.value;\n      builder.set(key, value);\n      next = iter.next();\n    }\n\n    return builder;\n  }\n\n  static fromArray(list) {\n    const builder = HashMapBuilder.empty(); // eslint-disable-next-line @typescript-eslint/prefer-for-of\n\n    for (let i = 0; i < list.length; i += 1) {\n      const [key, value] = list[i];\n      builder.set(key, value);\n    }\n\n    return builder;\n  }\n\n  get(key) {\n    const h = hashing(key);\n    return this.root.get(key, h, 0);\n  }\n\n  has(key) {\n    const h = hashing(key);\n    return this.root.contains(key, h, 0);\n  }\n\n  set(key, value) {\n    this.root = this.root.insert(this.id, key, value, hashing(key), 0);\n    return this;\n  }\n\n  update(key, updater) {\n    const h = hashing(key);\n    this.root = this.root.update(this.id, key, updater, h, 0);\n    return this;\n  }\n\n  delete(key) {\n    const h = hashing(key);\n    const remove = this.root.remove(this.id, key, h, 0);\n\n    if (remove !== undefined) {\n      this.root = remove[0];\n    }\n\n    return this;\n  }\n\n  finish() {\n    return new HashMap(this.root);\n  }\n\n}\n\nvar NodeType;\n\n(function (NodeType) {\n  NodeType[NodeType[\"Internal\"] = 0] = \"Internal\";\n  NodeType[NodeType[\"Leaf\"] = 1] = \"Leaf\";\n})(NodeType || (NodeType = {}));\n\nconst MAX_SIZE = 31;\nconst MIN_SIZE = 15;\nconst HALF_NODE_SPLIT = 7;\n/**\r\n * @param list\r\n * @param key\r\n */\n\nfunction binaryFind(list, key) {\n  let start = 0;\n  let end = list.length; // eslint-disable-next-line no-constant-condition\n\n  while (true) {\n    if (start + 1 === end) {\n      return list[start] >= key ? start : end;\n    }\n\n    const mid = start + end >>> 1;\n\n    if (list[mid] === key) {\n      return mid;\n    }\n\n    if (key < list[mid]) {\n      end = mid;\n    } else {\n      start = mid;\n    }\n  }\n}\nclass InternalNode {\n  get selfSize() {\n    return this.keys.length;\n  }\n\n  constructor(owner, keys, values, children, size) {\n    this.type = NodeType.Internal;\n    this.owner = owner;\n    this.keys = keys;\n    this.values = values;\n    this.children = children;\n    this.size = size;\n  }\n\n  iter() {\n    return new BTreeIterator(this);\n  }\n\n  toOwned(owner) {\n    return this.owner === owner ? this : new InternalNode(owner, this.keys.slice(), this.values.slice(), this.children.slice(), this.size);\n  }\n\n  getKey(index) {\n    return this.keys[index];\n  }\n\n  getValue(index) {\n    return this.values[index];\n  }\n\n  getChild(index) {\n    return this.children[index];\n  }\n\n  get(key) {\n    const size = this.selfSize;\n    const index = binaryFind(this.keys, key);\n\n    if (index !== size) {\n      const key0 = this.getKey(index);\n\n      if (key0 === key) {\n        return this.getValue(index);\n      }\n    }\n\n    return this.getChild(index).get(key);\n  }\n\n  contains(key) {\n    const size = this.selfSize;\n    const index = binaryFind(this.keys, key);\n\n    if (index !== size) {\n      const key0 = this.getKey(index);\n\n      if (key0 === key) {\n        return true;\n      }\n    }\n\n    return this.getChild(index).contains(key);\n  }\n\n  insert(owner, key, value) {\n    const size = this.selfSize;\n    const index = binaryFind(this.keys, key);\n    const key0 = this.getKey(index);\n    const value0 = this.getValue(index);\n\n    if (key0 === key) {\n      if (is$1(value0, value)) {\n        return [this];\n      }\n\n      const next = this.toOwned(owner);\n      next.values[index] = value;\n      return [next];\n    } else {\n      const child0 = this.getChild(index);\n      const insert = child0.insert(owner, key, value);\n\n      if (insert.length === 1) {\n        const child = insert[0];\n\n        if (child === child0) {\n          return [this];\n        }\n\n        const next = this.toOwned(owner);\n        next.children[index] = child;\n        return [next];\n      } else if (size === MAX_SIZE) {\n        return this.updateWithSplit(owner, insert[0], insert[1], insert[2], insert[3], index);\n      } else {\n        const next = this.toOwned(owner);\n        next.keys.splice(index, 0, insert[2]);\n        next.values.splice(index, 0, insert[3]);\n        next.children.splice(index, 1, insert[0], insert[1]);\n        next.size += 1;\n        return [next];\n      }\n    }\n  }\n\n  update(owner, key, updater) {\n    const index = binaryFind(this.keys, key);\n    const key0 = this.getKey(index);\n    const value0 = this.getValue(index);\n\n    if (key0 === key) {\n      const value = updater(value0);\n\n      if (is$1(value0, value)) {\n        return this;\n      }\n\n      const next = this.toOwned(owner);\n      next.values[index] = value;\n      return next;\n    } else {\n      const child0 = this.getChild(index);\n      const child = child0.update(owner, key, updater);\n\n      if (child === child0) {\n        return this;\n      }\n\n      const next = this.toOwned(owner);\n      next.children[index] = child;\n      return next;\n    }\n  }\n\n  remove(owner, key) {\n    const index = binaryFind(this.keys, key);\n    const size = this.selfSize;\n    const child0 = this.getChild(index);\n    const originalSize = child0.size;\n    const key0 = this.getKey(index);\n\n    if (key0 === key) {\n      const [removedKey, value, child] = child0.removeMostRight(owner);\n      const next = this.toOwned(owner);\n      next.size -= 1;\n      next.keys[index] = removedKey;\n      next.values[index] = value;\n      next.children[index] = child;\n      return next.balanceChild(owner, child, removedKey, value, index);\n    } else {\n      const child = child0.remove(owner, key);\n\n      if (child.size === originalSize) {\n        return this;\n      }\n\n      const next = this.toOwned(owner);\n      next.size -= 1;\n      next.children[index] = child;\n\n      if (child.selfSize >= MIN_SIZE) {\n        return next;\n      }\n\n      if (index === size) {\n        next.balanceTail(child);\n        return next;\n      }\n\n      const value0 = this.getValue(index);\n      return next.balanceChild(owner, child, key0, value0, index);\n    }\n  }\n\n  removeMostRight(owner) {\n    const size = this.selfSize;\n    const [key, value, child] = this.getChild(size).removeMostRight(owner);\n    const next = this.toOwned(owner);\n    next.size -= 1;\n    next.children[size] = child;\n\n    if (child.selfSize < MIN_SIZE) {\n      next.balanceTail(child);\n    }\n\n    return [key, value, next];\n  }\n\n  map(owner, f) {\n    const values = [];\n    const children = [];\n    let same = true;\n\n    for (let i = 0; i < this.keys.length; i += 1) {\n      const key = this.getKey(i);\n      const value0 = this.getValue(i);\n      const value = f(value0, key);\n      values.push(value);\n      same = same && is$1(value0, value);\n    }\n\n    for (let i = 0; i < this.children.length; i += 1) {\n      const child0 = this.getChild(i);\n      const child = child0.map(owner, f);\n      children.push(child);\n      same = same && child0 === child;\n    }\n\n    return same ? this : new InternalNode(owner, this.keys, values, children, this.size);\n  }\n\n  forEach(f) {\n    for (let i = 0; i < this.keys.length; i += 1) {\n      const key = this.getKey(i);\n      const value = this.getValue(i);\n      f(value, key);\n    }\n\n    for (let i = 0; i < this.children.length; i += 1) {\n      const child = this.getChild(i);\n      child.forEach(f);\n    }\n  }\n\n  find(predicate) {\n    for (let i = 0; i < this.keys.length; i += 1) {\n      const value = this.getValue(i);\n\n      if (predicate(value)) {\n        return value;\n      }\n    }\n\n    for (let i = 0; i < this.children.length; i += 1) {\n      const child = this.getChild(i);\n      const found = child.find(predicate);\n\n      if (found) {\n        return found;\n      }\n    }\n\n    return undefined;\n  }\n\n  balanceChild(owner, child, key0, value0, index) {\n    if (index === 0) {\n      this.balanceHead(child);\n      return this;\n    }\n\n    const isChildInternal = child.type === NodeType.Internal;\n    const left0 = this.getChild(index - 1);\n    const right0 = this.getChild(index + 1);\n\n    if (left0.selfSize > MIN_SIZE) {\n      this.rotateRight(child, left0, index, isChildInternal);\n    } else if (right0.selfSize > MIN_SIZE) {\n      this.rotateLeft(child, right0, index, isChildInternal);\n    } else {\n      const left = left0.toOwned(owner);\n      const right = right0.toOwned(owner);\n      const key = child.getKey(HALF_NODE_SPLIT);\n      const value = child.getValue(HALF_NODE_SPLIT);\n      left.keys.push(this.getKey(index - 1));\n      left.values.push(this.getValue(index - 1));\n      left.keys.push(...child.keys.slice(0, HALF_NODE_SPLIT));\n      left.values.push(...child.values.slice(0, HALF_NODE_SPLIT));\n      right.keys.unshift(key0);\n      right.values.unshift(value0);\n      right.keys.unshift(...child.keys.slice(HALF_NODE_SPLIT + 1, MIN_SIZE));\n      right.values.unshift(...child.values.slice(HALF_NODE_SPLIT + 1, MIN_SIZE));\n      this.keys.splice(index - 1, 2, key);\n      this.values.splice(index - 1, 2, value);\n      this.children.splice(index - 1, 3, left, right);\n\n      if (isChildInternal) {\n        left.children.push(...child.children.slice(0, HALF_NODE_SPLIT + 1));\n        right.children.unshift(...child.children.slice(HALF_NODE_SPLIT + 1, MIN_SIZE + 1));\n        left.updateSize();\n        right.updateSize();\n      }\n    }\n\n    return this;\n  }\n\n  rotateLeft(child, right0, index, isChildInternal) {\n    const right = right0.toOwned(this.owner);\n    const newKey = right.keys.shift();\n    const newValue = right.values.shift();\n    const key0 = this.getKey(index);\n    const value0 = this.getValue(index);\n    child.keys.push(key0);\n    child.values.push(value0);\n    this.keys[index] = newKey;\n    this.values[index] = newValue;\n    this.children[index + 1] = right;\n\n    if (isChildInternal) {\n      const grandChild = right.children.shift();\n      child.children.push(grandChild);\n      const delta = grandChild.size + 1;\n      child.size += delta;\n      right.size -= delta;\n    }\n  }\n\n  rotateRight(child, left0, index, isChildInternal) {\n    const left = left0.toOwned(this.owner);\n    const newKey = left.keys.pop();\n    const newValue = left.values.pop();\n    const key0 = this.getKey(index - 1);\n    const value0 = this.getValue(index - 1);\n    child.keys.unshift(key0);\n    child.values.unshift(value0);\n    this.keys[index - 1] = newKey;\n    this.values[index - 1] = newValue;\n    this.children[index - 1] = left;\n\n    if (isChildInternal) {\n      const grandChild = left.children.pop();\n      child.children.unshift(grandChild);\n      const delta = grandChild.size + 1;\n      child.size += delta;\n      left.size -= delta;\n    }\n  }\n\n  balanceTail(child) {\n    const index = this.selfSize;\n    const left0 = this.getChild(index - 1);\n    const isChildInternal = child.type === NodeType.Internal;\n\n    if (left0.selfSize === MIN_SIZE) {\n      child.keys.unshift(this.getKey(index - 1));\n      child.values.unshift(this.getValue(index - 1));\n      child.keys.unshift(...left0.keys);\n      child.values.unshift(...left0.values);\n      this.keys.splice(index - 1, 1);\n      this.values.splice(index - 1, 1);\n      this.children.splice(index - 1, 1);\n\n      if (isChildInternal) {\n        child.children.unshift(...left0.children); // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n\n        child.size += left0.size + 1;\n      }\n    } else {\n      this.rotateRight(child, left0, index, isChildInternal);\n    }\n  }\n\n  balanceHead(child) {\n    const right0 = this.getChild(1);\n    const isChildInternal = child.type === NodeType.Internal;\n\n    if (right0.selfSize === MIN_SIZE) {\n      child.keys.push(this.getKey(0));\n      child.values.push(this.getValue(0));\n      child.keys.push(...right0.keys);\n      child.values.push(...right0.values);\n      this.keys.splice(0, 1);\n      this.values.splice(0, 1);\n      this.children.splice(1, 1);\n\n      if (isChildInternal) {\n        child.children.push(...right0.children); // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n\n        child.size += right0.size + 1;\n      }\n    } else {\n      this.rotateLeft(child, right0, 0, isChildInternal);\n    }\n  }\n\n  updateWithSplit(owner, child1, child2, key, value, index) {\n    const next1 = this.toOwned(owner);\n    next1.keys.splice(index, 0, key);\n    next1.values.splice(index, 0, value);\n    next1.children.splice(index, 1, child1, child2);\n    const next2 = new InternalNode(owner, next1.keys.splice(16, 16), next1.values.splice(16, 16), next1.children.splice(16, 17), 0);\n    const nextKey = next1.keys.pop();\n    const nextValue = next1.values.pop();\n    next1.updateSize();\n    next2.updateSize();\n    return [next1, next2, nextKey, nextValue];\n  }\n\n  updateSize() {\n    let sum = this.selfSize;\n    const len = this.children.length;\n\n    for (let i = 0; i < len; i += 1) {\n      sum += this.children[i].size;\n    }\n\n    this.size = sum;\n  }\n\n}\nclass LeafNode {\n  get size() {\n    return this.keys.length;\n  }\n\n  get selfSize() {\n    return this.size;\n  }\n\n  constructor(owner, keys, values) {\n    this.type = NodeType.Leaf;\n    this.owner = owner;\n    this.keys = keys;\n    this.values = values;\n  }\n\n  toOwned(owner) {\n    return this.owner === owner ? this : new LeafNode(owner, this.keys.slice(), this.values.slice());\n  }\n\n  getKey(index) {\n    return this.keys[index];\n  }\n\n  getValue(index) {\n    return this.values[index];\n  }\n\n  get(key) {\n    const size = this.selfSize;\n    const index = binaryFind(this.keys, key);\n\n    if (index !== size) {\n      const key0 = this.getKey(index);\n      return key0 === key ? this.getValue(index) : undefined;\n    }\n\n    return undefined;\n  }\n\n  contains(key) {\n    const size = this.selfSize;\n    const index = binaryFind(this.keys, key);\n\n    if (index !== size) {\n      const key0 = this.getKey(index);\n      return key0 === key;\n    }\n\n    return false;\n  }\n\n  insert(owner, key, value) {\n    const size = this.selfSize;\n    const index = binaryFind(this.keys, key);\n    const key0 = index === size ? undefined : this.getKey(index);\n\n    if (key0 === key) {\n      const value0 = this.getValue(index);\n\n      if (is$1(value, value0)) {\n        return [this];\n      }\n\n      const next = this.toOwned(owner);\n      next.values[index] = value;\n      return [next];\n    } else {\n      if (size === MAX_SIZE) {\n        return this.updateWithSplit(owner, key, value, index);\n      }\n\n      const next = this.toOwned(owner);\n      next.keys.splice(index, 0, key);\n      next.values.splice(index, 0, value);\n      return [next];\n    }\n  }\n\n  update(owner, key, updater) {\n    const size = this.selfSize;\n    const index = binaryFind(this.keys, key);\n    const key0 = index === size ? undefined : this.getKey(index);\n\n    if (key0 === key) {\n      const value0 = this.getValue(index);\n      const value = updater(value0);\n\n      if (is$1(value, value0)) {\n        return this;\n      }\n\n      const next = this.toOwned(owner);\n      next.values[index] = value;\n      return next;\n    }\n\n    return this;\n  }\n\n  remove(owner, key) {\n    const index = binaryFind(this.keys, key);\n    const size = this.selfSize;\n\n    if (index === size) {\n      return this;\n    }\n\n    return this.removeIndex(owner, index);\n  }\n\n  removeMostRight(owner) {\n    const index = this.selfSize - 1;\n    const key = this.getKey(index);\n    const value = this.getValue(index);\n    const next = this.removeIndex(owner, index);\n    return [key, value, next];\n  }\n\n  map(owner, f) {\n    const values = [];\n    let same = true;\n\n    for (let i = 0; i < this.keys.length; i += 1) {\n      const key = this.getKey(i);\n      const value0 = this.getValue(i);\n      const value = f(value0, key);\n      values.push(value);\n      same = same && is$1(value0, value);\n    }\n\n    return same ? this : new LeafNode(owner, this.keys, values);\n  }\n\n  forEach(f) {\n    for (let i = 0; i < this.keys.length; i += 1) {\n      const key = this.getKey(i);\n      const value = this.getValue(i);\n      f(value, key);\n    }\n  }\n\n  find(predicate) {\n    return this.values.find(predicate);\n  }\n\n  updateWithSplit(owner, key, value, index) {\n    const next1 = this.toOwned(owner);\n    next1.keys.splice(index, 0, key);\n    next1.values.splice(index, 0, value);\n    const next2 = new LeafNode(owner, next1.keys.splice(16, 16), next1.values.splice(16, 16));\n    const nextKey = next1.keys.pop();\n    const nextValue = next1.values.pop();\n    return [next1, next2, nextKey, nextValue];\n  }\n\n  removeIndex(owner, index) {\n    const next = this.toOwned(owner);\n    next.keys.splice(index, 1);\n    next.values.splice(index, 1);\n    return next;\n  }\n\n}\n/**\r\n * @param owner\r\n */\n\nfunction emptyRoot(owner) {\n  return new LeafNode(owner, [], []);\n}\n/**\r\n * @param owner\r\n * @param root\r\n * @param key\r\n * @param value\r\n */\n\nfunction rootInsert(owner, root, key, value) {\n  if (root.selfSize === 0) {\n    return new LeafNode(owner, [key], [value]);\n  }\n\n  const insert = root.insert(owner, key, value);\n\n  if (insert.length === 1) {\n    return insert[0];\n  }\n\n  const [next1, next2, newKey, newValue] = insert;\n  return new InternalNode(owner, [newKey], [newValue], [next1, next2], next1.size + next2.size + 1);\n}\n/**\r\n * @param owner\r\n * @param root\r\n * @param key\r\n */\n\nfunction rootRemove(owner, root, key) {\n  const newRoot = root.remove(owner, key);\n\n  if (newRoot.type === NodeType.Internal && newRoot.selfSize === 0) {\n    return newRoot.getChild(0);\n  }\n\n  return newRoot;\n}\nclass BTreeIterator {\n  constructor(node) {\n    this.delegate = null;\n    this.index = 0;\n    this.done = false;\n    this.node = node;\n    this.setDelegate(this.index);\n  }\n\n  [Symbol.iterator]() {\n    return this.clone();\n  }\n\n  next() {\n    if (this.delegate === null) {\n      return this.yieldValue();\n    }\n\n    const next = this.delegate.next();\n\n    if (!next.done) {\n      return {\n        done: false,\n        value: next.value\n      };\n    }\n\n    const y = this.yieldValue();\n\n    if (this.index <= this.node.selfSize) {\n      this.setDelegate(this.index);\n    } else {\n      this.done = true;\n      this.delegate = null;\n    }\n\n    return y;\n  }\n\n  clone() {\n    const iter = new BTreeIterator(this.node);\n    iter.delegate = this.delegate;\n    iter.index = this.index;\n    iter.done = this.done;\n    return iter;\n  }\n\n  setDelegate(index) {\n    if (this.node.type !== NodeType.Internal) {\n      return;\n    }\n\n    const child = this.node.getChild(index);\n    this.delegate = new BTreeIterator(child);\n  }\n\n  yieldValue() {\n    if (!this.done && this.index < this.node.selfSize) {\n      const key = this.node.getKey(this.index);\n      const value = this.node.getValue(this.index);\n      this.index += 1;\n      return {\n        done: false,\n        value: [key, value]\n      };\n    }\n\n    this.done = true;\n    return {\n      done: true,\n      value: undefined\n    };\n  }\n\n}\n\n/* eslint-disable max-classes-per-file */\nnew Uid();\n\n/* eslint-disable max-classes-per-file */\nconst uid = new Uid();\n/**\r\n * preserve insertion order\r\n */\n\nclass OrderedMap {\n  get size() {\n    return this.hashRoot.size;\n  }\n  /**\r\n   * @param itemId\r\n   * @param hashRoot\r\n   * @param sortedRoot\r\n   * @param itemId\r\n   * @param hashRoot\r\n   * @param sortedRoot\r\n   * @param itemId\r\n   * @param hashRoot\r\n   * @param sortedRoot\r\n   * @internal\r\n   */\n\n\n  constructor(itemId, hashRoot, sortedRoot) {\n    this.id = uid.take();\n    this.itemId = itemId;\n    this.hashRoot = hashRoot;\n    this.sortedRoot = sortedRoot;\n  }\n\n  static empty() {\n    return OrderedMapBuilder.empty().finish();\n  }\n\n  static from(iterable) {\n    return OrderedMapBuilder.from(iterable).finish();\n  }\n\n  delete(key) {\n    const tempId = uid.peek();\n    const h = hashing(key);\n    const remove = this.hashRoot.remove(tempId, key, h, 0);\n\n    if (remove === undefined) {\n      return this;\n    }\n\n    const [hashRoot, valueId] = remove;\n    const sortedRoot = this.sortedRoot.remove(tempId, valueId);\n    return new OrderedMap(this.itemId, hashRoot, sortedRoot);\n  }\n\n  get(key) {\n    const h = hashing(key);\n    const id = this.hashRoot.get(key, h, 0);\n\n    if (id === undefined) {\n      return undefined;\n    }\n\n    const got = this.sortedRoot.get(id);\n    return got === null || got === void 0 ? void 0 : got[1];\n  }\n\n  has(key) {\n    const h = hashing(key);\n    return this.hashRoot.contains(key, h, 0);\n  }\n\n  set(key, value) {\n    const temp = uid.peek();\n    let itemId = this.hashRoot.get(key, hashing(key), 0);\n    let hashRoot = this.hashRoot;\n\n    if (!itemId) {\n      itemId = this.itemId + 1;\n      hashRoot = this.hashRoot.insert(temp, key, itemId, hashing(key), 0);\n    }\n\n    const sortedRoot = rootInsert(temp, this.sortedRoot, itemId, [key, value]);\n    return this.withRoot(this.itemId + 1, hashRoot, sortedRoot);\n  }\n\n  update(key, updater) {\n    const itemId = this.hashRoot.get(key, hashing(key), 0);\n\n    if (!itemId) {\n      return this;\n    }\n\n    const sortedRoot = this.sortedRoot.update(uid.peek(), itemId, prev => {\n      const [prevKey, prevValue] = prev;\n      const value = updater(prevValue);\n      return is$1(value, prevValue) ? prev : [prevKey, value];\n    });\n    return this.withRoot(this.itemId, this.hashRoot, sortedRoot);\n  }\n\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  clone() {\n    return new OrderedMap(this.itemId, this.hashRoot, this.sortedRoot);\n  }\n\n  entries() {\n    return new OrderedMapIterator(new BTreeIterator(this.sortedRoot));\n  }\n\n  values() {\n    return new MapIterator(this.entries(), ([, v]) => v);\n  }\n\n  mutate() {\n    return new OrderedMapBuilder(this.itemId, this.hashRoot, this.sortedRoot);\n  }\n\n  map(f) {\n    const id = uid.peek();\n\n    const g = prev => {\n      const [key, value0] = prev;\n      const value = f(value0, key);\n      return is$1(value0, value) ? prev : [key, value];\n    };\n\n    const sortedRoot = this.sortedRoot.map(id, g);\n    return new OrderedMap(this.itemId, this.hashRoot, sortedRoot);\n  }\n\n  forEach(f) {\n    this.sortedRoot.forEach(([key, value]) => {\n      f(value, key);\n    });\n  }\n\n  find(predicate) {\n    const found = this.sortedRoot.find(([, value]) => predicate(value));\n    return found ? found[1] : undefined;\n  }\n\n  first() {\n    const next = this.entries().next();\n\n    if (next.done) {\n      return undefined;\n    }\n\n    return next.value[1];\n  }\n\n  filter(predicate) {\n    const map = this.mutate();\n    this.forEach((value, key) => {\n      if (!predicate(value, key)) {\n        map.delete(key);\n      }\n    });\n    return map.finish();\n  }\n\n  withRoot(itemId, hashRoot, sortedRoot) {\n    return hashRoot === this.hashRoot && sortedRoot === this.sortedRoot ? this : new OrderedMap(itemId, hashRoot, sortedRoot);\n  }\n\n}\nclass OrderedMapIterator {\n  /**\r\n   * @param delegate\r\n   * @internal\r\n   */\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n\n  [Symbol.iterator]() {\n    return this.clone();\n  }\n\n  next() {\n    const next = this.delegate.next();\n\n    if (next.done) {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n\n    return {\n      done: false,\n      value: next.value[1]\n    };\n  }\n\n  clone() {\n    return new OrderedMapIterator(this.delegate.clone());\n  }\n\n}\nclass OrderedMapBuilder {\n  constructor(itemId, hashRoot, sortedRoot) {\n    this.id = uid.take();\n    this.itemId = itemId;\n    this.hashRoot = hashRoot;\n    this.sortedRoot = sortedRoot;\n  }\n\n  static empty() {\n    const tempId = uid.peek();\n    const hashRoot = BitmapIndexedNode.empty(tempId);\n    const sortedRoot = emptyRoot(tempId);\n    return new OrderedMapBuilder(0, hashRoot, sortedRoot);\n  }\n\n  static from(iterable) {\n    if (Array.isArray(iterable)) {\n      return OrderedMapBuilder.fromArray(iterable);\n    }\n\n    const builder = OrderedMapBuilder.empty();\n    const iterator = iterable[Symbol.iterator]();\n    let next = iterator.next();\n\n    while (!next.done) {\n      const [key, value] = next.value;\n      builder.set(key, value);\n      next = iterator.next();\n    }\n\n    return builder;\n  }\n\n  static fromArray(list) {\n    const builder = OrderedMapBuilder.empty(); // eslint-disable-next-line @typescript-eslint/prefer-for-of\n\n    for (let i = 0; i < list.length; i += 1) {\n      const [key, value] = list[i];\n      builder.set(key, value);\n    }\n\n    return builder;\n  }\n\n  delete(key) {\n    const h = hashing(key);\n    const remove = this.hashRoot.remove(this.id, key, h, 0);\n\n    if (remove === undefined) {\n      return this;\n    }\n\n    const id = remove[1];\n    this.hashRoot = remove[0];\n    this.sortedRoot = rootRemove(this.id, this.sortedRoot, id);\n    return this;\n  }\n\n  get(key) {\n    var _a;\n\n    const h = hashing(key);\n    const id = this.hashRoot.get(key, h, 0);\n\n    if (id === undefined) {\n      return undefined;\n    }\n\n    return (_a = this.sortedRoot.get(id)) === null || _a === void 0 ? void 0 : _a[1];\n  }\n\n  has(key) {\n    const h = hashing(key);\n    return this.hashRoot.contains(key, h, 0);\n  }\n\n  set(key, value) {\n    let itemId = this.hashRoot.get(key, hashing(key), 0);\n\n    if (itemId === undefined) {\n      itemId = this.itemId + 1;\n      this.itemId += 1;\n      this.hashRoot = this.hashRoot.insert(this.id, key, itemId, hashing(key), 0);\n    }\n\n    this.sortedRoot = rootInsert(this.id, this.sortedRoot, itemId, [key, value]);\n    return this;\n  }\n\n  update(key, updater) {\n    const itemId = this.hashRoot.get(key, hashing(key), 0);\n\n    if (!itemId) {\n      return this;\n    }\n\n    this.sortedRoot = this.sortedRoot.update(this.id, itemId, prev => {\n      const [prevKey, prevValue] = prev;\n      const value = updater(prevValue);\n      return is$1(value, prevValue) ? prev : [prevKey, value];\n    });\n    return this;\n  }\n\n  finish() {\n    return new OrderedMap(this.itemId, this.hashRoot, this.sortedRoot);\n  }\n\n}\n\nconst getPortPosition = (node, port, nodeConfig) => {\n  const width = getRectWidth(nodeConfig, node);\n  const height = getRectHeight(nodeConfig, node);\n  const xOffset = port.position ? port.position[0] * width : width * 0.5;\n  const x = node.x + xOffset;\n  const yOffset = port.position ? port.position[1] * height : height;\n  const y = node.y + yOffset;\n  return {\n    x,\n    y\n  };\n};\nconst getPortPositionByPortId = (node, portId, graphConfig) => {\n  const nodeConfig = getNodeConfig(node, graphConfig);\n\n  if (!nodeConfig) {\n    return undefined;\n  }\n\n  const ports = node.ports || [];\n  const port = ports.find(p => p.id === portId);\n\n  if (!port) {\n    Debug.warn(`invalid port id ${JSON.stringify(port)}`);\n    return undefined;\n  }\n\n  return getPortPosition(node, port, nodeConfig);\n};\n\nconst identical = data => data;\n\nconst isMobile = () => {\n  const toMatch = [/Android/i, /webOS/i, /iPhone/i, /iPad/i, /iPod/i, /BlackBerry/i, /Windows Phone/i];\n  return toMatch.some(toMatchItem => {\n    return navigator.userAgent.match(toMatchItem);\n  });\n};\nvar BrowserType;\n\n(function (BrowserType) {\n  BrowserType[\"Unknown\"] = \"Unknown\";\n  BrowserType[\"Edge\"] = \"Edge\";\n  BrowserType[\"EdgeChromium\"] = \"EdgeChromium\";\n  BrowserType[\"Opera\"] = \"Opera\";\n  BrowserType[\"Chrome\"] = \"Chrome\";\n  BrowserType[\"IE\"] = \"IE\";\n  BrowserType[\"Firefox\"] = \"Firefox\";\n  BrowserType[\"Safari\"] = \"Safari\";\n  BrowserType[\"Electron\"] = \"Electron\";\n})(BrowserType || (BrowserType = {}));\n\nconst getBrowser = () => {\n  const agent = navigator.userAgent.toLowerCase();\n\n  if (agent.indexOf(\"electron\") > -1) {\n    return BrowserType.Electron; // UserAgent of electron is weird.\n  }\n\n  switch (true) {\n    case agent.indexOf(\"edge\") > -1:\n      return BrowserType.Edge;\n\n    case agent.indexOf(\"edg\") > -1:\n      return BrowserType.EdgeChromium;\n\n    case agent.indexOf(\"opr\") > -1 && !!window.opr:\n      return BrowserType.Opera;\n\n    case agent.indexOf(\"chrome\") > -1 && !!window.chrome:\n      return BrowserType.Chrome;\n\n    case agent.indexOf(\"trident\") > -1:\n      return BrowserType.IE;\n\n    case agent.indexOf(\"firefox\") > -1:\n      return BrowserType.Firefox;\n\n    case agent.indexOf(\"safari\") > -1:\n      return BrowserType.Safari;\n\n    default:\n      return BrowserType.Unknown;\n  }\n};\nconst isSupported = () => {\n  if (isMobile()) {\n    return false;\n  }\n\n  const browser = getBrowser();\n  const supported = [BrowserType.Chrome, BrowserType.EdgeChromium, BrowserType.Firefox, BrowserType.Safari, BrowserType.Electron];\n  return supported.indexOf(browser) > -1;\n};\nconst isMacOs = navigator.userAgent.includes(\"Macintosh\");\n\nconst metaControl = e => isMacOs ? e.metaKey : e.ctrlKey;\nconst checkIsMultiSelect = e => e.shiftKey || metaControl(e);\n\n/**\r\n * get transformed point\r\n * @param x\r\n * @param y\r\n * @param transformMatrix\r\n */\nconst transformPoint = (x, y, transformMatrix) => {\n  return {\n    x: transformMatrix[0] * x + transformMatrix[2] * y + transformMatrix[4],\n    y: transformMatrix[1] * x + transformMatrix[3] * y + transformMatrix[5]\n  };\n};\n/**\r\n * reverse of transformPoint\r\n * @param x\r\n * @param y\r\n * @param transformMatrix\r\n */\n\nconst reverseTransformPoint = (x, y, transformMatrix) => {\n  const [t0, t1, t2, t3, t4, t5] = transformMatrix;\n  return {\n    x: ((x - t4) * t3 - (y - t5) * t2) / (t0 * t3 - t1 * t2),\n    y: ((x - t4) * t1 - (y - t5) * t0) / (t1 * t2 - t0 * t3)\n  };\n};\nconst getPointDeltaByClientDelta = (x, y, transformMatrix) => {\n  const [a, b, c, d] = transformMatrix;\n  const realDx = d * x / (a * d - b * c) + c * y / (b * c - a * d);\n  const realDy = b * x / (b * c - a * d) + a * y / (a * d - b * c);\n  return {\n    x: realDx,\n    y: realDy\n  };\n};\nconst getClientDeltaByPointDelta = (x, y, transformMatrix) => {\n  if (!transformMatrix) {\n    return {\n      x,\n      y\n    };\n  }\n\n  const [a, b, c, d] = transformMatrix;\n  return transformPoint(x, y, [a, b, c, d, 0, 0]);\n};\nconst getRealPointFromClientPoint = (clientX, clientY, viewport) => {\n  const {\n    rect\n  } = viewport;\n  const x = clientX - rect.left;\n  const y = clientY - rect.top;\n  return reverseTransformPoint(x, y, viewport.transformMatrix);\n};\nconst getClientPointFromRealPoint = (realX, realY, viewport) => {\n  const {\n    x,\n    y\n  } = transformPoint(realX, realY, viewport.transformMatrix);\n  const {\n    rect\n  } = viewport;\n  return {\n    x: x + rect.left,\n    y: y + rect.top\n  };\n};\n/**\r\n * get client point relative to container\r\n */\n\nconst getContainerClientPoint = (realX, realY, viewport) => {\n  const client = getClientPointFromRealPoint(realX, realY, viewport);\n  const {\n    rect\n  } = viewport;\n  return {\n    x: client.x - rect.left,\n    y: client.y - rect.top\n  };\n};\n\n/**\r\n * shallow copy to mark edge dirty, in order to trigger a re-render\r\n *\r\n * @param edges\r\n * @param id\r\n * @param edges\r\n * @param id\r\n */\n\nfunction markEdgeDirty(edges, id) {\n  edges.update(id, edge => edge.shallow());\n}\nconst getNearestConnectablePort = params => {\n  const {\n    parentNode: node,\n    clientX,\n    clientY,\n    graphConfig,\n    viewport\n  } = params;\n  let minDistance = Infinity;\n  let nearestPort;\n\n  if (!node.ports) {\n    return undefined;\n  }\n\n  const point = getRealPointFromClientPoint(clientX, clientY, viewport);\n  node.ports.forEach(port => {\n    if (isConnectable(graphConfig, Object.assign(Object.assign({}, params), {\n      model: port\n    }))) {\n      const portPos = getPortPositionByPortId(node, port.id, graphConfig);\n\n      if (!portPos) {\n        return;\n      }\n\n      const diffX = point.x - portPos.x;\n      const diffY = point.y - portPos.y;\n      const distance = diffX * diffX + diffY * diffY;\n\n      if (distance < minDistance) {\n        minDistance = distance;\n        nearestPort = port;\n      }\n    }\n  });\n  return nearestPort;\n};\nconst isConnectable = (graphConfig, params) => {\n  const portConfig = graphConfig.getPortConfig(params.model);\n  return portConfig ? portConfig.getIsConnectable(params) : false;\n};\n/**\r\n * @param node\r\n */\n\nfunction resetNodePortsState(node) {\n  return node.updatePorts(updateStatus(replace(GraphPortStatus.Default)));\n}\nconst filterSelectedItems = data => {\n  const nodes = new Map();\n  const edges = [];\n  data.nodes.forEach(({\n    inner\n  }) => {\n    if (isSelected(inner)) {\n      nodes.set(inner.id, inner);\n    }\n  });\n  data.edges.forEach(({\n    inner\n  }) => {\n    if (isSelected(inner) || nodes.has(inner.source) && nodes.has(inner.target)) {\n      edges.push(inner);\n    }\n  });\n  return {\n    nodes: Array.from(nodes.values()),\n    edges\n  };\n};\nconst getNeighborPorts = (data, nodeId, portId) => {\n  const neighbors = [];\n  const edgesBySource = data.getEdgesBySource(nodeId, portId);\n  const edgesByTarget = data.getEdgesByTarget(nodeId, portId);\n  edgesBySource === null || edgesBySource === void 0 ? void 0 : edgesBySource.forEach(edgeId => {\n    const edge = data.edges.get(edgeId);\n\n    if (edge) {\n      neighbors.push({\n        nodeId: edge.target,\n        portId: edge.targetPortId\n      });\n    }\n  });\n  edgesByTarget === null || edgesByTarget === void 0 ? void 0 : edgesByTarget.forEach(edgeId => {\n    const edge = data.edges.get(edgeId);\n\n    if (edge) {\n      neighbors.push({\n        nodeId: edge.source,\n        portId: edge.sourcePortId\n      });\n    }\n  });\n  return neighbors;\n};\nconst unSelectAllEntity = () => {\n  return data => data.mapNodes(n => n.update(curNode => {\n    var _a;\n\n    const nextNode = Object.assign(Object.assign({}, curNode), {\n      ports: (_a = curNode.ports) === null || _a === void 0 ? void 0 : _a.map(updateStatus(replace(GraphPortStatus.Default)))\n    });\n    return updateStatus(replace(GraphNodeStatus.Default))(nextNode);\n  })).mapEdges(e => e.update(updateStatus(replace(GraphEdgeStatus.Default))));\n};\nconst nodeSelection = (e, target) => {\n  if (isNodeEditing(target)) {\n    return identical;\n  }\n\n  const isMultiSelect = checkIsMultiSelect(e);\n\n  if (isSelected(target) && !isMultiSelect) {\n    return identical;\n  }\n\n  return data => {\n    const predicate = isMultiSelect ? node => {\n      if (node.id !== target.id) {\n        return isSelected(node);\n      } else if (e.button === MouseEventButton.Secondary) {\n        return true;\n      } else {\n        // use target.state here which is node's original state before onNodeMouseDown\n        return !isSelected(target);\n      }\n    } : node => node.id === target.id;\n    return data.selectNodes(predicate, target.id);\n  };\n};\nconst getNodeAutomationId = node => {\n  var _a;\n\n  return `node-container-${(_a = node.name) !== null && _a !== void 0 ? _a : \"unnamed\"}-${node.id}`;\n};\nconst getPortAutomationId = (port, parentNode) => {\n  return `port-${parentNode.name}-${parentNode.id}-${port.name}-${port.id}`;\n};\nconst getNodeUid = (graphId, node) => {\n  return `node:${graphId}:${node.id}`;\n};\nconst getPortUid = (graphId, node, port) => {\n  return `port:${graphId}:${node.id}:${port.id}`;\n};\nconst getEdgeUid = (graphId, edge) => {\n  return `edge:${graphId}:${edge.id}`;\n};\n\n/* eslint-disable @typescript-eslint/ban-types */\n/**\r\n * @param obj\r\n */\n\nfunction preventSpread(obj) {\n  Object.defineProperty(obj, \"__preventSpread\", {\n    enumerable: true,\n    configurable: false,\n\n    get() {\n      /**\r\n       * silent warning if caused by browser extension, eg. react devtool\r\n       * if this is caused by browser extension, document.currentScript is null\r\n       */\n      if (document.currentScript) {\n        Debug.error(`${obj.constructor.name} is a class, which should not be used in the spread syntax or argument of Object.assign`);\n      }\n\n      return undefined;\n    }\n\n  });\n}\n\nclass EdgeModel {\n  get id() {\n    return this.inner.id;\n  }\n\n  get automationId() {\n    return this.inner.automationId;\n  }\n\n  get source() {\n    return this.inner.source;\n  }\n\n  get target() {\n    return this.inner.target;\n  }\n\n  get sourcePortId() {\n    return this.inner.sourcePortId;\n  }\n\n  get targetPortId() {\n    return this.inner.targetPortId;\n  }\n\n  get status() {\n    return this.inner.status;\n  }\n\n  get data() {\n    return this.inner.data;\n  }\n\n  constructor(edge) {\n    this.inner = edge;\n    preventSpread(this);\n  }\n\n  static fromJSON(inner) {\n    return new EdgeModel(inner);\n  }\n\n  updateStatus(f) {\n    return this.update(updateStatus(f));\n  }\n\n  update(f) {\n    const edge = f(this.inner);\n    return edge === this.inner ? this : new EdgeModel(edge);\n  }\n  /**\r\n   * shallow copy the model\r\n   * example usage: mark the edge is dirty and need a re-render\r\n   *\r\n   * @returns shallowed edge model\r\n   */\n\n\n  shallow() {\n    return new EdgeModel(this.inner);\n  }\n\n  toJSON() {\n    return this.inner;\n  }\n\n}\n\n// accessing Object's static property is very slow in safari\nconst is = Object.is;\n\nfunction mapCow(list, f) {\n  const values = [];\n  let same = true;\n\n  for (let i = 0; i < list.length; i += 1) {\n    const value0 = list[i];\n    const value = f(value0, i);\n    same = same && is(value0, value);\n    values.push(value);\n  }\n\n  return same ? list : values;\n}\n\nclass NodeModel {\n  get id() {\n    return this.inner.id;\n  }\n\n  get status() {\n    return this.inner.status;\n  }\n\n  get ports() {\n    return this.inner.ports;\n  }\n\n  get ariaLabel() {\n    return this.inner.ariaLabel;\n  }\n\n  get name() {\n    return this.inner.name;\n  }\n\n  get x() {\n    return this.inner.x;\n  }\n\n  get y() {\n    return this.inner.y;\n  }\n\n  get automationId() {\n    return this.inner.automationId;\n  }\n\n  get isInSearchResults() {\n    return this.inner.isInSearchResults;\n  }\n\n  get isCurrentSearchResult() {\n    return this.inner.isCurrentSearchResult;\n  }\n\n  get data() {\n    return this.inner.data;\n  }\n\n  get height() {\n    return this.inner.height;\n  }\n\n  get width() {\n    return this.inner.width;\n  }\n\n  get layer() {\n    var _a;\n\n    return (_a = this.inner.layer) !== null && _a !== void 0 ? _a : 0;\n  }\n\n  constructor(node, portPositionCache, prev, next) {\n    this.inner = node;\n    this.portPositionCache = portPositionCache;\n    this.prev = prev;\n    this.next = next;\n    preventSpread(this);\n  }\n\n  static fromJSON(node, prev, next) {\n    return new NodeModel(node, new Map(), prev, next);\n  }\n\n  getPort(id) {\n    var _a;\n\n    return (_a = this.ports) === null || _a === void 0 ? void 0 : _a.find(port => port.id === id);\n  }\n\n  link({\n    prev,\n    next\n  }) {\n    if (prev === this.prev && next === this.next) {\n      return this;\n    }\n\n    return new NodeModel(this.inner, this.portPositionCache, prev !== null && prev !== void 0 ? prev : this.prev, next !== null && next !== void 0 ? next : this.next);\n  }\n\n  updateStatus(f) {\n    return this.update(updateStatus(f));\n  }\n\n  update(f) {\n    const node = f(this.inner);\n    return node === this.inner ? this : new NodeModel(node, new Map(), this.prev, this.next);\n  }\n\n  updateData(f) {\n    if (!this.data) {\n      return this;\n    }\n\n    return this.update(inner => {\n      const data = f(inner.data);\n\n      if (data === inner.data) {\n        return inner;\n      }\n\n      return Object.assign(Object.assign({}, inner), {\n        data\n      });\n    });\n  }\n\n  getPortPosition(portId, graphConfig) {\n    let point = this.portPositionCache.get(portId);\n\n    if (!point) {\n      point = getPortPositionByPortId(this.inner, portId, graphConfig);\n      this.portPositionCache.set(portId, point);\n    }\n\n    return point;\n  }\n\n  hasPort(id) {\n    var _a;\n\n    return Boolean((_a = this.inner.ports) === null || _a === void 0 ? void 0 : _a.find(port => port.id === id));\n  }\n  /**\r\n   * @internal\r\n   */\n\n\n  updatePositionAndSize(dummy) {\n    const {\n      x,\n      y,\n      width,\n      height\n    } = dummy;\n    const node = Object.assign(Object.assign({}, this.inner), {\n      x,\n      y,\n      width: width !== null && width !== void 0 ? width : this.inner.width,\n      height: height !== null && height !== void 0 ? height : this.inner.height\n    });\n    return new NodeModel(node, new Map(), this.prev, this.next);\n  }\n\n  updatePorts(f) {\n    if (!this.inner.ports) {\n      return this;\n    }\n\n    const ports = mapCow(this.inner.ports, f);\n    const node = this.inner.ports === ports ? this.inner : Object.assign(Object.assign({}, this.inner), {\n      ports\n    });\n    return node === this.inner ? this : new NodeModel(node, new Map(), this.prev, this.next);\n  }\n\n  invalidCache() {\n    return new NodeModel(this.inner, new Map(), this.prev, this.next);\n  }\n\n  toJSON() {\n    return this.inner;\n  }\n\n}\n\n/**\r\n * Things preferred to be implemented as methods here:\r\n * * widely shared functions, eg. `updateNode`\r\n * * including multiple operations that must happen atomically\r\n * * improve performance by internal mutability\r\n */\n\nclass GraphModel {\n  constructor(init) {\n    this.nodes = init.nodes;\n    this.edges = init.edges;\n    this.groups = init.groups;\n    this.head = init.head;\n    this.tail = init.tail;\n    this.edgesBySource = init.edgesBySource;\n    this.edgesByTarget = init.edgesByTarget;\n    this.selectedNodes = init.selectedNodes;\n    preventSpread(this);\n  }\n\n  static empty() {\n    return new GraphModel({\n      nodes: OrderedMap.empty(),\n      edges: HashMap.empty(),\n      groups: [],\n      head: undefined,\n      tail: undefined,\n      edgesBySource: HashMap.empty(),\n      edgesByTarget: HashMap.empty(),\n      selectedNodes: new Set()\n    });\n  }\n\n  static fromJSON(init) {\n    var _a;\n\n    const nodes = OrderedMap.empty().mutate();\n    const edges = HashMap.empty().mutate();\n    let head;\n    let tail;\n\n    if (init.nodes.length === 0) {\n      head = undefined;\n      tail = undefined;\n    } else if (init.nodes.length === 1) {\n      const node = init.nodes[0];\n      nodes.set(node.id, NodeModel.fromJSON(node, undefined, undefined));\n      head = node.id;\n      tail = node.id;\n    } else {\n      const first = init.nodes[0];\n      const second = init.nodes[1];\n      const last = init.nodes[init.nodes.length - 1];\n      head = first.id;\n      tail = last.id;\n      nodes.set(first.id, NodeModel.fromJSON(first, undefined, second.id));\n      let prev = init.nodes[0];\n\n      if (init.nodes.length > 2) {\n        for (let i = 1; i < init.nodes.length - 1; i += 1) {\n          const node = init.nodes[i];\n          const next = init.nodes[i + 1];\n          nodes.set(node.id, NodeModel.fromJSON(node, prev.id, next.id));\n          prev = node;\n        }\n      }\n\n      nodes.set(last.id, NodeModel.fromJSON(last, prev.id, undefined));\n    }\n\n    const edgesBySource = HashMapBuilder.empty();\n    const edgesByTarget = HashMapBuilder.empty();\n\n    for (const edge of init.edges) {\n      edges.set(edge.id, EdgeModel.fromJSON(edge));\n      setEdgeByPortMutable(edgesBySource, edge.id, edge.source, edge.sourcePortId);\n      setEdgeByPortMutable(edgesByTarget, edge.id, edge.target, edge.targetPortId);\n    }\n\n    return new GraphModel({\n      nodes: nodes.finish(),\n      edges: edges.finish(),\n      groups: (_a = init.groups) !== null && _a !== void 0 ? _a : [],\n      head,\n      tail,\n      edgesBySource: edgesBySource.finish(),\n      edgesByTarget: edgesByTarget.finish(),\n      selectedNodes: new Set()\n    });\n  }\n\n  getNavigationFirstNode() {\n    if (this.head === undefined) {\n      return undefined;\n    }\n\n    return this.nodes.get(this.head);\n  }\n\n  updateNode(id, f) {\n    var _a, _b;\n\n    const nodes = this.nodes.update(id, node => node.update(f));\n\n    if (nodes === this.nodes) {\n      return this;\n    }\n\n    const edges = this.edges.mutate();\n    (_a = this.edgesBySource.get(id)) === null || _a === void 0 ? void 0 : _a.forEach(edgeIds => {\n      edgeIds.forEach(edgeId => {\n        markEdgeDirty(edges, edgeId);\n      });\n    });\n    (_b = this.edgesByTarget.get(id)) === null || _b === void 0 ? void 0 : _b.forEach(edgeIds => {\n      edgeIds.forEach(edgeId => {\n        markEdgeDirty(edges, edgeId);\n      });\n    });\n    return this.merge({\n      nodes,\n      edges: edges.finish()\n    });\n  }\n\n  updateNodeData(id, f) {\n    return this.merge({\n      nodes: this.nodes.update(id, node => node.updateData(f))\n    });\n  }\n\n  updatePort(nodeId, portId, f) {\n    const nodes = this.nodes.update(nodeId, node => node.updatePorts(port => port.id === portId ? f(port) : port));\n    return this.merge({\n      nodes\n    });\n  }\n\n  insertNode(node) {\n    const nodes = this.nodes.mutate().set(node.id, NodeModel.fromJSON(node, this.tail, undefined));\n\n    if (this.tail && !this.nodes.has(node.id)) {\n      nodes.update(this.tail, tail => tail.link({\n        next: node.id\n      }));\n    }\n\n    return this.merge({\n      nodes: nodes.finish(),\n      head: this.nodes.size === 0 ? node.id : this.head,\n      tail: node.id\n    });\n  }\n\n  deleteItems(predicate) {\n    var _a;\n\n    const deleted = new Set();\n    const nodes = this.nodes.mutate();\n    let first = this.head === undefined ? undefined : this.nodes.get(this.head);\n    let node = first;\n    let prev;\n    const edgesBySource = this.edgesBySource.mutate();\n    const edgesByTarget = this.edgesByTarget.mutate();\n\n    while (node !== undefined) {\n      const next = node.next ? this.nodes.get(node.next) : undefined;\n\n      if (!((_a = predicate.node) === null || _a === void 0 ? void 0 : _a.call(predicate, node.inner))) {\n        nodes.delete(node.id);\n        edgesBySource.delete(node.id);\n        edgesByTarget.delete(node.id);\n        deleted.add(node.id);\n\n        if (prev) {\n          nodes.update(prev.id, prevNode => prevNode.link({\n            next: node === null || node === void 0 ? void 0 : node.next\n          }));\n        }\n\n        if (next) {\n          nodes.update(next.id, nextNode => nextNode.link({\n            prev: prev === null || prev === void 0 ? void 0 : prev.id\n          }));\n        }\n\n        if (node === first) {\n          first = next;\n        }\n      } else {\n        nodes.update(node.id, current => current.link({\n          prev: prev === null || prev === void 0 ? void 0 : prev.id\n        }).update(n => {\n          if (has(GraphNodeStatus.Editing)(n.status)) {\n            return n;\n          }\n\n          return Object.assign(Object.assign({}, n), {\n            status: GraphNodeStatus.Default\n          });\n        }));\n        prev = node;\n      }\n\n      node = next;\n    }\n\n    const edges = this.edges.mutate();\n    this.edges.forEach(edge => {\n      var _a, _b;\n\n      if (!deleted.has(edge.source) && !deleted.has(edge.target) && ((_b = (_a = predicate.edge) === null || _a === void 0 ? void 0 : _a.call(predicate, edge)) !== null && _b !== void 0 ? _b : true)) {\n        edges.update(edge.id, e => e.update(updateStatus(replace(GraphEdgeStatus.Default))));\n      } else {\n        edges.delete(edge.id);\n        deleteEdgeByPort(edgesBySource, edge.id, edge.source, edge.sourcePortId);\n        deleteEdgeByPort(edgesByTarget, edge.id, edge.target, edge.targetPortId);\n      }\n    });\n    return this.merge({\n      nodes: nodes.finish(),\n      edges: edges.finish(),\n      head: first === null || first === void 0 ? void 0 : first.id,\n      tail: prev === null || prev === void 0 ? void 0 : prev.id,\n      edgesBySource: edgesBySource.finish(),\n      edgesByTarget: edgesByTarget.finish()\n    });\n  }\n\n  insertEdge(edge) {\n    if (this.isEdgeExist(edge.source, edge.sourcePortId, edge.target, edge.targetPortId) || !this.nodes.has(edge.source) || !this.nodes.has(edge.target)) {\n      return this;\n    }\n\n    const edgesBySource = setEdgeByPort(this.edgesBySource, edge.id, edge.source, edge.sourcePortId);\n    const edgesByTarget = setEdgeByPort(this.edgesByTarget, edge.id, edge.target, edge.targetPortId);\n    return this.merge({\n      nodes: this.nodes.update(edge.source, node => node.invalidCache()).update(edge.target, node => node.invalidCache()),\n      edges: this.edges.set(edge.id, EdgeModel.fromJSON(edge)).map(e => e.updateStatus(replace(GraphEdgeStatus.Default))),\n      edgesBySource,\n      edgesByTarget\n    });\n  }\n\n  updateEdge(id, f) {\n    return this.merge({\n      edges: this.edges.update(id, e => e.update(f))\n    });\n  }\n\n  deleteEdge(id) {\n    const edge = this.edges.get(id);\n\n    if (!edge) {\n      return this;\n    }\n\n    return this.merge({\n      edges: this.edges.delete(id),\n      edgesBySource: deleteEdgeByPort(this.edgesBySource, edge.id, edge.source, edge.sourcePortId),\n      edgesByTarget: deleteEdgeByPort(this.edgesByTarget, edge.id, edge.target, edge.targetPortId)\n    });\n  }\n  /**\r\n   * @internal\r\n   */\n\n\n  updateNodesPositionAndSize(dummies) {\n    const updates = new Set();\n    const nodes = this.nodes.mutate();\n    const edges = this.edges.mutate();\n    dummies.forEach(dummy => {\n      var _a, _b;\n\n      updates.add(dummy.id);\n      nodes.update(dummy.id, node => node.updatePositionAndSize(dummy));\n      (_a = this.edgesBySource.get(dummy.id)) === null || _a === void 0 ? void 0 : _a.forEach(ids => {\n        ids.forEach(id => {\n          markEdgeDirty(edges, id);\n        });\n      });\n      (_b = this.edgesByTarget.get(dummy.id)) === null || _b === void 0 ? void 0 : _b.forEach(ids => {\n        ids.forEach(id => {\n          markEdgeDirty(edges, id);\n        });\n      });\n    });\n    return this.merge({\n      nodes: nodes.finish(),\n      edges: edges.finish()\n    });\n  }\n\n  mapNodes(f) {\n    return this.merge({\n      nodes: this.nodes.map(f)\n    });\n  }\n\n  mapEdges(f) {\n    return this.merge({\n      edges: this.edges.map(f)\n    });\n  }\n\n  selectNodes(predicate, topNode) {\n    const selected = new Set();\n    const nodes = this.nodes.map(node => {\n      const isNodeSelected = predicate(node.inner);\n\n      if (isNodeSelected) {\n        selected.add(node.id);\n      }\n\n      return node.updatePorts(updateStatus(replace(GraphPortStatus.Default))).updateStatus(resetConnectStatus(isNodeSelected ? GraphNodeStatus.Selected : GraphNodeStatus.UnconnectedToSelected));\n    }).mutate();\n\n    if (selected.size === 0) {\n      this.nodes.forEach(n => nodes.update(n.id, it => it.updateStatus(replace(GraphNodeStatus.Default))));\n    } else if (topNode) {\n      const n = nodes.get(topNode);\n\n      if (n) {\n        nodes.delete(topNode);\n        nodes.set(n.id, n);\n      }\n    }\n\n    const setConnected = id => {\n      nodes.update(id, node => node.updateStatus(replace(isSelected(node) ? GraphNodeStatus.Selected : GraphNodeStatus.ConnectedToSelected)));\n    };\n\n    const edges = selected.size ? this.edges.map(edge => {\n      let state = GraphEdgeStatus.UnconnectedToSelected;\n\n      if (selected.has(edge.source)) {\n        setConnected(edge.target);\n        state = GraphEdgeStatus.ConnectedToSelected;\n      }\n\n      if (selected.has(edge.target)) {\n        setConnected(edge.source);\n        state = GraphEdgeStatus.ConnectedToSelected;\n      }\n\n      return edge.updateStatus(replace(state));\n    }) : this.edges.map(edge => edge.updateStatus(replace(GraphEdgeStatus.Default)));\n    return this.merge({\n      nodes: nodes.finish(),\n      edges,\n      selectedNodes: selected\n    });\n  }\n\n  getEdgesBySource(nodeId, portId) {\n    var _a;\n\n    return (_a = this.edgesBySource.get(nodeId)) === null || _a === void 0 ? void 0 : _a.get(portId);\n  }\n\n  getEdgesByTarget(nodeId, portId) {\n    var _a;\n\n    return (_a = this.edgesByTarget.get(nodeId)) === null || _a === void 0 ? void 0 : _a.get(portId);\n  }\n\n  isPortConnectedAsSource(nodeId, portId) {\n    var _a, _b;\n\n    return ((_b = (_a = this.getEdgesBySource(nodeId, portId)) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : 0) > 0;\n  }\n\n  isPortConnectedAsTarget(nodeId, portId) {\n    var _a, _b;\n\n    return ((_b = (_a = this.getEdgesByTarget(nodeId, portId)) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : 0) > 0;\n  }\n\n  shallow() {\n    return this.merge({});\n  }\n\n  toJSON() {\n    const nodes = [];\n    let current = this.head && this.nodes.get(this.head);\n\n    while (current) {\n      nodes.push(current.inner);\n      current = current.next && this.nodes.get(current.next);\n    }\n\n    const edges = Array.from(this.edges.values()).map(it => it.inner);\n    return {\n      nodes,\n      edges\n    };\n  }\n\n  isEdgeExist(source, sourcePortId, target, targetPortId) {\n    const sources = this.getEdgesBySource(source, sourcePortId);\n    const targets = this.getEdgesByTarget(target, targetPortId);\n\n    if (!sources || !targets) {\n      return false;\n    }\n\n    let exist = false;\n    sources.forEach(id => {\n      if (targets.has(id)) {\n        exist = true;\n      }\n    });\n    return exist;\n  }\n\n  merge(partial) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n\n    return new GraphModel({\n      nodes: (_a = partial.nodes) !== null && _a !== void 0 ? _a : this.nodes,\n      edges: (_b = partial.edges) !== null && _b !== void 0 ? _b : this.edges,\n      groups: (_c = partial.groups) !== null && _c !== void 0 ? _c : this.groups,\n      head: (_d = partial.head) !== null && _d !== void 0 ? _d : this.head,\n      tail: (_e = partial.tail) !== null && _e !== void 0 ? _e : this.tail,\n      edgesBySource: (_f = partial.edgesBySource) !== null && _f !== void 0 ? _f : this.edgesBySource,\n      edgesByTarget: (_g = partial.edgesByTarget) !== null && _g !== void 0 ? _g : this.edgesByTarget,\n      selectedNodes: (_h = partial.selectedNodes) !== null && _h !== void 0 ? _h : this.selectedNodes\n    });\n  }\n\n}\n/**\r\n * @param edgesByPort\r\n * @param edgeId\r\n * @param nodeId\r\n * @param portId\r\n */\n\nfunction setEdgeByPort(edgesByPort, edgeId, nodeId, portId) {\n  return edgesByPort.has(nodeId) ? edgesByPort.update(nodeId, map => {\n    const edges = map.get(portId);\n    return new Map(map).set(portId, (edges ? new Set(edges) : new Set()).add(edgeId));\n  }) : edgesByPort.set(nodeId, new Map([[portId, new Set([edgeId])]]));\n}\n/**\r\n * @param edgesByPort\r\n * @param edgeId\r\n * @param nodeId\r\n * @param portId\r\n */\n\n\nfunction setEdgeByPortMutable(edgesByPort, edgeId, nodeId, portId) {\n  if (edgesByPort.has(nodeId)) {\n    edgesByPort.update(nodeId, map => {\n      let set = map.get(portId);\n\n      if (!set) {\n        set = new Set();\n        map.set(portId, set);\n      }\n\n      set.add(edgeId);\n      return map;\n    });\n  } else {\n    edgesByPort.set(nodeId, new Map([[portId, new Set([edgeId])]]));\n  }\n}\n/**\r\n * @param edgesByPort\r\n * @param edgeId\r\n * @param nodeId\r\n * @param portId\r\n */\n\n\nfunction deleteEdgeByPort(edgesByPort, edgeId, nodeId, portId) {\n  if (!edgesByPort.has(nodeId)) {\n    return edgesByPort;\n  }\n\n  return edgesByPort.update(nodeId, edgeByPortsMap => {\n    const edgeIds = edgeByPortsMap.get(portId);\n\n    if (!edgeIds) {\n      return edgeByPortsMap;\n    }\n\n    const set = new Set(edgeIds);\n    set.delete(edgeId);\n    return new Map(edgeByPortsMap).set(portId, set);\n  });\n}\n\nvar CanvasMouseMode;\n\n(function (CanvasMouseMode) {\n  CanvasMouseMode[\"Pan\"] = \"Pan\";\n  CanvasMouseMode[\"Select\"] = \"Select\";\n})(CanvasMouseMode || (CanvasMouseMode = {}));\n\nvar GraphBehavior;\n\n(function (GraphBehavior) {\n  GraphBehavior[\"Default\"] = \"default\";\n  GraphBehavior[\"Dragging\"] = \"dragging\";\n  GraphBehavior[\"Panning\"] = \"panning\";\n  GraphBehavior[\"MultiSelect\"] = \"multiSelect\";\n  GraphBehavior[\"Connecting\"] = \"connecting\";\n  GraphBehavior[\"AddingNode\"] = \"addingNode\";\n})(GraphBehavior || (GraphBehavior = {}));\n\n/**\r\n * @param a\r\n * @param b\r\n */\nfunction arrayEquals(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  } // eslint-disable-next-line no-plusplus\n\n\n  for (let i = 0; i < a.length; i++) {\n    if (!Object.is(a[i], b[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\r\n * @param min\r\n * @param max\r\n * @param value\r\n */\nfunction clamp(min, max, value) {\n  if (min > value) {\n    return min;\n  }\n\n  if (max < value) {\n    return max;\n  }\n\n  return value;\n}\n\n/**\r\n * @param v\r\n */\nfunction isDef(v) {\n  return v !== undefined && v !== null;\n}\n\nconst debounce = (callback, timeout, options) => {\n  const {\n    instance,\n    maxWait\n  } = options || {};\n  let timer = 0;\n  let firstInvokeTime;\n  return (...args) => {\n    window.clearTimeout(timer);\n\n    if (isDef(maxWait)) {\n      const now = Date.now();\n\n      if (!isDef(firstInvokeTime)) {\n        firstInvokeTime = now;\n      } else {\n        if (now - firstInvokeTime >= maxWait) {\n          firstInvokeTime = undefined;\n          invokeCallback(args);\n          return;\n        }\n      }\n    }\n\n    timer = window.setTimeout(() => {\n      invokeCallback(args);\n    }, timeout);\n  };\n  /**\r\n   * @param args\r\n   */\n\n  function invokeCallback(args) {\n    callback.apply(instance, args);\n  }\n};\n\nconst diffGraphEdge = (preData, data) => {\n  const isAdded = data.edges.length > preData.edges.length;\n  const larger = isAdded ? data : preData;\n  const smaller = isAdded ? preData : data;\n  const edgeIdSet = new Set();\n  smaller.edges.forEach(n => edgeIdSet.add(n.id));\n  const edges = larger.edges.filter(n => !edgeIdSet.has(n.id));\n  return {\n    isAdded,\n    edges\n  };\n};\n\nconst diffGraphNode = (preData, data) => {\n  const isAdded = data.nodes.length > preData.nodes.length;\n  const larger = isAdded ? data : preData;\n  const smaller = isAdded ? preData : data;\n  const nodeIdSet = new Set();\n  smaller.nodes.forEach(n => nodeIdSet.add(n.id));\n  const nodes = larger.nodes.filter(n => !nodeIdSet.has(n.id));\n  return {\n    isAdded,\n    nodes\n  };\n};\n\n/**\r\n * one action can just add ports or remove ports,\r\n * can not add some ports meanwhile remove some ports\r\n */\nconst diffGraphPort = (preData, data) => {\n  const prePortIdSet = new Set();\n  const preNodes = new Map();\n  const portIdSet = new Set();\n  const nodes = new Map();\n  const CONNECT = \"--CONNECT--\";\n  preData.nodes.forEach(n => {\n    preNodes.set(n.id, n);\n\n    if (n.ports) {\n      n.ports.forEach(p => prePortIdSet.add(`${n.id}${CONNECT}${p.id}`));\n    }\n  });\n  data.nodes.forEach(n => {\n    nodes.set(n.id, n);\n\n    if (n.ports) {\n      n.ports.forEach(p => portIdSet.add(`${n.id}${CONNECT}${p.id}`));\n    }\n  });\n  const isAdded = portIdSet.size > prePortIdSet.size;\n  const small = isAdded ? prePortIdSet : portIdSet;\n  const large = isAdded ? portIdSet : prePortIdSet;\n  const largeNodes = isAdded ? nodes : preNodes;\n  const map = new Map();\n  large.forEach(id => {\n    var _a;\n\n    if (!small.has(id)) {\n      const [nodeId, portId] = id.split(CONNECT);\n      const node = largeNodes.get(nodeId);\n\n      if (node && node.ports) {\n        if (!map.get(nodeId)) {\n          map.set(nodeId, {\n            node,\n            ports: []\n          });\n        }\n\n        const [port] = node.ports.filter(p => p.id === portId);\n        (_a = map.get(nodeId)) === null || _a === void 0 ? void 0 : _a.ports.push(port);\n      }\n    }\n  });\n  const diffPorts = Array.from(map.values());\n  return {\n    isAdded,\n    diffPorts\n  };\n};\n\nconst emptyArrayInstance = [];\n/**\r\n *\r\n */\n\nfunction constantEmptyArray() {\n  return emptyArrayInstance;\n}\n\nfunction isEdgeEvent(event) {\n  return event.type.startsWith(\"onEdge\");\n}\nfunction isNodeEvent(event) {\n  return event.type.startsWith(\"onNode\");\n}\nfunction isPortEvent(event) {\n  return event.type.startsWith(\"onPort\");\n}\nfunction isCanvasEvent(event) {\n  return event.type.startsWith(\"onCanvas\");\n}\n\n/**\r\n * Critical path method\r\n */\nlet maxCost;\nclass Task {\n  constructor(name, cost, dependencies) {\n    // the earliest start\n    this.earlyStart = 0; // the latest start\n\n    this.latestStart = 0; // the latest finish\n\n    this.latestFinish = 0; // the cost of the task along the critical path\n\n    this.criticalCost = 0; // the tasks on which this task is dependant\n\n    this.dependencies = new Set();\n    this.name = name;\n    this.cost = cost;\n    dependencies === null || dependencies === void 0 ? void 0 : dependencies.forEach(t => {\n      this.dependencies.add(t);\n    });\n    this.earlyFinish = -1;\n  }\n\n  isDependent(t) {\n    if (this.dependencies.has(t)) {\n      return true;\n    }\n\n    return Array.from(this.dependencies).some(dep => dep.isDependent(t));\n  }\n\n}\nconst criticalPath = tasks => {\n  const completed = new Set();\n  const remaining = new Set(tasks); // while there are tasks whose critical cost isn't calculated.\n\n  while (remaining.size !== 0) {\n    let progress = false; // find a new task to calculate\n\n    remaining.forEach(task => {\n      if (containAll(completed, task.dependencies)) {\n        let critical = 0;\n        task.dependencies.forEach(t => {\n          if (t.criticalCost > critical) {\n            critical = t.criticalCost;\n          }\n        });\n        task.criticalCost = critical + task.cost;\n        completed.add(task);\n        remaining.delete(task);\n        progress = true;\n      }\n    });\n\n    if (!progress) {\n      throw new Error(\"Cyclic dependency, algorithm stopped!\");\n    }\n  }\n\n  getMaxCost(tasks);\n  calculateEarly(tasks); // get the tasks\n\n  const ret = Array.from(completed);\n  ret.sort((o1, o2) => {\n    const i = o2.criticalCost - o1.criticalCost;\n\n    if (i !== 0) {\n      return i;\n    }\n\n    if (o1.isDependent(o2)) {\n      return -1;\n    }\n\n    if (o2.isDependent(o1)) {\n      return 1;\n    }\n\n    return 0;\n  });\n  return ret[0];\n};\n\nconst setEarly = task => {\n  const completionTime = task.earlyFinish;\n  task.dependencies.forEach(t => {\n    if (completionTime >= t.earlyStart) {\n      t.earlyStart = completionTime;\n      t.earlyFinish = completionTime + t.cost;\n    }\n\n    setEarly(t);\n  });\n};\n\nconst setLatest = task => {\n  task.latestStart = maxCost - task.criticalCost;\n  task.latestFinish = task.latestStart + task.cost;\n};\n\nconst calculateEarly = tasks => {\n  tasks.forEach(t => {\n    t.earlyStart = 0;\n    t.earlyFinish = t.cost;\n    setEarly(t);\n  });\n};\n\nconst getMaxCost = tasks => {\n  let max = -1;\n  tasks.forEach(t => {\n    if (t.criticalCost > max) {\n      max = t.criticalCost;\n    }\n  });\n  maxCost = max;\n  tasks.forEach(t => {\n    setLatest(t);\n  });\n};\n\nconst containAll = (AllItems, items) => {\n  return Array.from(items).every(item => AllItems.has(item));\n};\n\nconst getTopoSortingNodes = canvasData => {\n  const {\n    edges,\n    nodes\n  } = canvasData;\n\n  if (!nodes.length) {\n    return [];\n  }\n\n  if (!edges.length) {\n    return [...nodes];\n  }\n\n  const edgesForTopo = edges.map(edge => [edge.source, edge.target]);\n  const nodesForTopo = nodes.map(node => node.id);\n  const orderOfNodeIds = toposort.array(nodesForTopo, edgesForTopo);\n  const newNodes = [];\n  orderOfNodeIds.forEach(id => {\n    const node = nodes.find(it => it.id === id);\n\n    if (node) {\n      newNodes.push(node);\n    }\n  });\n  return newNodes;\n};\n\nconst getCriticalPath = (canvasData, durations, isNodesSorted) => {\n  const {\n    edges\n  } = canvasData;\n  const nodesSorted = isNodesSorted ? [...canvasData.nodes] : getTopoSortingNodes(canvasData);\n  const allTasks = new Set();\n  const curAllTasksMap = new Map();\n  nodesSorted.reverse().forEach(node => {\n    allTasks === null || allTasks === void 0 ? void 0 : allTasks.forEach(t => {\n      if (!curAllTasksMap.has(t.name)) {\n        curAllTasksMap.set(t.name, t);\n      }\n    });\n    const task = new Task(node.id, durations.get(node.id) || 0, getSuccessors(node.id, edges, curAllTasksMap));\n    allTasks.add(task);\n  });\n  const path = criticalPath(allTasks);\n  const result = new Map();\n  markCriticalPath(path, result, true);\n  return result;\n};\nconst markCriticalPath = (path, ret, isCritical = true, parentTask) => {\n  var _a; // set as critical, only if it's parent task is in the critical path\n\n\n  if (isCritical && (!parentTask || ((_a = ret.get(parentTask.name)) === null || _a === void 0 ? void 0 : _a.isCritical))) {\n    ret.set(path.name, {\n      task: path,\n      isCritical\n    });\n  } else if (!ret.has(path.name)) {\n    ret.set(path.name, {\n      task: path,\n      isCritical: false\n    });\n  }\n\n  const {\n    dependencies\n  } = path;\n\n  if (dependencies.size) {\n    const criticalCostTask = getMaxCriticalCostTask(path.dependencies);\n    markCriticalPath(criticalCostTask, ret, true, path);\n    dependencies.forEach(t => {\n      if (criticalCostTask.name !== t.name) {\n        markCriticalPath(t, ret, false, path);\n      }\n    });\n  }\n}; // get max \"criticalCost\" task among the dependencies\n\nconst getMaxCriticalCostTask = tasks => {\n  let max = -Infinity;\n  let criticalTask = tasks.values().next().value;\n  tasks.forEach(t => {\n    if (t.criticalCost > max) {\n      max = t.criticalCost;\n      criticalTask = t;\n    }\n  });\n  return criticalTask;\n}; // get successor dependencies\n\n\nconst getSuccessors = (nodeId, edges, allTasksMap) => {\n  const successors = new Set();\n  edges.forEach(e => {\n    if (nodeId === e.source) {\n      const task = allTasksMap.get(e.target);\n\n      if (task) {\n        successors.add(task);\n      }\n    }\n  });\n  return successors;\n};\n\nconst checkRectIntersect = (rectA, rectB) => {\n  const isALeftOfB = rectA.maxX < rectB.minX;\n  const isARightOfB = rectA.minX > rectB.maxX;\n  const isABelowB = rectA.minY > rectB.maxY;\n  const isAAboveB = rectA.maxY < rectB.minY;\n  return !(isALeftOfB || isARightOfB || isABelowB || isAAboveB);\n};\nconst isPointInRect = (rect, point) => {\n  const {\n    minX,\n    minY,\n    maxX,\n    maxY\n  } = rect;\n  const {\n    x,\n    y\n  } = point;\n  return x > minX && x < maxX && y > minY && y < maxY;\n};\n\nconst square = x => Math.pow(x, 2);\n\nconst distance = (x1, y1, x2, y2) => {\n  return Math.sqrt(square(x2 - x1) + square(y2 - y1));\n};\nconst getLinearFunction = (x1, y1, x2, y2) => {\n  if (x1 === x2) {\n    return () => Number.MAX_SAFE_INTEGER;\n  }\n\n  return x => (y2 - y1) / (x2 - x1) * x + (y1 * x2 - y2 * x1) / (x2 - x1);\n};\n/**\r\n * (y1 - y2) * x + (x2 - x1) * y + (x1 * y2 - x2 * y1) = 0\r\n * a = y1 - y2\r\n * b = -(x2 - x1) = x1 - x2\r\n * c = -(x1 * y2 - x2 * y1) = x2 * y1 - x1 * y2\r\n *\r\n * a * x - b * y = c\r\n * x = (b * y + c) / a\r\n * y = (a * x - c) / b\r\n */\n\nclass LinearEquation {\n  constructor(x1, y1, x2, y2) {\n    this.a = y1 - y2;\n    this.b = x1 - x2;\n    this.c = x2 * y1 - x1 * y2;\n  }\n\n  getX(y) {\n    if (this.a === 0) {\n      return undefined;\n    }\n\n    return (this.b * y + this.c) / this.a;\n  }\n\n  getY(x) {\n    if (this.b === 0) {\n      return undefined;\n    }\n\n    return (this.a * x - this.c) / this.b;\n  }\n\n}\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nconst shallowEqual = (a, b) => {\n  if (!a) {\n    return false;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0; i < a.length; i += 1) {\n    if (!is(a[i], b[i])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nfunction memoize(f, selector) {\n  let prev;\n  let value;\n  return (...args) => {\n    const selectedArgs = selector ? Array.isArray(selector) ? selector : selector.apply(undefined, args) : args;\n\n    if (shallowEqual(prev, selectedArgs)) {\n      return value;\n    }\n\n    prev = selectedArgs;\n    value = f.apply(undefined, args);\n    return value;\n  };\n}\n\nvar Direction;\n\n(function (Direction) {\n  Direction[Direction[\"X\"] = 0] = \"X\";\n  Direction[Direction[\"Y\"] = 1] = \"Y\";\n  /**\r\n   * zoom to fit in the X and Y directions, maybe the scaleX and the scaleY will different\r\n   */\n\n  Direction[Direction[\"XY\"] = 2] = \"XY\";\n})(Direction || (Direction = {}));\n\nconst isViewportComplete = viewport => {\n  return !!viewport.rect;\n};\nconst isViewportEmpty = viewport => {\n  if (!isViewportComplete(viewport)) {\n    return true;\n  }\n\n  return !viewport.rect.width || !viewport.rect.height;\n};\nconst getNodeRect = (node, graphConfig) => {\n  const {\n    x,\n    y\n  } = node;\n  const {\n    width,\n    height\n  } = getNodeSize(node, graphConfig);\n  return {\n    x,\n    y,\n    width,\n    height\n  };\n};\nconst isNodeVisible = (node, viewport, graphConfig) => {\n  return isRectVisible(getNodeRect(node, graphConfig), viewport);\n};\nconst isRectVisible = (shapeRect, viewport) => {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = shapeRect;\n  return isPointVisible({\n    x,\n    y\n  }, viewport) || isPointVisible({\n    x: x + width,\n    y\n  }, viewport) || isPointVisible({\n    x: x + width,\n    y: y + height\n  }, viewport) || isPointVisible({\n    x,\n    y: y + height\n  }, viewport);\n};\nconst isPointVisible = (point, viewport) => {\n  const {\n    x,\n    y\n  } = getContainerClientPoint(point.x, point.y, viewport);\n  const {\n    height,\n    width\n  } = viewport.rect;\n  return x > 0 && x < width && y > 0 && y < height;\n};\nconst getVisibleNodes = (nodes, viewport, graphConfig) => {\n  const result = [];\n  nodes.forEach(n => {\n    if (isNodeVisible(n, viewport, graphConfig)) {\n      result.push(n.inner);\n    }\n  });\n  return result;\n}; // Get rendered nodes count\n\nconst getRenderedNodes = (nodes, viewport) => {\n  const result = [];\n  const renderedArea = getRenderedArea(viewport);\n  nodes.forEach(n => {\n    if (isNodeInRenderedArea(n, renderedArea)) {\n      result.push(n.inner);\n    }\n  });\n  return result;\n};\n\nconst isNodeInRenderedArea = (node, renderedArea) => {\n  return isPointInRect(renderedArea, node);\n}; // Get rendered edges count\n\n\nconst getRenderedEdges = (edges, nodes, graphConfig, viewport) => {\n  const result = [];\n  const renderedArea = getRenderedArea(viewport);\n  edges.forEach(e => {\n    const edgeCoordinate = getEdgeSourceTargetCoordinate(e, nodes, graphConfig);\n\n    if (edgeCoordinate.source && edgeCoordinate.target && isEdgeInRenderedArea(edgeCoordinate.source, edgeCoordinate.target, renderedArea)) {\n      result.push(e.inner);\n    }\n  });\n  return result;\n};\n\nconst isEdgeInRenderedArea = (source, target, renderedArea) => {\n  const isSourceVisible = isPointInRect(renderedArea, source);\n  const isTargetVisible = isPointInRect(renderedArea, target);\n  return isSourceVisible || isTargetVisible;\n};\n\nconst getVisibleArea = viewport => {\n  if (!isViewportComplete(viewport)) {\n    return {\n      minX: 0,\n      minY: 0,\n      maxX: 0,\n      maxY: 0\n    };\n  }\n\n  const {\n    rect,\n    transformMatrix\n  } = viewport;\n  const minX = 0;\n  const minY = 0;\n  const maxX = rect.width;\n  const maxY = rect.height;\n  const min = reverseTransformPoint(minX, minY, transformMatrix);\n  const max = reverseTransformPoint(maxX, maxY, transformMatrix);\n  return {\n    minX: min.x,\n    minY: min.y,\n    maxX: max.x,\n    maxY: max.y\n  };\n};\nconst getRenderedArea = viewport => {\n  if (!isViewportComplete(viewport)) {\n    return {\n      minX: 0,\n      minY: 0,\n      maxX: 0,\n      maxY: 0\n    };\n  }\n\n  const {\n    rect,\n    transformMatrix\n  } = viewport;\n  const minX = 0;\n  const minY = 0;\n  const maxX = rect.width;\n  const maxY = rect.height;\n  const min = reverseTransformPoint(minX - rect.width, minY - rect.height, transformMatrix);\n  const max = reverseTransformPoint(maxX + rect.width, maxY + rect.height, transformMatrix);\n  return {\n    minX: min.x,\n    minY: min.y,\n    maxX: max.x,\n    maxY: max.y\n  };\n};\nconst getEdgeSourceTargetCoordinate = (edge, nodes, graphConfig) => {\n  var _a, _b;\n\n  return {\n    source: (_a = nodes.get(edge.source)) === null || _a === void 0 ? void 0 : _a.getPortPosition(edge.sourcePortId, graphConfig),\n    target: (_b = nodes.get(edge.target)) === null || _b === void 0 ? void 0 : _b.getPortPosition(edge.targetPortId, graphConfig)\n  };\n};\n\nconst normalizeSpacing = spacing => {\n  if (!spacing) {\n    return {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    };\n  }\n\n  if (typeof spacing === \"number\") {\n    return {\n      top: spacing,\n      right: spacing,\n      bottom: spacing,\n      left: spacing\n    };\n  }\n\n  return Object.assign({\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }, spacing);\n};\n/**\r\n * zoom to [scale]\r\n */\n\n\nconst zoomTo = ({\n  scale,\n  anchor,\n  direction,\n  limitScale\n}) => {\n  return prevState => {\n    const scaleX = limitScale(scale) / prevState.transformMatrix[0];\n    const scaleY = limitScale(scale) / prevState.transformMatrix[3];\n    const {\n      x,\n      y\n    } = anchor;\n    const dx = x * (1 - scaleX);\n    const dy = y * (1 - scaleY);\n    let transformMatrix;\n\n    switch (direction) {\n      case Direction.X:\n        transformMatrix = [scale, 0, 0, prevState.transformMatrix[3], prevState.transformMatrix[4] * scaleX + dx, prevState.transformMatrix[5]];\n        break;\n\n      case Direction.Y:\n        transformMatrix = [prevState.transformMatrix[0], 0, 0, scale, prevState.transformMatrix[4], prevState.transformMatrix[5] * scaleY + dy];\n        break;\n\n      case Direction.XY:\n      default:\n        transformMatrix = [scale, 0, 0, scale, prevState.transformMatrix[4] * scaleX + dx, prevState.transformMatrix[5] * scaleY + dy];\n    }\n\n    return Object.assign(Object.assign({}, prevState), {\n      transformMatrix\n    });\n  };\n};\nconst zoom = ({\n  scale,\n  anchor,\n  direction,\n  limitScale\n}) => {\n  if (scale === 1) {\n    return identical;\n  }\n\n  return prevState => {\n    let transformMatrix;\n\n    switch (direction) {\n      case Direction.X:\n        return zoomTo({\n          anchor,\n          direction,\n          limitScale,\n          scale: prevState.transformMatrix[0] * scale\n        })(prevState);\n\n      case Direction.Y:\n        return zoomTo({\n          anchor,\n          direction,\n          limitScale,\n          scale: prevState.transformMatrix[3] * scale\n        })(prevState);\n\n      case Direction.XY:\n      default:\n        {\n          const resultX = limitScale(prevState.transformMatrix[0] * scale);\n          const resultY = limitScale(prevState.transformMatrix[3] * scale);\n          const scaleX = resultX / prevState.transformMatrix[0];\n          const scaleY = resultY / prevState.transformMatrix[3];\n          const {\n            x,\n            y\n          } = anchor;\n          const dx = x * (1 - scaleX);\n          const dy = y * (1 - scaleY);\n          transformMatrix = [resultX, 0, 0, resultY, prevState.transformMatrix[4] * scaleX + dx, prevState.transformMatrix[5] * scaleY + dy];\n        }\n    }\n\n    return Object.assign(Object.assign({}, prevState), {\n      transformMatrix\n    });\n  };\n};\nconst pan = (dx, dy) => {\n  if (dx === 0 && dy === 0) {\n    return identical;\n  }\n\n  return prevState => {\n    return Object.assign(Object.assign({}, prevState), {\n      transformMatrix: [prevState.transformMatrix[0], prevState.transformMatrix[1], prevState.transformMatrix[2], prevState.transformMatrix[3], prevState.transformMatrix[4] + dx, prevState.transformMatrix[5] + dy]\n    });\n  };\n};\nconst minimapPan = (dx, dy) => {\n  if (dx === 0 && dy === 0) {\n    return identical;\n  }\n\n  return prevState => {\n    const [a, b, c, d] = prevState.transformMatrix;\n    return Object.assign(Object.assign({}, prevState), {\n      transformMatrix: [a, b, c, d, prevState.transformMatrix[4] + a * dx + b * dy, prevState.transformMatrix[5] + c * dx + d * dy]\n    });\n  };\n};\nconst getContentArea$1 = (data, graphConfig, nodeIds) => {\n  let minNodeWidth = Infinity;\n  let minNodeHeight = Infinity;\n  let minNodeX = Infinity;\n  let minNodeY = Infinity;\n  let maxNodeX = -Infinity;\n  let maxNodeY = -Infinity;\n\n  const forEachNode = fn => data.nodes.forEach(fn);\n\n  const forEachByIds = fn => nodeIds === null || nodeIds === void 0 ? void 0 : nodeIds.forEach(id => {\n    const node = data.nodes.get(id);\n\n    if (node) {\n      fn(node);\n    }\n  });\n\n  const forEach = nodeIds === undefined ? forEachNode : forEachByIds;\n  forEach(node => {\n    const {\n      width: nodeWidth,\n      height: nodeHeight\n    } = getNodeSize(node, graphConfig);\n\n    if (node.x < minNodeX) {\n      minNodeX = node.x;\n    }\n\n    if (node.y < minNodeY) {\n      minNodeY = node.y;\n    }\n\n    if (node.x + nodeWidth > maxNodeX) {\n      maxNodeX = node.x + nodeWidth;\n    }\n\n    if (node.y + nodeHeight > maxNodeY) {\n      maxNodeY = node.y + nodeHeight;\n    }\n\n    if (nodeWidth < minNodeWidth) {\n      minNodeWidth = nodeWidth;\n    }\n\n    if (nodeHeight < minNodeHeight) {\n      minNodeHeight = nodeHeight;\n    }\n  });\n  return {\n    minNodeWidth,\n    minNodeHeight,\n    minNodeX,\n    minNodeY,\n    maxNodeX,\n    maxNodeY\n  };\n};\n\nconst normalizeNodeVisibleMinMax = ({\n  nodeMinVisibleSize,\n  nodeMaxVisibleSize\n}) => {\n  let {\n    width: nodeMinVisibleWidth,\n    height: nodeMinVisibleHeight\n  } = nodeMinVisibleSize;\n  let {\n    width: nodeMaxVisibleWidth,\n    height: nodeMaxVisibleHeight\n  } = nodeMaxVisibleSize;\n\n  if (nodeMinVisibleWidth > nodeMaxVisibleWidth) {\n    const temp = nodeMinVisibleWidth;\n    nodeMinVisibleWidth = nodeMaxVisibleWidth;\n    nodeMaxVisibleWidth = temp;\n  }\n\n  if (nodeMinVisibleHeight > nodeMaxVisibleHeight) {\n    const temp = nodeMinVisibleHeight;\n    nodeMinVisibleHeight = nodeMaxVisibleHeight;\n    nodeMaxVisibleHeight = temp;\n  }\n\n  return {\n    nodeMinVisibleWidth,\n    nodeMinVisibleHeight,\n    nodeMaxVisibleWidth,\n    nodeMaxVisibleHeight\n  };\n};\n\nconst getScaleRange = (params, {\n  width: minNodeWidth,\n  height: minNodeHeight\n}) => {\n  const {\n    nodeMinVisibleWidth,\n    nodeMinVisibleHeight,\n    nodeMaxVisibleWidth,\n    nodeMaxVisibleHeight\n  } = normalizeNodeVisibleMinMax(params);\n  let minScaleX = 0;\n  let minScaleY = 0;\n  let maxScaleX = Infinity;\n  let maxScaleY = Infinity;\n\n  if (minNodeWidth) {\n    minScaleX = nodeMinVisibleWidth / minNodeWidth;\n    maxScaleX = nodeMaxVisibleWidth / minNodeWidth;\n  }\n\n  if (minNodeHeight) {\n    minScaleY = nodeMinVisibleHeight / minNodeHeight;\n    maxScaleY = nodeMaxVisibleHeight / minNodeHeight;\n  }\n\n  return {\n    minScaleX,\n    minScaleY,\n    maxScaleX,\n    maxScaleY\n  };\n};\nconst getZoomFitMatrix = args => {\n  const {\n    data,\n    graphConfig,\n    disablePan,\n    direction,\n    rect\n  } = args;\n  const {\n    nodes\n  } = data; // istanbul ignore next\n\n  if (nodes.size === 0) {\n    return [1, 0, 0, 1, 0, 0];\n  }\n\n  const {\n    minNodeWidth,\n    minNodeHeight,\n    minNodeX,\n    minNodeY,\n    maxNodeX,\n    maxNodeY\n  } = getContentArea$1(data, graphConfig);\n  const {\n    minScaleX,\n    minScaleY,\n    maxScaleX,\n    maxScaleY\n  } = getScaleRange(args, {\n    width: minNodeWidth,\n    height: minNodeHeight\n  });\n  const spacing = normalizeSpacing(args.spacing);\n  const {\n    width,\n    height\n  } = rect;\n  const scaleX = width / (maxNodeX - minNodeX + spacing.left + spacing.right);\n  const scaleY = height / (maxNodeY - minNodeY + spacing.top + spacing.bottom);\n  const scaleCommon = direction === Direction.Y ? Math.min(Math.max(minScaleX, minScaleY, scaleY), maxScaleX, maxScaleY) : Math.min(Math.max(minScaleX, minScaleY, Math.min(scaleX, scaleY)), maxScaleY, maxScaleY);\n  const newScaleX = direction === Direction.XY ? Math.min(Math.max(minScaleX, scaleX), maxScaleX) : scaleCommon;\n  const newScaleY = direction === Direction.XY ? Math.min(Math.max(minScaleY, scaleY), maxScaleY) : scaleCommon;\n\n  if (disablePan) {\n    return [newScaleX, 0, 0, newScaleY, 0, 0];\n  }\n\n  const dx = -newScaleX * (minNodeX - spacing.left);\n  const dy = -newScaleY * (minNodeY - spacing.top);\n  const visibleNodes = getVisibleNodes(data.nodes, {\n    rect,\n    transformMatrix: [newScaleX, 0, 0, newScaleY, dx, dy]\n  }, graphConfig);\n\n  if (visibleNodes.length > 0) {\n    return [newScaleX, 0, 0, newScaleY, dx, dy];\n  } // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n\n  let focusNode = data.nodes.first();\n\n  if (focusNode) {\n    data.nodes.forEach(node => {\n      if (focusNode.y > node.y) {\n        focusNode = node;\n      }\n    });\n  }\n\n  return [newScaleX, 0, 0, newScaleY, -newScaleX * (focusNode.x - spacing.left), -newScaleY * (focusNode.y - spacing.top)];\n};\nconst focusArea = (minX, minY, maxX, maxY, viewport) => {\n  const width = maxX - minX;\n  const height = maxY - minY;\n  const scale = Math.min(viewport.rect.width / width, viewport.rect.height / height);\n  const dx = -scale * (minX + width / 2) + viewport.rect.width / 2;\n  const dy = -scale * (minY + height / 2) + viewport.rect.height / 2;\n  return Object.assign(Object.assign({}, viewport), {\n    transformMatrix: [scale, 0, 0, scale, dx, dy]\n  });\n};\nconst getContainer = svgRef => {\n  var _a;\n\n  return (_a = svgRef.current) === null || _a === void 0 ? void 0 : _a.closest(\".react-dag-editor-container\");\n};\n/**\r\n * @param rectRef\r\n */\n\nfunction getContainerCenter(rectRef) {\n  const rect = rectRef.current;\n\n  if (!rect) {\n    return undefined;\n  }\n\n  const x = rect.width / 2;\n  const y = rect.height / 2;\n  return {\n    x,\n    y\n  };\n}\n/**\r\n * @param rect\r\n * @param e\r\n */\n\nfunction getRelativePoint(rect, e) {\n  const x = e.clientX - rect.left;\n  const y = e.clientY - rect.top;\n  return {\n    x,\n    y\n  };\n} // scroll the (x,y) to the center of the viewport, or to the specific position if provide\n\nconst scrollIntoView = (x, y, rect, alwaysScroll, position) => {\n  // istanbul ignore next\n  if (!rect) {\n    return identical;\n  }\n\n  const {\n    width,\n    height\n  } = rect;\n  const shouldScroll = x < 0 || x > width || y < 0 || y > height;\n\n  if (!shouldScroll && !alwaysScroll) {\n    return identical;\n  }\n\n  return prevState => {\n    const dx = position ? position.x - x : width / 2 - x;\n    const dy = position ? position.y - y : height / 2 - y;\n    return Object.assign(Object.assign({}, prevState), {\n      transformMatrix: [prevState.transformMatrix[0], prevState.transformMatrix[1], prevState.transformMatrix[2], prevState.transformMatrix[3], prevState.transformMatrix[4] + dx, prevState.transformMatrix[5] + dy]\n    });\n  };\n};\nconst getScaleLimit = (data, settings) => {\n  const {\n    minNodeWidth,\n    minNodeHeight\n  } = getContentArea$1(data, settings.graphConfig);\n  const {\n    minScaleX,\n    minScaleY\n  } = getScaleRange(settings, {\n    width: minNodeWidth,\n    height: minNodeHeight\n  });\n  return Math.max(minScaleX, minScaleY);\n};\n\nconst getContentArea = memoize(getContentArea$1);\nconst getOffsetLimit = ({\n  data,\n  graphConfig,\n  rect,\n  transformMatrix,\n  canvasBoundaryPadding,\n  groupPadding\n}) => {\n  var _a, _b, _c, _d;\n\n  const contentArea = getContentArea(data, graphConfig);\n  const nodeMin = getClientDeltaByPointDelta(contentArea.minNodeX - ((groupPadding === null || groupPadding === void 0 ? void 0 : groupPadding.left) || 0), contentArea.minNodeY - ((groupPadding === null || groupPadding === void 0 ? void 0 : groupPadding.top) || 0), transformMatrix);\n  nodeMin.x -= (_a = canvasBoundaryPadding === null || canvasBoundaryPadding === void 0 ? void 0 : canvasBoundaryPadding.left) !== null && _a !== void 0 ? _a : 0;\n  nodeMin.y -= (_b = canvasBoundaryPadding === null || canvasBoundaryPadding === void 0 ? void 0 : canvasBoundaryPadding.top) !== null && _b !== void 0 ? _b : 0;\n  const nodeMax = getClientDeltaByPointDelta(contentArea.maxNodeX + ((groupPadding === null || groupPadding === void 0 ? void 0 : groupPadding.right) || 0), contentArea.maxNodeY + ((groupPadding === null || groupPadding === void 0 ? void 0 : groupPadding.bottom) || 0), transformMatrix);\n  nodeMax.x += (_c = canvasBoundaryPadding === null || canvasBoundaryPadding === void 0 ? void 0 : canvasBoundaryPadding.right) !== null && _c !== void 0 ? _c : 0;\n  nodeMax.y += (_d = canvasBoundaryPadding === null || canvasBoundaryPadding === void 0 ? void 0 : canvasBoundaryPadding.bottom) !== null && _d !== void 0 ? _d : 0;\n  let minX = -nodeMin.x || 0;\n  let minY = -nodeMin.y || 0;\n  let maxX = rect.width - nodeMax.x || 0;\n  let maxY = rect.height - nodeMax.y || 0;\n\n  if (maxX < minX) {\n    const temp = maxX;\n    maxX = minX;\n    minX = temp;\n  }\n\n  if (maxY < minY) {\n    const temp = maxY;\n    maxY = minY;\n    minY = temp;\n  }\n\n  return {\n    minX,\n    minY,\n    maxX,\n    maxY\n  };\n};\n\nconst pushHistory = (history, data, mapPresent = identical) => {\n  return {\n    present: data,\n    past: {\n      next: history.past,\n      value: mapPresent(history.present)\n    },\n    future: null\n  };\n};\nconst undo = history => {\n  if (!history.past) {\n    return history;\n  }\n\n  return {\n    present: history.past.value,\n    past: history.past.next,\n    future: {\n      next: history.future,\n      value: history.present\n    }\n  };\n};\nconst redo = history => {\n  if (!history.future) {\n    return history;\n  }\n\n  return {\n    present: history.future.value,\n    past: {\n      next: history.past,\n      value: history.present\n    },\n    future: history.future.next\n  };\n};\nconst resetUndoStack = data => {\n  return {\n    present: data,\n    future: null,\n    past: null\n  };\n};\nconst canUndo = history => history.past !== null;\nconst canRedo = history => history.future !== null;\n\nconst isWithinThreshold = (dx, dy, threshold) => {\n  return Math.abs(dx) < threshold && Math.abs(dy) < threshold;\n};\nconst isWithinRect = (p0, p, w, h) => {\n  const {\n    x: x0,\n    y: y0\n  } = p0;\n  const {\n    x,\n    y\n  } = p;\n\n  if (x0 < x && x0 + w > x && y0 < y && y0 + h > y) {\n    return true;\n  }\n\n  return false;\n};\n\nfunction stopPropagation(e) {\n  e.stopPropagation();\n}\n\n/**\r\n * @param valueOrCallback\r\n * @param c\r\n */\nfunction resolveValueOrCallback(valueOrCallback, c) {\n  if (typeof valueOrCallback === \"function\") {\n    return valueOrCallback(c);\n  }\n\n  return valueOrCallback;\n}\n\nconst EMPTY_TRANSFORM_MATRIX = [1, 0, 0, 1, 0, 0];\nconst EMPTY_VIEW_PORT = {\n  rect: undefined,\n  transformMatrix: EMPTY_TRANSFORM_MATRIX\n};\nconst EMPTY_GAP = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\nconst DEFAULT_NODE_MIN_VISIBLE_SIZE = {\n  width: NODE_MIN_VISIBLE_LENGTH,\n  height: NODE_MIN_VISIBLE_LENGTH\n};\nconst DEFAULT_NODE_MAX_VISIBLE_SIZE = {\n  width: NODE_MAX_VISIBLE_LENGTH,\n  height: NODE_MAX_VISIBLE_LENGTH\n};\nconst DEFAULT_GRAPH_SETTINGS = {\n  features: defaultFeatures,\n  graphConfig: GraphConfigBuilder.default().build(),\n  canvasBoundaryPadding: EMPTY_GAP,\n  nodeMinVisibleSize: DEFAULT_NODE_MIN_VISIBLE_SIZE,\n  nodeMaxVisibleSize: DEFAULT_NODE_MAX_VISIBLE_SIZE\n};\nconst EMPTY_GRAPH_STATE = createGraphState({});\nfunction createGraphState(params) {\n  const {\n    data,\n    transformMatrix,\n    settings\n  } = params;\n  return {\n    settings: Object.assign(Object.assign({}, DEFAULT_GRAPH_SETTINGS), settings),\n    data: resetUndoStack(data !== null && data !== void 0 ? data : GraphModel.empty()),\n    viewport: {\n      rect: undefined,\n      transformMatrix: transformMatrix !== null && transformMatrix !== void 0 ? transformMatrix : EMPTY_TRANSFORM_MATRIX\n    },\n    behavior: GraphBehavior.Default,\n    dummyNodes: emptyDummyNodes(),\n    alignmentLines: [],\n    activeKeys: new Set(),\n    selectBoxPosition: emptySelectBoxPosition(),\n    connectState: undefined\n  };\n}\n\nconst ViewportContext = /*#__PURE__*/createContext(EMPTY_VIEW_PORT);\n\n/**\r\n *\r\n */\n\nfunction warnGraphStateContext() {\n  Debug.warn(\"Missing GraphStateContext, GraphStateContext must be used as child of GraphStateStore\");\n}\n\nconst defaultGraphStateContext = {\n  get state() {\n    warnGraphStateContext();\n    return EMPTY_GRAPH_STATE;\n  },\n\n  dispatch: () => {\n    warnGraphStateContext();\n  }\n};\nconst EMPTY_CONNECT_STATE = {\n  sourceNode: undefined,\n  sourcePort: undefined,\n  targetNode: undefined,\n  targetPort: undefined,\n  movingPoint: {\n    x: 0,\n    y: 0\n  }\n};\n/**\r\n * use separate context for now to improve performance\r\n * until https://github.com/reactjs/rfcs/pull/119 or something equivalent\r\n */\n\nconst GraphValueContext = /*#__PURE__*/React.createContext(new Proxy(GraphModel.empty(), {\n  get: (target, prop) => {\n    // eslint-disable-next-line no-console\n    console.warn(\"Default graph data value is being used. Please check if you forget rendering Graph component\");\n    return Reflect.get(target, prop);\n  }\n}));\nconst GraphStateContext = /*#__PURE__*/React.createContext(defaultGraphStateContext);\nconst setData = (state, data) => Object.assign(Object.assign({}, state), {\n  data: Object.assign(Object.assign({}, state.data), {\n    present: data\n  })\n});\nconst updateData = (state, f) => Object.assign(Object.assign({}, state), {\n  data: Object.assign(Object.assign({}, state.data), {\n    present: f(state.data.present)\n  })\n});\n\nconst SlotsContext = /*#__PURE__*/createContext({});\n\nclass EventChannel {\n  constructor() {\n    this.listenersRef = /*#__PURE__*/createRef();\n    this.externalHandlerRef = /*#__PURE__*/createRef();\n    this.queue = [];\n    this.working = false;\n  }\n\n  trigger(event) {\n    if (this.working) {\n      this.queue.push(event);\n    } else {\n      this.working = true;\n      unstable_batchedUpdates(() => {\n        this.callHandlers(event); // eslint-disable-next-line @typescript-eslint/prefer-for-of\n\n        for (let i = 0; i < this.queue.length; i += 1) {\n          const e = this.queue[i];\n          this.callHandlers(e);\n        }\n\n        this.queue = [];\n      });\n      this.working = false;\n    }\n  }\n\n  batch(events) {\n    if (this.working) {\n      this.queue.push(...events);\n    } else {\n      const first = events[0];\n\n      if (!first) {\n        return;\n      }\n\n      this.queue.push(...events.slice(1));\n      this.trigger(first);\n    }\n  }\n\n  callHandlers(e) {\n    var _a, _b, _c, _d;\n\n    (_b = (_a = this.listenersRef).current) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n\n    if (!e.intercepted) {\n      (_d = (_c = this.externalHandlerRef).current) === null || _d === void 0 ? void 0 : _d.call(_c, e);\n    }\n  }\n\n}\n\n/**\r\n * event handlers must get/set GraphBehavior immediately\r\n * to determine how to treat event objects (eg. preventDefault)\r\n * but dispatch/setState can be asynchronous\r\n * thus GraphBehavior is mirrored here\r\n */\n\nclass GraphController {\n  constructor(state, dispatch) {\n    /**\r\n     * since we don't have a detailed specification for touch handling\r\n     * temporarily store the pointerId here for most single point events\r\n     */\n    this.pointerId = null;\n    /**\r\n     * simulate canvas click event once\r\n     */\n\n    this.canvasClickOnce = false;\n    this.nodeClickOnce = null;\n    this.eventChannel = new EventChannel();\n    this.behavior = GraphBehavior.Default;\n\n    this.dispatch = (action, callback) => {\n      this.dispatchDelegate(action, callback);\n    };\n\n    this.state = state;\n    this.UNSAFE_latestState = state;\n    this.dispatchDelegate = dispatch;\n  }\n\n  setMouseClientPosition(pos) {\n    this.mouseClientPoint = pos;\n  }\n\n  unsetMouseClientPosition() {\n    this.mouseClientPoint = undefined;\n  }\n\n  getMouseClientPosition() {\n    return this.mouseClientPoint;\n  }\n\n  getEnabledFeatures() {\n    return this.state.settings.features;\n  }\n\n  getBehavior() {\n    return this.behavior;\n  }\n\n  setBehavior(value) {\n    this.behavior = value;\n  }\n\n  getData() {\n    return this.state.data.present;\n  }\n\n  getGlobalEventTarget() {\n    var _a, _b;\n\n    return (_b = (_a = this.getGlobalEventTargetDelegate) === null || _a === void 0 ? void 0 : _a.call(this)) !== null && _b !== void 0 ? _b : window;\n  }\n\n}\n\n/**\r\n * useConst providers a guaranteed singleton\r\n * useMemo may be invalidated by React\r\n * https://reactjs.org/docs/hooks-faq.html#how-to-memoize-calculations\r\n * @param init\r\n */\n\nfunction useConst(init) {\n  const ref = useRef();\n\n  if (ref.current === undefined) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nconst noop = () => {// noop\n};\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true,\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n    this.setState({\n      error,\n      errorInfo\n    });\n  }\n\n  render() {\n    var _a, _b;\n\n    if (!this.state.hasError) {\n      return this.props.children;\n    }\n\n    if (this.props.renderOnError) {\n      return (_a = this.props.renderOnError(this.state.error, this.state.errorInfo, this.props.children)) !== null && _a !== void 0 ? _a : null;\n    }\n\n    const componentStackLines = this.state.errorInfo ? (_b = this.state.errorInfo.componentStack) === null || _b === void 0 ? void 0 : _b.split(\"\\n\") : [];\n    return jsxs(\"div\", Object.assign({\n      style: {\n        color: \"red\"\n      }\n    }, {\n      children: [jsx(\"h1\", {\n        children: \"Something went wrong.\"\n      }), jsx(\"p\", {\n        children: `Error: ${this.state.error}`\n      }), jsx(\"p\", {\n        children: `ErrorInfo: ${JSON.stringify(this.state.errorInfo)}`\n      }), jsx(\"h2\", {\n        children: \"Component Stack\"\n      }), (componentStackLines !== null && componentStackLines !== void 0 ? componentStackLines : []).map((line, index) => jsx(\"p\", {\n        children: line\n      }, index))]\n    }));\n  }\n\n}\n\nconst EMPTY_CONNECT_CONTEXT = {\n  sourceNode: undefined,\n  sourcePort: undefined,\n  targetNode: undefined,\n  targetPort: undefined\n};\nconst ConnectingStateContext = /*#__PURE__*/createContext(EMPTY_CONNECT_CONTEXT);\nConnectingStateContext.displayName = \"ConnectingStateContext\";\n\nconst ConnectingState = ({\n  children,\n  data,\n  connectState\n}) => {\n  let sourceNode;\n  let sourcePort;\n  let targetNode;\n  let targetPort;\n\n  if (connectState) {\n    sourceNode = data.nodes.get(connectState.sourceNode);\n    sourcePort = sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.getPort(connectState.sourcePort);\n    targetNode = connectState.targetNode ? data.nodes.get(connectState.targetNode) : undefined;\n    targetPort = connectState.targetPort ? targetNode === null || targetNode === void 0 ? void 0 : targetNode.getPort(connectState.targetPort) : undefined;\n  }\n\n  const context = React.useMemo(() => ({\n    sourceNode,\n    sourcePort,\n    targetNode,\n    targetPort\n  }), [sourceNode, sourcePort, targetNode, targetPort]);\n  return jsx(ConnectingStateContext.Provider, Object.assign({\n    value: context\n  }, {\n    children: children\n  }));\n};\nConnectingState.displayName = \"ConnectingState\";\n\nconst AlignmentLinesContext = /*#__PURE__*/createContext([]);\n\nconst GraphControllerContext = /*#__PURE__*/createContext(new GraphController(EMPTY_GRAPH_STATE, noop));\n\nfunction GraphStateStore(props) {\n  const {\n    graphController,\n    state,\n    dispatch,\n    children\n  } = props;\n  const contextValue = React.useMemo(() => ({\n    state: state,\n    dispatch\n  }), [state, dispatch]);\n  return jsx(GraphConfigContext.Provider, Object.assign({\n    value: state.settings.graphConfig\n  }, {\n    children: jsx(GraphControllerContext.Provider, Object.assign({\n      value: graphController\n    }, {\n      children: jsx(ConnectingState, Object.assign({\n        data: state.data.present,\n        connectState: state.connectState\n      }, {\n        children: jsx(GraphStateContext.Provider, Object.assign({\n          value: contextValue\n        }, {\n          children: jsx(ViewportContext.Provider, Object.assign({\n            value: state.viewport\n          }, {\n            children: jsx(GraphValueContext.Provider, Object.assign({\n              value: state.data.present\n            }, {\n              children: jsx(AlignmentLinesContext.Provider, Object.assign({\n                value: state.alignmentLines\n              }, {\n                children: children\n              }))\n            }))\n          }))\n        }))\n      }))\n    }))\n  }));\n}\n\n/**\r\n * ReactDagEditor top level container component\r\n *\r\n * @param props\r\n */\n\nconst ReactDagEditor = props => {\n  var _a;\n\n  React.useEffect(() => {\n    if (props.handleWarning) {\n      Debug.warn = props.handleWarning;\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  const handleError = (_a = props.handleError) === null || _a === void 0 ? void 0 : _a.bind(null);\n  const {\n    state,\n    dispatch,\n    getGlobalEventTarget\n  } = props;\n  const graphController = useConst(() => new GraphController(state, dispatch));\n  graphController.UNSAFE_latestState = state;\n  React.useLayoutEffect(() => {\n    graphController.state = state;\n    graphController.dispatchDelegate = dispatch;\n    graphController.getGlobalEventTargetDelegate = getGlobalEventTarget;\n  }, [dispatch, getGlobalEventTarget, graphController, state]);\n  React.useEffect(() => {\n    return () => {\n      graphController.dispatchDelegate = noop;\n    };\n  }, [graphController]);\n  return jsx(ErrorBoundary, Object.assign({\n    renderOnError: handleError\n  }, {\n    children: jsx(SlotsContext.Provider, Object.assign({\n      value: props\n    }, {\n      children: jsx(GraphStateStore, Object.assign({\n        state: state,\n        dispatch: dispatch,\n        graphController: graphController\n      }, {\n        children: jsx(ContextMenuConfigContext.Provider, Object.assign({\n          value: useConst(() => new ContextMenuConfig())\n        }, {\n          children: jsx(\"div\", Object.assign({\n            style: props.style,\n            className: props.className\n          }, {\n            children: props.children\n          }))\n        }))\n      }))\n    }))\n  }));\n};\n\nconst useContextMenuConfigContext = () => {\n  return React.useContext(ContextMenuConfigContext);\n};\n\nvar GraphNodeEvent;\n\n(function (GraphNodeEvent) {\n  GraphNodeEvent[\"Click\"] = \"[Node]Click\";\n  GraphNodeEvent[\"DoubleClick\"] = \"[Node]DoubleClick\";\n  GraphNodeEvent[\"MouseDown\"] = \"[Node]MouseDown\";\n  GraphNodeEvent[\"MouseUp\"] = \"[Node]MouseUp\";\n  GraphNodeEvent[\"MouseEnter\"] = \"[Node]MouseEnter\";\n  GraphNodeEvent[\"MouseLeave\"] = \"[Node]MouseLeave\";\n  GraphNodeEvent[\"MouseOver\"] = \"[Node]MouseOver\";\n  GraphNodeEvent[\"MouseOut\"] = \"[Node]MouseOut\";\n  GraphNodeEvent[\"MouseMove\"] = \"[Node]MouseMove\";\n  GraphNodeEvent[\"ContextMenu\"] = \"[Node]ContextMenu\";\n  GraphNodeEvent[\"Drag\"] = \"[Node]Drag\";\n  GraphNodeEvent[\"DragStart\"] = \"[Node]DragStart\";\n  GraphNodeEvent[\"DragEnd\"] = \"[Node]DragEnd\";\n  GraphNodeEvent[\"PointerDown\"] = \"[Node]PointerDown\";\n  GraphNodeEvent[\"PointerEnter\"] = \"[Node]PointerEnter\";\n  GraphNodeEvent[\"PointerMove\"] = \"[Node]PointerMove\";\n  GraphNodeEvent[\"PointerLeave\"] = \"[Node]PointerLeave\";\n  GraphNodeEvent[\"PointerUp\"] = \"[Node]PointerUp\";\n  GraphNodeEvent[\"Resizing\"] = \"[Node]Resizing\";\n  GraphNodeEvent[\"ResizingStart\"] = \"[Node]ResizingStart\";\n  GraphNodeEvent[\"ResizingEnd\"] = \"[Node]ResizingEnd\";\n  GraphNodeEvent[\"KeyDown\"] = \"[Node]KeyDown\";\n  GraphNodeEvent[\"Select\"] = \"[Node]Select\";\n  GraphNodeEvent[\"SelectAll\"] = \"[Node]SelectAll\";\n  GraphNodeEvent[\"Centralize\"] = \"[Node]Centralize\";\n  GraphNodeEvent[\"Locate\"] = \"[Node]Locate\";\n  GraphNodeEvent[\"Add\"] = \"[Node]Add\";\n})(GraphNodeEvent || (GraphNodeEvent = {}));\n\nvar GraphEdgeEvent;\n\n(function (GraphEdgeEvent) {\n  GraphEdgeEvent[\"Click\"] = \"[Edge]Click\";\n  GraphEdgeEvent[\"DoubleClick\"] = \"[Edge]DoubleClick\";\n  GraphEdgeEvent[\"MouseEnter\"] = \"[Edge]MouseEnter\";\n  GraphEdgeEvent[\"MouseLeave\"] = \"[Edge]MouseLeave\";\n  GraphEdgeEvent[\"MouseOver\"] = \"[Edge]MouseOver\";\n  GraphEdgeEvent[\"MouseOut\"] = \"[Edge]MouseOut\";\n  GraphEdgeEvent[\"MouseMove\"] = \"[Edge]MouseMove\";\n  GraphEdgeEvent[\"MouseDown\"] = \"[Edge]MouseDown\";\n  GraphEdgeEvent[\"MouseUp\"] = \"[Edge]MouseUp\";\n  GraphEdgeEvent[\"ContextMenu\"] = \"[Edge]ContextMenu\";\n  GraphEdgeEvent[\"ConnectStart\"] = \"[Edge]ConnectStart\";\n  GraphEdgeEvent[\"ConnectMove\"] = \"[Edge]ConnectMove\";\n  GraphEdgeEvent[\"ConnectEnd\"] = \"[Edge]ConnectEnd\";\n  GraphEdgeEvent[\"ConnectNavigate\"] = \"[Edge]ConnectNavigate\";\n  GraphEdgeEvent[\"Add\"] = \"[Edge]Add\";\n})(GraphEdgeEvent || (GraphEdgeEvent = {}));\n\nvar GraphPortEvent;\n\n(function (GraphPortEvent) {\n  GraphPortEvent[\"Click\"] = \"[Port]Click\";\n  GraphPortEvent[\"DoubleClick\"] = \"[Port]DoubleClick\";\n  GraphPortEvent[\"MouseDown\"] = \"[Port]MouseDown\";\n  GraphPortEvent[\"PointerDown\"] = \"[Port]PointerDown\";\n  GraphPortEvent[\"PointerUp\"] = \"[Port]PointerUp\";\n  GraphPortEvent[\"PointerEnter\"] = \"[Port]PointerEnter\";\n  GraphPortEvent[\"PointerLeave\"] = \"[Port]PointerLeave\";\n  GraphPortEvent[\"MouseUp\"] = \"[Port]MouseUp\";\n  GraphPortEvent[\"MouseEnter\"] = \"[Port]MouseEnter\";\n  GraphPortEvent[\"MouseLeave\"] = \"[Port]MouseLeave\";\n  GraphPortEvent[\"MouseOver\"] = \"[Port]MouseOver\";\n  GraphPortEvent[\"MouseOut\"] = \"[Port]MouseOut\";\n  GraphPortEvent[\"MouseMove\"] = \"[Port]MouseMove\";\n  GraphPortEvent[\"ContextMenu\"] = \"[Port]ContextMenu\";\n  GraphPortEvent[\"KeyDown\"] = \"[Port]KeyDown\";\n  GraphPortEvent[\"Focus\"] = \"[Port]Focus\";\n  GraphPortEvent[\"Blur\"] = \"[Port]Blur\";\n})(GraphPortEvent || (GraphPortEvent = {}));\n\nvar GraphCanvasEvent;\n\n(function (GraphCanvasEvent) {\n  GraphCanvasEvent[\"Click\"] = \"[Canvas]Click\";\n  GraphCanvasEvent[\"DoubleClick\"] = \"[Canvas]DoubleClick\";\n  GraphCanvasEvent[\"MouseDown\"] = \"[Canvas]MouseDown\";\n  GraphCanvasEvent[\"MouseUp\"] = \"[Canvas]MouseUp\";\n  GraphCanvasEvent[\"MouseEnter\"] = \"[Canvas]MouseEnter\";\n  GraphCanvasEvent[\"MouseLeave\"] = \"[Canvas]MouseLeave\";\n  GraphCanvasEvent[\"MouseOver\"] = \"[Canvas]MouseOver\";\n  GraphCanvasEvent[\"MouseOut\"] = \"[Canvas]MouseOut\";\n  GraphCanvasEvent[\"MouseMove\"] = \"[Canvas]MouseMove\";\n  GraphCanvasEvent[\"ContextMenu\"] = \"[Canvas]ContextMenu\";\n  GraphCanvasEvent[\"DragStart\"] = \"[Canvas]DragStart\";\n  GraphCanvasEvent[\"Drag\"] = \"[Canvas]Drag\";\n  GraphCanvasEvent[\"DragEnd\"] = \"[Canvas]DragEnd\";\n  GraphCanvasEvent[\"Pan\"] = \"[Canvas]Pan\";\n  GraphCanvasEvent[\"Focus\"] = \"[Canvas]Focus\";\n  GraphCanvasEvent[\"Blur\"] = \"[Canvas]Blur\";\n  GraphCanvasEvent[\"Zoom\"] = \"[Canvas]Zoom\";\n  GraphCanvasEvent[\"Pinch\"] = \"[Canvas]Pinch\";\n  GraphCanvasEvent[\"KeyDown\"] = \"[Canvas]KeyDown\";\n  GraphCanvasEvent[\"KeyUp\"] = \"[Canvas]KeyUp\";\n  GraphCanvasEvent[\"SelectStart\"] = \"[Canvas]SelectStart\";\n  GraphCanvasEvent[\"SelectMove\"] = \"[Canvas]SelectMove\";\n  GraphCanvasEvent[\"SelectEnd\"] = \"[Canvas]SelectEnd\";\n  GraphCanvasEvent[\"UpdateNodeSelectionBySelectBox\"] = \"[Canvas]UpdateNodeSelectionBySelectBox\";\n  GraphCanvasEvent[\"MouseWheelScroll\"] = \"[Canvas]MouseWheelScroll\";\n  GraphCanvasEvent[\"DraggingNodeFromItemPanel\"] = \"[Canvas]DraggingNodeFromItemPanel\";\n  GraphCanvasEvent[\"DraggingNodeFromItemPanelStart\"] = \"[Canvas]DraggingNodeFromItemPanelStart\";\n  GraphCanvasEvent[\"DraggingNodeFromItemPanelEnd\"] = \"[Canvas]DraggingNodeFromItemPanelEnd\";\n  GraphCanvasEvent[\"ViewportResize\"] = \"[Canvas]ViewportResize\";\n  GraphCanvasEvent[\"Navigate\"] = \"[Canvas]Navigate\";\n  GraphCanvasEvent[\"VirtualizationRecalculated\"] = \"[Canvas]VirtualizationRecalculated\";\n  GraphCanvasEvent[\"ResetSelection\"] = \"[Canvas]ResetSelection\";\n  GraphCanvasEvent[\"Copy\"] = \"[Canvas]Copy\";\n  GraphCanvasEvent[\"Paste\"] = \"[Canvas]Paste\";\n  GraphCanvasEvent[\"Delete\"] = \"[Canvas]Delete\";\n  GraphCanvasEvent[\"Undo\"] = \"[Canvas]Undo\";\n  GraphCanvasEvent[\"Redo\"] = \"[Canvas]Redo\";\n  GraphCanvasEvent[\"ScrollIntoView\"] = \"[Canvas]ScrollIntoView\";\n  GraphCanvasEvent[\"ResetUndoStack\"] = \"[Canvas]ResetUndoStack\";\n  GraphCanvasEvent[\"ResetViewport\"] = \"[Canvas]ResetViewport\";\n  GraphCanvasEvent[\"ZoomTo\"] = \"[Canvas]ZoomTo\";\n  GraphCanvasEvent[\"ZoomToFit\"] = \"[Canvas]ZoomToFit\";\n  GraphCanvasEvent[\"SetData\"] = \"[Canvas]SetData\";\n  GraphCanvasEvent[\"UpdateData\"] = \"[Canvas]UpdateData\";\n  GraphCanvasEvent[\"ScrollTo\"] = \"[Canvas]ScrollTo\";\n  GraphCanvasEvent[\"UpdateSettings\"] = \"[Canvas]UpdateSettings\";\n})(GraphCanvasEvent || (GraphCanvasEvent = {}));\n\nvar GraphScrollBarEvent;\n\n(function (GraphScrollBarEvent) {\n  GraphScrollBarEvent[\"ScrollStart\"] = \"[ScrollBar]ScrollStart\";\n  GraphScrollBarEvent[\"Scroll\"] = \"[ScrollBar]Scroll\";\n  GraphScrollBarEvent[\"ScrollEnd\"] = \"[ScrollBar]ScrollEnd\";\n})(GraphScrollBarEvent || (GraphScrollBarEvent = {}));\n\nvar GraphMinimapEvent;\n\n(function (GraphMinimapEvent) {\n  GraphMinimapEvent[\"PanStart\"] = \"[Minimap]PanStart\";\n  GraphMinimapEvent[\"Pan\"] = \"[Minimap]Pan\";\n  GraphMinimapEvent[\"PanEnd\"] = \"[Minimap]PanEnd\";\n  GraphMinimapEvent[\"Click\"] = \"[Minimap]Click\";\n})(GraphMinimapEvent || (GraphMinimapEvent = {}));\n\nvar GraphContextMenuEvent;\n\n(function (GraphContextMenuEvent) {\n  GraphContextMenuEvent[\"Open\"] = \"[ContextMenu]Open\";\n  GraphContextMenuEvent[\"Close\"] = \"[ContextMenu]Close\";\n})(GraphContextMenuEvent || (GraphContextMenuEvent = {}));\n\n/**\r\n * convert WheelEvent delta to pixels by deltaMode\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent\r\n * https://stackoverflow.com/questions/20110224/what-is-the-height-of-a-line-in-a-wheel-event-deltamode-dom-delta-line\r\n */\n/**\r\n * get browser scroll line height by iframe\r\n *\r\n * @returns line height in px\r\n */\n\nfunction getScrollLineHeight() {\n  try {\n    const iframe = document.createElement(\"iframe\");\n    iframe.src = \"#\";\n    document.body.appendChild(iframe);\n    const {\n      contentDocument\n    } = iframe;\n\n    if (!contentDocument) {\n      throw new Error(\"Fail to create iframe\");\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n\n\n    contentDocument.documentElement.innerHTML = DOMPurify.sanitize(\"<span>a</span>\", {\n      RETURN_TRUSTED_TYPE: true\n    });\n    const span = contentDocument.body.firstElementChild;\n    const height = span.offsetHeight;\n    document.body.removeChild(iframe);\n    return height;\n  } catch (e) {\n    Debug.error(\"failed to calculate scroll line height\", e);\n    return 16;\n  }\n}\n\nconst scrollLineHeight = getScrollLineHeight();\nconst normalizeWheelDelta = typeof WheelEvent === \"function\" ? (deltaMode, delta) => {\n  switch (deltaMode) {\n    case WheelEvent.DOM_DELTA_PIXEL:\n      return delta;\n\n    case WheelEvent.DOM_DELTA_LINE:\n      return delta * scrollLineHeight;\n\n    case WheelEvent.DOM_DELTA_PAGE:\n      return delta * window.innerHeight;\n\n    default:\n      return delta;\n  }\n} : (_deltaMode, delta) => delta;\n\nconst EMPTY_RECT = {\n  height: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  top: 0,\n\n  toJSON() {\n    return this;\n  }\n\n};\nconst VirtualizationContext = /*#__PURE__*/createContext({\n  viewport: {\n    rect: EMPTY_RECT,\n    transformMatrix: EMPTY_TRANSFORM_MATRIX\n  },\n  renderedArea: {\n    minX: 0,\n    minY: 0,\n    maxX: 0,\n    maxY: 0\n  },\n  visibleArea: {\n    minX: 0,\n    minY: 0,\n    maxX: 0,\n    maxY: 0\n  },\n  renderedNodes: new Set(),\n  renderedEdges: new Set(),\n  timestamp: 0\n});\n\nfunction useGraphConfig() {\n  return useContext(GraphConfigContext);\n}\nfunction useGraphController() {\n  return useContext(GraphControllerContext);\n}\nfunction useViewport() {\n  return useContext(ViewportContext);\n}\nfunction useAlignmentLines() {\n  return useContext(AlignmentLinesContext);\n}\nfunction useConnectingState() {\n  return useContext(ConnectingStateContext);\n}\nfunction useVirtualization() {\n  return useContext(VirtualizationContext);\n}\n\nlet shouldRespondWheel = false;\nconst useWheelHandler = args => {\n  const {\n    containerRef,\n    svgRef,\n    rectRef,\n    zoomSensitivity,\n    scrollSensitivity,\n    isHorizontalScrollDisabled,\n    isVerticalScrollDisabled,\n    isCtrlKeyZoomEnable,\n    eventChannel,\n    graphConfig,\n    dispatch\n  } = args;\n  const graphController = useGraphController();\n  const globalEventTarget = graphController.getGlobalEventTarget();\n  useLayoutEffect(() => {\n    const svg = svgRef.current;\n    const container = containerRef.current;\n\n    if (!svg || !container) {\n      return noop;\n    }\n\n    const onWheel = e => {\n      const rect = rectRef.current;\n\n      if (!rect) {\n        return;\n      }\n\n      if (!shouldRespondWheel) {\n        return;\n      }\n\n      e.preventDefault();\n\n      if (e.ctrlKey && isCtrlKeyZoomEnable) {\n        const deltaY = normalizeWheelDelta(e.deltaMode, e.deltaY);\n        const scale = (deltaY > 0 ? -zoomSensitivity : zoomSensitivity) + 1;\n        eventChannel.trigger({\n          type: GraphCanvasEvent.Zoom,\n          rawEvent: e,\n          scale,\n          anchor: getRelativePoint(rect, e)\n        });\n        return;\n      }\n\n      const dx = isHorizontalScrollDisabled ? 0 : -normalizeWheelDelta(e.deltaMode, e.shiftKey ? e.deltaY : e.deltaX) * scrollSensitivity;\n      const dy = isVerticalScrollDisabled || e.shiftKey ? 0 : -normalizeWheelDelta(e.deltaMode, e.deltaY) * scrollSensitivity;\n      eventChannel.trigger({\n        type: GraphCanvasEvent.MouseWheelScroll,\n        dx,\n        dy,\n        rawEvent: e\n      });\n    };\n\n    const mouseEnterHandler = () => {\n      shouldRespondWheel = true;\n    };\n\n    container.addEventListener(\"mouseenter\", mouseEnterHandler);\n\n    const mouseLeaveHandler = () => {\n      shouldRespondWheel = false;\n    };\n\n    container.addEventListener(\"mouseleave\", mouseLeaveHandler);\n    globalEventTarget.addEventListener(\"wheel\", onWheel, {\n      passive: false\n    });\n    return () => {\n      globalEventTarget.removeEventListener(\"wheel\", onWheel);\n      container.removeEventListener(\"mouseenter\", mouseEnterHandler);\n      container.removeEventListener(\"mouseleave\", mouseLeaveHandler);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [svgRef, rectRef, zoomSensitivity, scrollSensitivity, dispatch, isHorizontalScrollDisabled, isVerticalScrollDisabled, graphConfig, eventChannel, isCtrlKeyZoomEnable]);\n};\n\nfunction nextFrame(callback) {\n  // double requestAnimationFrame guarantee next frame\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=675795\n  requestAnimationFrame(() => {\n    requestAnimationFrame(callback);\n  });\n}\n\nconst LIMIT = 20;\n\nconst isRectChanged = (a, b) => {\n  if (a === b) {\n    return false;\n  }\n\n  if (!a || !b) {\n    return true;\n  }\n\n  return a.top !== b.top || a.left !== b.left || a.width !== b.width || a.height !== b.height;\n};\n\nconst useUpdateViewportCallback = (rectRef, svgRef, eventChannel) => useCallback((force = false) => {\n  var _a;\n\n  const viewportRect = (_a = svgRef.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n\n  if (force || isRectChanged(rectRef.current, viewportRect)) {\n    rectRef.current = viewportRect;\n    eventChannel.trigger({\n      type: GraphCanvasEvent.ViewportResize,\n      viewportRect\n    });\n  }\n}, [eventChannel, rectRef, svgRef]);\nconst useContainerRect = (state, svgRef, containerRef, updateViewport) => {\n  useLayoutEffect(() => {\n    if (!state.viewport.rect) {\n      updateViewport(true);\n    }\n  });\n  useEffect(() => {\n    const container = containerRef.current;\n\n    if (!container) {\n      return noop;\n    }\n\n    const onResize = debounce(() =>\n    /**\r\n     * > This error means that ResizeObserver was not able\r\n     * > to deliver all observations within a single animation frame.\r\n     * > It is benign (your site will not break). – Aleksandar Totic Apr 15 at 3:14\r\n     * https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded\r\n     */\n    nextFrame(() => {\n      updateViewport();\n    }), LIMIT);\n\n    if (typeof ResizeObserver !== \"undefined\") {\n      const resizeObserver = new ResizeObserver(onResize);\n      resizeObserver.observe(container);\n      return () => {\n        resizeObserver.unobserve(container);\n        resizeObserver.disconnect();\n      };\n    }\n\n    window.addEventListener(\"resize\", onResize);\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, [containerRef, updateViewport]);\n  useEffect(() => {\n    const listener = debounce(e => {\n      const svg = svgRef.current;\n\n      if (!svg || !(e.target instanceof Element) || !e.target.contains(svg)) {\n        return;\n      }\n\n      updateViewport();\n    }, LIMIT);\n    const options = {\n      capture: true,\n      passive: true\n    };\n    document.body.addEventListener(\"scroll\", listener, options);\n    return () => {\n      document.body.removeEventListener(\"scroll\", listener, options);\n    };\n  }, [svgRef, updateViewport]);\n};\n\nfunction makeScheduledCallback(callback, schedule, cancel) {\n  let scheduled = false;\n  let currentArgs;\n  let task;\n\n  const scheduledCallback = (...args) => {\n    currentArgs = args;\n\n    if (!scheduled) {\n      scheduled = true;\n      task = schedule(() => {\n        scheduled = false;\n        unstable_batchedUpdates(() => {\n          callback.apply(null, currentArgs);\n        });\n      });\n    }\n  };\n\n  scheduledCallback.cancel = () => {\n    cancel(task);\n  };\n\n  return scheduledCallback;\n}\n\nconst animationFramed = callback => makeScheduledCallback(callback, requestAnimationFrame, cancelAnimationFrame);\nconst throttle = (callback, limit) => makeScheduledCallback(callback, cb => setTimeout(cb, limit), clearTimeout);\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\r\n * @param callback\r\n * @param limit\r\n * @param deps\r\n */\n\nfunction useThrottle(callback, limit, deps) {\n  /**\r\n   * wrap the throttle in useMemo,\r\n   * or throttle generate a new function every time components rerender,\r\n   * which cause throttle acts like a \"setTimeout\"\r\n   */\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useMemo(() => throttle(callback, limit), deps);\n}\n\nconst useRenderedArea = (viewport, isVirtualizationEnabled) => {\n  return useMemo(() => {\n    return isVirtualizationEnabled ? getRenderedArea(viewport) : {\n      minX: -Number.MAX_SAFE_INTEGER,\n      minY: -Number.MAX_SAFE_INTEGER,\n      maxX: Number.MAX_SAFE_INTEGER,\n      maxY: Number.MAX_SAFE_INTEGER\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [viewport, isVirtualizationEnabled]);\n};\n\nconst getMinimapRect = svgRef => {\n  var _a, _b;\n\n  return (_b = (_a = svgRef.current) === null || _a === void 0 ? void 0 : _a.closest(\".minimap-container\")) === null || _b === void 0 ? void 0 : _b.getBoundingClientRect();\n};\nconst useMinimapRect = svgRef => {\n  const [rect, setRect] = useState(undefined);\n  useLayoutEffect(() => {\n    setRect(getMinimapRect(svgRef));\n  }, [svgRef]);\n  useEffect(() => {\n    const onResize = throttle(() => {\n      setRect(getMinimapRect(svgRef));\n    }, 20);\n    window.addEventListener(\"resize\", onResize);\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, [svgRef]);\n  return rect;\n};\n\nclass DragController {\n  constructor(eventProvider, getPositionFromEvent) {\n    this.onMove = noop;\n    this.onEnd = noop;\n    this.lastEvent = null;\n    this.startX = 0;\n    this.startY = 0;\n    this.prevClientX = 0;\n    this.prevClientY = 0;\n\n    this.onMouseUp = e => {\n      this.lastEvent = e;\n      this.doOnMouseUp(e);\n      this.lastEvent = null;\n    };\n\n    this.onMouseMove = e => {\n      this.lastEvent = e;\n      e.preventDefault();\n      this.mouseMove(e);\n    };\n\n    this.eventProvider = eventProvider;\n    this.getPositionFromEvent = getPositionFromEvent;\n    this.mouseMove = animationFramed(e => {\n      this.doOnMouseMove(e);\n    });\n  }\n\n  start(e) {\n    this.lastEvent = e;\n    const {\n      x,\n      y\n    } = this.getPositionFromEvent(e);\n    this.startX = x;\n    this.startY = y;\n    this.prevClientX = x;\n    this.prevClientY = y;\n    this.eventProvider.on(\"move\", this.onMouseMove);\n    this.eventProvider.on(\"end\", this.onMouseUp);\n  }\n\n  stop() {\n    this.mouseMove.cancel();\n    this.eventProvider.off(\"move\", this.onMouseMove);\n    this.eventProvider.off(\"end\", this.onMouseUp);\n  }\n\n  getDelta(x, y) {\n    const clientDX = x - this.prevClientX;\n    const clientDY = y - this.prevClientY;\n    this.prevClientX = x;\n    this.prevClientY = y;\n    return {\n      x: clientDX,\n      y: clientDY\n    };\n  }\n\n  getTotalDelta(e) {\n    const x = e.clientX - this.startX;\n    const y = e.clientY - this.startY;\n    return {\n      x,\n      y\n    };\n  }\n\n  doOnMouseMove(e) {\n    const {\n      x,\n      y\n    } = this.getPositionFromEvent(e);\n    const {\n      x: dx,\n      y: dy\n    } = this.getDelta(x, y);\n    const {\n      x: totalDX,\n      y: totalDY\n    } = this.getTotalDelta(e);\n    this.onMove({\n      clientX: x,\n      clientY: y,\n      dx,\n      dy,\n      totalDX,\n      totalDY,\n      e\n    });\n  }\n\n  doOnMouseUp(e) {\n    e.preventDefault();\n    const {\n      x: totalDX,\n      y: totalDY\n    } = this.getTotalDelta(e);\n    this.onEnd({\n      totalDX,\n      totalDY,\n      e\n    });\n    this.stop();\n  }\n\n}\nfunction defaultGetPositionFromEvent(e) {\n  return {\n    x: e.clientX,\n    y: e.clientY\n  };\n}\n\nclass DragNodeController extends DragController {\n  constructor(globalMoveEventProvider, getPositionFromEvent, rectRef) {\n    super(globalMoveEventProvider, getPositionFromEvent);\n    this.rectRef = rectRef;\n  }\n\n  doOnMouseMove(e) {\n    super.doOnMouseMove(e);\n    const rect = this.rectRef.current;\n\n    if (!rect || !this.lastEvent) {\n      return;\n    }\n\n    if (e.clientX < rect.left || e.clientX > rect.right || e.clientY < rect.top || e.clientY > rect.bottom) {\n      this.mouseMove(this.lastEvent);\n    }\n  }\n\n}\n\nclass TouchController {\n  constructor(handlers) {\n    this.eventHandlers = {\n      onPointerDown: (e, ...args) => {\n        if (e.pointerType !== \"touch\") {\n          return;\n        }\n\n        e.preventDefault();\n        this.pointers = new Map(this.pointers);\n        this.pointers.set(e.pointerId, e.nativeEvent);\n        this.updateHandler(e.nativeEvent, ...args);\n      },\n      onPointerMove: (e, ...args) => {\n        if (e.pointerType !== \"touch\") {\n          return;\n        }\n\n        e.preventDefault();\n        this.pointers.set(e.pointerId, e.nativeEvent);\n        this.onMove(e.nativeEvent, ...args);\n      },\n      onPointerUp: (e, ...args) => {\n        if (e.pointerType !== \"touch\") {\n          return;\n        }\n\n        e.preventDefault();\n        this.pointers = new Map(this.pointers);\n        this.pointers.delete(e.pointerId);\n        this.updateHandler(e.nativeEvent, ...args);\n      }\n    };\n    this.pointers = new Map();\n    this.onMove = animationFramed((e, ...args) => {\n      var _a;\n\n      (_a = this.currentHandler) === null || _a === void 0 ? void 0 : _a.onMove(this.pointers, e, ...args);\n    });\n    this.handlers = handlers;\n  }\n\n  updateHandler(e, ...args) {\n    var _a, _b;\n\n    const handler = this.handlers.get(this.pointers.size);\n\n    if (handler !== this.currentHandler) {\n      (_a = this.currentHandler) === null || _a === void 0 ? void 0 : _a.onEnd(e, ...args);\n      this.currentHandler = handler;\n      (_b = this.currentHandler) === null || _b === void 0 ? void 0 : _b.onStart(this.pointers, e, ...args);\n    }\n  }\n\n}\n\n/**\r\n * debug helpers, just leave them here\r\n */\n// const canvas = document.createElement(\"canvas\");\n// canvas.height = window.innerHeight;\n// canvas.width = window.innerWidth;\n// Object.assign(canvas.style, {\n//   pointerEvents: \"none\",\n//   position: \"fixed\",\n//   top: \"0\",\n//   left: \"0\"\n// });\n// document.body.append(canvas);\n//\n// const ctx = canvas.getContext(\"2d\")!;\n//\n// function draw({ x, y }: ITouch, style: string): void {\n//   ctx.fillStyle = style;\n//   ctx.fillRect(x - 2.5, y - 2.5, 5, 5);\n// }\n\nclass TwoFingerHandler {\n  constructor(rectRef, eventChannel) {\n    this.prevDistance = 0;\n    this.rectRef = rectRef;\n    this.eventChannel = eventChannel;\n  }\n\n  onEnd() {// noop\n  }\n\n  onMove(pointers, e) {\n    const events = Array.from(pointers.values());\n    const currentDistance = distance(events[0].clientX, events[0].clientY, events[1].clientX, events[1].clientY);\n    const {\n      prevEvents,\n      prevDistance\n    } = this;\n    this.prevDistance = currentDistance;\n    this.prevEvents = events;\n\n    if (!prevEvents) {\n      return;\n    }\n\n    const dx1 = events[0].clientX - prevEvents[0].clientX;\n    const dx2 = events[1].clientX - prevEvents[1].clientX;\n    const dy1 = events[0].clientY - prevEvents[0].clientY;\n    const dy2 = events[1].clientY - prevEvents[1].clientY;\n    const dx = (dx1 + dx2) / 2;\n    const dy = (dy1 + dy2) / 2;\n    const scale = (currentDistance - prevDistance) / prevDistance + 1;\n    const anchor = getContainerCenter(this.rectRef);\n\n    if (!anchor) {\n      return;\n    }\n\n    this.eventChannel.trigger({\n      type: GraphCanvasEvent.Pinch,\n      rawEvent: e,\n      dx,\n      dy,\n      scale,\n      anchor\n    });\n  }\n\n  onStart(pointers) {\n    if (pointers.size !== 2) {\n      throw new Error(`Unexpected touch event with ${pointers.size} touches`);\n    }\n\n    this.prevEvents = Array.from(pointers.values());\n    this.prevDistance = distance(this.prevEvents[0].clientX, this.prevEvents[0].clientY, this.prevEvents[1].clientX, this.prevEvents[1].clientY);\n  }\n\n}\n\nconst useGraphTouchHandler = (rectRef, eventChannel) => {\n  return React.useMemo(() => {\n    const touchEvents = new TouchController(new Map().set(2, new TwoFingerHandler(rectRef, eventChannel)));\n    return touchEvents.eventHandlers;\n  }, [rectRef, eventChannel]);\n};\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst isSafari = getBrowser() === BrowserType.Safari;\nlet prevScale = 0;\nfunction useSafariScale({\n  rectRef,\n  svgRef,\n  eventChannel\n}) {\n  useEffect(() => {\n    const el = svgRef.current;\n\n    if (!isSafari || !el || isMobile()) {\n      return () => {// noop\n      };\n    }\n\n    const onGestureEvent = animationFramed(e => {\n      const {\n        scale\n      } = e;\n      const delta = scale / prevScale;\n      prevScale = scale;\n      eventChannel.trigger({\n        type: GraphCanvasEvent.Zoom,\n        rawEvent: e,\n        scale: delta,\n        anchor: getContainerCenter(rectRef)\n      });\n    });\n\n    const onGestureStart = e => {\n      e.stopPropagation();\n      e.preventDefault();\n      prevScale = e.scale;\n      eventChannel.trigger({\n        type: GraphCanvasEvent.Zoom,\n        rawEvent: e,\n        scale: e.scale,\n        anchor: getContainerCenter(rectRef)\n      });\n    };\n\n    const onGestureChange = e => {\n      e.stopPropagation();\n      e.preventDefault();\n      onGestureEvent(e);\n    };\n\n    const onGestureEnd = e => {\n      e.stopPropagation();\n      e.preventDefault();\n      onGestureEvent(e);\n    }; // @ts-ignore\n\n\n    el.addEventListener(\"gesturestart\", onGestureStart); // @ts-ignore\n\n    el.addEventListener(\"gesturechange\", onGestureChange); // @ts-ignore\n\n    el.addEventListener(\"gestureend\", onGestureEnd);\n    return () => {\n      // @ts-ignore\n      el.removeEventListener(\"gesturestart\", onGestureStart); // @ts-ignore\n\n      el.removeEventListener(\"gesturechange\", onGestureChange); // @ts-ignore\n\n      el.removeEventListener(\"gestureend\", onGestureEnd);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n\n/**\r\n * @todo migrate to React.useDeferredValue after Concurrent mode release\r\n */\n\nfunction useDeferredValue(value, {\n  timeout\n}) {\n  const [state, setState] = useState(value);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setState(value);\n    }, timeout);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, timeout]);\n  return state;\n}\n\nconst useSelectBox = (dispatch, selectBoxPositionState) => {\n  const selectBoxPosition = useDeferredValue(selectBoxPositionState, {\n    timeout: 100\n  });\n  React.useEffect(() => {\n    dispatch({\n      type: GraphCanvasEvent.UpdateNodeSelectionBySelectBox\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectBoxPosition]);\n};\n\nconst useGraphState = () => {\n  return useContext(GraphStateContext);\n};\nconst useGraphData = () => {\n  return useContext(GraphValueContext);\n};\n\n/**\r\n * this function is used both in useEventChannel and behaviorReducer to share the same logic\r\n */\n\nconst handleBehaviorChange = (prevBehavior, event) => {\n  switch (event.type) {\n    case GraphNodeEvent.DragStart:\n      return GraphBehavior.Dragging;\n\n    case GraphEdgeEvent.ConnectStart:\n      return GraphBehavior.Connecting;\n\n    case GraphCanvasEvent.SelectStart:\n      return GraphBehavior.MultiSelect;\n\n    case GraphCanvasEvent.DragStart:\n      return GraphBehavior.Panning;\n\n    case GraphCanvasEvent.DraggingNodeFromItemPanelStart:\n      return GraphBehavior.AddingNode;\n\n    case GraphNodeEvent.DragEnd:\n    case GraphEdgeEvent.ConnectEnd:\n    case GraphCanvasEvent.SelectEnd:\n    case GraphCanvasEvent.DragEnd:\n    case GraphCanvasEvent.DraggingNodeFromItemPanelEnd:\n      return GraphBehavior.Default;\n\n    default:\n      return prevBehavior;\n  }\n};\nconst behaviorReducer = (prevState, action) => {\n  const nextBehavior = handleBehaviorChange(prevState.behavior, action);\n\n  if (nextBehavior === prevState.behavior) {\n    return prevState;\n  }\n\n  return Object.assign(Object.assign({}, prevState), {\n    behavior: nextBehavior\n  });\n};\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\nconst canvasReducer = (state, action) => {\n  switch (action.type) {\n    case GraphCanvasEvent.Paste:\n      {\n        const {\n          position\n        } = action;\n\n        if (!isViewportComplete(state.viewport)) {\n          return state;\n        }\n\n        const {\n          rect\n        } = state.viewport;\n        let pasteNodes = action.data.nodes;\n\n        if (position && rect) {\n          const realPoint = getRealPointFromClientPoint(position.x, position.y, state.viewport);\n          let dx;\n          let dy;\n          pasteNodes = pasteNodes.map((n, idx) => {\n            // (dx,dy) are same for all copied nodes\n            if (idx === 0) {\n              dx = realPoint.x - n.x;\n              dy = realPoint.y - n.y;\n            }\n\n            return Object.assign(Object.assign({}, n), {\n              x: dx ? n.x - COPIED_NODE_SPACING + dx : n.x,\n              y: dy ? n.y - COPIED_NODE_SPACING + dy : n.y,\n              state: GraphNodeStatus.Selected\n            });\n          });\n        }\n\n        let next = unSelectAllEntity()(state.data.present);\n        pasteNodes.forEach(node => {\n          next = next.insertNode(node);\n        });\n        action.data.edges.forEach(edge => {\n          next = next.insertEdge(edge);\n        });\n        return Object.assign(Object.assign({}, state), {\n          data: pushHistory(state.data, next)\n        });\n      }\n\n    case GraphCanvasEvent.Delete:\n      if (!state.settings.features.has(GraphFeatures.Delete)) {\n        return state;\n      }\n\n      return Object.assign(Object.assign({}, state), {\n        data: pushHistory(state.data, state.data.present.deleteItems({\n          node: notSelected,\n          edge: notSelected\n        }), unSelectAllEntity())\n      });\n\n    case GraphCanvasEvent.Undo:\n      return Object.assign(Object.assign({}, state), {\n        data: undo(state.data)\n      });\n\n    case GraphCanvasEvent.Redo:\n      return Object.assign(Object.assign({}, state), {\n        data: redo(state.data)\n      });\n\n    case GraphCanvasEvent.KeyDown:\n      {\n        const key = action.rawEvent.key.toLowerCase();\n\n        if (state.activeKeys.has(key)) {\n          return state;\n        }\n\n        const set = new Set(state.activeKeys);\n        set.add(key);\n        return Object.assign(Object.assign({}, state), {\n          activeKeys: set\n        });\n      }\n\n    case GraphCanvasEvent.KeyUp:\n      {\n        const key = action.rawEvent.key.toLowerCase();\n\n        if (!state.activeKeys.has(key)) {\n          return state;\n        }\n\n        const set = new Set(state.activeKeys);\n        set.delete(key);\n        return Object.assign(Object.assign({}, state), {\n          activeKeys: set\n        });\n      }\n\n    case GraphCanvasEvent.SetData:\n      return Object.assign(Object.assign({}, state), {\n        data: resetUndoStack(action.data)\n      });\n\n    case GraphCanvasEvent.UpdateData:\n      return Object.assign(Object.assign({}, state), {\n        data: action.shouldRecord ? pushHistory(state.data, action.updater(state.data.present)) : Object.assign(Object.assign({}, state.data), {\n          present: action.updater(state.data.present)\n        })\n      });\n\n    case GraphCanvasEvent.ResetUndoStack:\n      return Object.assign(Object.assign({}, state), {\n        data: resetUndoStack(state.data.present)\n      });\n\n    case GraphCanvasEvent.UpdateSettings:\n      {\n        const settings = __rest(action, [\"type\"]);\n\n        return Object.assign(Object.assign({}, state), {\n          settings: Object.assign(Object.assign({}, state.settings), settings)\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nfunction composeReducers(reducers) {\n  return next => reducers.reduceRight((prev, current) => current(prev), next);\n}\n\nconst VisitPortHelper = props => {\n  const {\n    neighborPorts,\n    data\n  } = props;\n  const selectRef = React.useRef(null);\n  const [selectedItem, setSelectedItem] = React.useState();\n  const onContainerKeyDown = React.useCallback(evt => {\n    if (evt.key === \"Escape\") {\n      evt.stopPropagation();\n      evt.preventDefault();\n\n      if (selectedItem) {\n        props.onComplete(selectedItem);\n      }\n    }\n  }, [selectedItem, props]);\n  const onContainerBlur = React.useCallback(() => {//\n  }, []);\n  const onContainerChange = React.useCallback(evt => {\n    const value = JSON.parse(evt.target.value);\n\n    if (value.nodeId && value.portId) {\n      setSelectedItem({\n        nodeId: value.nodeId,\n        portId: value.portId\n      });\n    }\n  }, [setSelectedItem]);\n  React.useEffect(() => {\n    if (selectRef.current) {\n      selectRef.current.focus({\n        preventScroll: true\n      });\n    }\n  }, []);\n  return jsx(\"select\", Object.assign({\n    onKeyDown: onContainerKeyDown,\n    onBlur: onContainerBlur,\n    ref: selectRef,\n    onChange: onContainerChange\n  }, {\n    children: neighborPorts.map(s => {\n      const isSelected = selectedItem && selectedItem.portId === s.portId && selectedItem.nodeId === s.nodeId;\n      const value = JSON.stringify(s);\n      const node = data.nodes.get(s.nodeId);\n\n      if (!node) {\n        return null;\n      }\n\n      const port = node.ports ? node.ports.filter(p => p.id === s.portId)[0] : null;\n\n      if (!port) {\n        return null;\n      }\n\n      const label = `${node.ariaLabel || node.name || node.id}: ${port.ariaLabel || port.name || port.id}`;\n      return jsx(\"option\", Object.assign({\n        value: value,\n        \"aria-selected\": isSelected,\n        \"aria-label\": label\n      }, {\n        children: label\n      }), `${s.nodeId}-${s.portId}`);\n    })\n  }));\n};\n\nconst item = (node = undefined, port = undefined) => ({\n  node,\n  port\n});\n\nconst findDOMElement = (svg, {\n  node,\n  port\n}) => {\n  var _a, _b;\n\n  let id;\n\n  if (node && port) {\n    id = getPortUid((_a = svg.dataset.graphId) !== null && _a !== void 0 ? _a : \"\", node, port);\n  } else if (node) {\n    id = getNodeUid((_b = svg.dataset.graphId) !== null && _b !== void 0 ? _b : \"\", node);\n  } else {\n    return null;\n  }\n\n  return svg.getElementById(id);\n};\nconst focusItem = (svgRef, nextItem, evt, eventChannel) => {\n  if (!svgRef.current) {\n    return;\n  }\n\n  const el = findDOMElement(svgRef.current, nextItem);\n\n  if (el) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    el.focus({\n      preventScroll: true\n    });\n    eventChannel.trigger({\n      type: GraphCanvasEvent.Navigate,\n      node: nextItem.node,\n      port: nextItem.port,\n      rawEvent: evt\n    });\n  } else if (!nextItem.node && !nextItem.port) {\n    eventChannel.trigger({\n      type: GraphCanvasEvent.Navigate,\n      node: nextItem.node,\n      port: nextItem.port,\n      rawEvent: evt\n    });\n  }\n};\nconst getNextItem = (data, curNode, port) => {\n  if (curNode.ports) {\n    const portIndex = port ? curNode.ports.findIndex(p => p.id === port.id) : -1;\n    const nextPortIndex = portIndex + 1;\n\n    if (nextPortIndex < curNode.ports.length) {\n      return item(curNode, curNode.ports[nextPortIndex]);\n    }\n  }\n\n  const nextNode = curNode.next && data.nodes.get(curNode.next);\n\n  if (nextNode) {\n    return item(nextNode);\n  }\n\n  return item();\n};\nconst getPrevItem = (data, curNode, port) => {\n  if (port && curNode.ports) {\n    const prevPortIndex = curNode.ports.findIndex(p => p.id === port.id) - 1;\n\n    if (prevPortIndex >= 0) {\n      return item(curNode, curNode.ports[prevPortIndex]);\n    }\n\n    return item(curNode);\n  }\n\n  const prevNode = curNode.prev && data.nodes.get(curNode.prev);\n\n  if (prevNode) {\n    return item(prevNode, prevNode.ports && prevNode.ports.length ? prevNode.ports[prevNode.ports.length - 1] : undefined);\n  }\n\n  return item();\n};\nconst nextConnectablePort = (graphConfig, params) => (data, node, port) => {\n  var _a, _b, _c;\n\n  let next = getNextItem(data, node, port);\n\n  while (!(((_a = next.node) === null || _a === void 0 ? void 0 : _a.id) === node.id && ((_b = next.port) === null || _b === void 0 ? void 0 : _b.id) === (port === null || port === void 0 ? void 0 : port.id))) {\n    if (!next.node) {\n      next = item(data.getNavigationFirstNode());\n    } else if (next.port) {\n      if ((_c = graphConfig.getPortConfig(next.port)) === null || _c === void 0 ? void 0 : _c.getIsConnectable(Object.assign(Object.assign({}, params), {\n        data,\n        parentNode: next.node,\n        model: next.port\n      }))) {\n        return next;\n      }\n    } // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n\n    next = getNextItem(data, next.node, next.port);\n  }\n\n  return item();\n};\nconst focusNextPort = (ports, node, curPortId, svgRef, evt, eventChannel) => {\n  const curPortIndex = ports.findIndex(p => p.id === curPortId);\n  const nextPortIndex = (curPortIndex + 1) % ports.length;\n  const nextPort = ports[nextPortIndex];\n\n  if (nextPort && svgRef.current) {\n    focusItem(svgRef, {\n      node,\n      port: nextPort\n    }, evt, eventChannel);\n  }\n};\nconst focusPrevPort = (ports, node, curPortId, svgRef, evt, eventChannel) => {\n  const curPortIndex = ports.findIndex(p => p.id === curPortId);\n  const prevPortIndex = (curPortIndex - 1 + ports.length) % ports.length;\n  const prevPort = ports[prevPortIndex];\n\n  if (prevPort && svgRef.current) {\n    focusItem(svgRef, {\n      node,\n      port: prevPort\n    }, evt, eventChannel);\n  }\n};\nconst getFocusNodeHandler = compareFn => (data, curNodeId, svgRef, graphController, evt, eventChannel) => {\n  const sortedNodes = Array.from(data.nodes.values()).sort(compareFn);\n  const curNodeIndex = sortedNodes.findIndex(n => n.id === curNodeId);\n  const nextNode = sortedNodes[(curNodeIndex + 1) % sortedNodes.length];\n\n  if (nextNode && svgRef.current) {\n    graphController.dispatch({\n      type: GraphNodeEvent.Select,\n      nodes: [nextNode.id]\n    });\n    graphController.dispatch({\n      type: GraphNodeEvent.Centralize,\n      nodes: [nextNode.id]\n    });\n    focusItem(svgRef, {\n      node: nextNode,\n      port: undefined\n    }, evt, eventChannel);\n  }\n};\nconst focusLeftNode = getFocusNodeHandler((n1, n2) => n1.x * 10 + n1.y - n2.x * 10 - n2.y);\nconst focusRightNode = getFocusNodeHandler((n1, n2) => n2.x * 10 + n2.y - n1.x * 10 - n1.y);\nconst focusDownNode = getFocusNodeHandler((n1, n2) => n1.x + n1.y * 10 - n2.x - n2.y * 10);\nconst focusUpNode = getFocusNodeHandler((n1, n2) => n2.x + n2.y * 10 - n1.x - n1.y * 10);\nconst goToConnectedPort = (data, node, port, svgRef, evt, eventChannel) => {\n  var _a;\n\n  const neighborPorts = getNeighborPorts(data, node.id, port.id);\n\n  if (neighborPorts.length === 1 && svgRef.current) {\n    const targetNode = data.nodes.get(neighborPorts[0].nodeId);\n\n    if (!targetNode) {\n      return;\n    }\n\n    const targetPort = (_a = targetNode.ports) === null || _a === void 0 ? void 0 : _a.find(p => p.id === neighborPorts[0].portId);\n\n    if (!targetPort) {\n      return;\n    }\n\n    focusItem(svgRef, {\n      node: targetNode,\n      port: targetPort\n    }, evt, eventChannel);\n  } else if (neighborPorts.length > 1 && svgRef.current) {\n    const onComplete = nextPort => {\n      var _a;\n\n      ReactDOM.unmountComponentAtNode(visitPortHelperContainer);\n\n      if (svgRef.current) {\n        const curEditorContainer = svgRef.current.closest(\".react-dag-editor-container\");\n\n        if (curEditorContainer) {\n          curEditorContainer.removeChild(visitPortHelperContainer);\n        }\n      }\n\n      const targetNode = data.nodes.get(nextPort.nodeId);\n\n      if (!targetNode) {\n        return;\n      }\n\n      const targetPort = (_a = targetNode.ports) === null || _a === void 0 ? void 0 : _a.find(p => p.id === nextPort.portId);\n\n      if (!targetPort) {\n        return;\n      }\n\n      focusItem(svgRef, {\n        node: targetNode,\n        port: targetPort\n      }, evt, eventChannel);\n    };\n\n    const visitPortHelperContainer = document.createElement(\"div\");\n    const editorContainer = svgRef.current.closest(\".react-dag-editor-container\");\n\n    if (editorContainer) {\n      editorContainer.appendChild(visitPortHelperContainer);\n    }\n\n    visitPortHelperContainer.style.position = \"fixed\";\n    visitPortHelperContainer.style.top = \"0\";\n    ReactDOM.render(jsx(VisitPortHelper, {\n      neighborPorts: neighborPorts,\n      // eslint-disable-next-line react/jsx-no-bind\n      onComplete: onComplete,\n      data: data\n    }), visitPortHelperContainer);\n  }\n};\n/**\r\n * @param _data graph data\r\n * @param _node node model\r\n * @param port port data\r\n *\r\n * @returns port arial label\r\n */\n\nfunction defaultGetPortAriaLabel(_data, _node, port) {\n  return port.ariaLabel;\n}\n/**\r\n *\r\n * @param node the node data\r\n *\r\n * @returns the string value for the aria label\r\n */\n\nfunction defaultGetNodeAriaLabel(node) {\n  return node.ariaLabel;\n}\n\nfunction attachPort(state, nodeId, portId) {\n  if (!state.connectState) {\n    return state;\n  }\n\n  let data = state.data.present;\n  data = data.updatePort(nodeId, portId, updateStatus(add(GraphPortStatus.ConnectingAsTarget)));\n\n  if (state.connectState.targetNode && state.connectState.targetPort) {\n    data = data.updatePort(state.connectState.targetNode, state.connectState.targetPort, updateStatus(remove(GraphPortStatus.ConnectingAsTarget)));\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    connectState: Object.assign(Object.assign({}, state.connectState), {\n      targetNode: nodeId,\n      targetPort: portId\n    }),\n    data: Object.assign(Object.assign({}, state.data), {\n      present: data\n    })\n  });\n}\n\nfunction clearAttach(state) {\n  if (!state.connectState) {\n    return state;\n  }\n\n  let data = state.data.present;\n  const {\n    targetPort,\n    targetNode\n  } = state.connectState;\n\n  if (targetNode && targetPort) {\n    data = data.updatePort(targetNode, targetPort, updateStatus(remove(GraphPortStatus.ConnectingAsTarget)));\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    connectState: Object.assign(Object.assign({}, state.connectState), {\n      targetNode: undefined,\n      targetPort: undefined\n    }),\n    data: Object.assign(Object.assign({}, state.data), {\n      present: data\n    })\n  });\n} // eslint-disable-next-line complexity\n\n\nconst connectingReducer = (state, action) => {\n  var _a, _b, _c;\n\n  if (!isViewportComplete(state.viewport)) {\n    return state;\n  }\n\n  const {\n    rect\n  } = state.viewport;\n\n  switch (action.type) {\n    case GraphEdgeEvent.ConnectStart:\n      return Object.assign(Object.assign({}, state), {\n        connectState: Object.assign(Object.assign({}, EMPTY_CONNECT_STATE), {\n          sourceNode: action.nodeId,\n          sourcePort: action.portId,\n          movingPoint: action.clientPoint ? {\n            x: action.clientPoint.x - rect.left,\n            y: action.clientPoint.y - rect.top\n          } : undefined\n        }),\n        data: Object.assign(Object.assign({}, state.data), {\n          present: state.data.present.updatePort(action.nodeId, action.portId, updateStatus(add(GraphPortStatus.Connecting)))\n        })\n      });\n\n    case GraphEdgeEvent.ConnectMove:\n      if (state.connectState) {\n        return Object.assign(Object.assign({}, state), {\n          connectState: Object.assign(Object.assign({}, state.connectState), {\n            movingPoint: {\n              x: action.clientX - rect.left,\n              y: action.clientY - rect.top\n            }\n          })\n        });\n      }\n\n      return state;\n\n    case GraphEdgeEvent.ConnectEnd:\n      if (state.connectState) {\n        const {\n          edgeWillAdd,\n          isCancel\n        } = action;\n        const {\n          sourceNode,\n          sourcePort,\n          targetNode,\n          targetPort\n        } = state.connectState;\n        let data = state.data.present;\n        data = data.updatePort(sourceNode, sourcePort, updateStatus(replace(GraphPortStatus.Default)));\n\n        if (!isCancel && targetNode && targetPort) {\n          let edge = {\n            source: sourceNode,\n            sourcePortId: sourcePort,\n            target: targetNode,\n            targetPortId: targetPort,\n            id: v4(),\n            status: GraphEdgeStatus.Default\n          };\n\n          if (edgeWillAdd) {\n            edge = edgeWillAdd(edge, data);\n          }\n\n          data = data.insertEdge(edge).updatePort(targetNode, targetPort, updateStatus(replace(GraphPortStatus.Default)));\n          return Object.assign(Object.assign({}, state), {\n            connectState: undefined,\n            data: pushHistory(state.data, data, unSelectAllEntity())\n          });\n        }\n\n        return Object.assign(Object.assign({}, state), {\n          connectState: undefined,\n          data: Object.assign(Object.assign({}, state.data), {\n            present: data\n          })\n        });\n      }\n\n      return state;\n\n    case GraphEdgeEvent.ConnectNavigate:\n      if (state.connectState) {\n        const data = state.data.present;\n        const sourceNode = data.nodes.get(state.connectState.sourceNode);\n        const sourcePort = sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.getPort(state.connectState.sourcePort);\n        const targetNode = state.connectState.targetNode ? data.nodes.get(state.connectState.targetNode) : undefined;\n        const targetPort = state.connectState.targetPort ? targetNode === null || targetNode === void 0 ? void 0 : targetNode.getPort(state.connectState.targetPort) : undefined;\n\n        if (!sourceNode || !sourcePort) {\n          return state;\n        }\n\n        const next = nextConnectablePort(state.settings.graphConfig, {\n          anotherNode: sourceNode,\n          anotherPort: sourcePort\n        })(data, targetNode || sourceNode, targetPort);\n\n        if (!next.node || !next.port || next.node.id === sourceNode.id && next.port.id === sourcePort.id) {\n          return state;\n        }\n\n        return attachPort(state, next.node.id, next.port.id);\n      }\n\n      return state;\n\n    case GraphPortEvent.PointerEnter:\n      if (state.connectState) {\n        const {\n          sourceNode,\n          sourcePort\n        } = state.connectState;\n        const data = state.data.present;\n        const node = data.nodes.get(action.node.id);\n        const port = node === null || node === void 0 ? void 0 : node.getPort(action.port.id);\n        const anotherNode = data.nodes.get(sourceNode);\n        const anotherPort = anotherNode === null || anotherNode === void 0 ? void 0 : anotherNode.getPort(sourcePort);\n\n        if (node && port && anotherNode && anotherPort && isConnectable(state.settings.graphConfig, {\n          parentNode: node,\n          model: port,\n          data,\n          anotherPort,\n          anotherNode\n        })) {\n          return attachPort(state, node.id, port.id);\n        }\n      }\n\n      return state;\n\n    case GraphNodeEvent.PointerEnter:\n    case GraphNodeEvent.PointerMove:\n      if (state.connectState) {\n        const {\n          clientX,\n          clientY\n        } = action.rawEvent;\n        const {\n          sourceNode,\n          sourcePort\n        } = state.connectState;\n        const data = state.data.present;\n        const node = data.nodes.get(action.node.id);\n        const anotherNode = data.nodes.get(sourceNode);\n        const anotherPort = anotherNode === null || anotherNode === void 0 ? void 0 : anotherNode.getPort(sourcePort);\n\n        if (node && anotherNode && anotherPort) {\n          const targetPort = getNearestConnectablePort({\n            parentNode: node,\n            clientX,\n            clientY,\n            graphConfig: state.settings.graphConfig,\n            data: state.data.present,\n            viewport: state.viewport,\n            anotherPort,\n            anotherNode\n          });\n\n          if (!targetPort) {\n            return state;\n          }\n\n          return attachPort(state, node.id, targetPort.id);\n        }\n      }\n\n      return state;\n\n    case GraphNodeEvent.PointerLeave:\n      if (((_a = state.connectState) === null || _a === void 0 ? void 0 : _a.targetNode) === action.node.id) {\n        return clearAttach(state);\n      }\n\n      return state;\n\n    case GraphPortEvent.PointerLeave:\n      if (((_b = state.connectState) === null || _b === void 0 ? void 0 : _b.targetNode) === action.node.id && ((_c = state.connectState) === null || _c === void 0 ? void 0 : _c.targetPort) === action.port.id) {\n        return clearAttach(state);\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nconst contextMenuReducer = (prevState, action) => {\n  let nextContextMenuPosition = prevState.contextMenuPosition;\n\n  switch (action.type) {\n    case GraphCanvasEvent.ContextMenu:\n    case GraphNodeEvent.ContextMenu:\n    case GraphEdgeEvent.ContextMenu:\n    case GraphPortEvent.ContextMenu:\n      {\n        const e = action.rawEvent;\n\n        if (e.button === MouseEventButton.Secondary) {\n          nextContextMenuPosition = {\n            x: e.clientX,\n            y: e.clientY\n          };\n        }\n      }\n      break;\n\n    case GraphCanvasEvent.Click:\n    case GraphNodeEvent.Click:\n    case GraphEdgeEvent.Click:\n    case GraphPortEvent.Click:\n      nextContextMenuPosition = undefined;\n      break;\n\n    case GraphContextMenuEvent.Open:\n      nextContextMenuPosition = {\n        x: action.x,\n        y: action.y\n      };\n      break;\n\n    case GraphContextMenuEvent.Close:\n      nextContextMenuPosition = undefined;\n      break;\n  }\n\n  if (prevState.contextMenuPosition === nextContextMenuPosition) {\n    return prevState;\n  }\n\n  return Object.assign(Object.assign({}, prevState), {\n    contextMenuPosition: nextContextMenuPosition\n  });\n};\n\nconst edgeReducer = (state, action) => {\n  switch (action.type) {\n    case GraphEdgeEvent.DoubleClick:\n      if (!state.settings.features.has(GraphFeatures.EditEdge)) {\n        return state;\n      }\n\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: state.data.present.updateEdge(action.edge.id, updateStatus(replace(GraphEdgeStatus.Editing)))\n        })\n      });\n\n    case GraphEdgeEvent.MouseEnter:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: state.data.present.updateEdge(action.edge.id, updateStatus(add(GraphEdgeStatus.Activated)))\n        })\n      });\n\n    case GraphEdgeEvent.MouseLeave:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: state.data.present.updateEdge(action.edge.id, updateStatus(remove(GraphEdgeStatus.Activated)))\n        })\n      });\n\n    case GraphEdgeEvent.Click:\n    case GraphEdgeEvent.ContextMenu:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: unSelectAllEntity()(state.data.present).updateEdge(action.edge.id, updateStatus(add(GraphEdgeStatus.Selected)))\n        })\n      });\n\n    case GraphEdgeEvent.Add:\n      return Object.assign(Object.assign({}, state), {\n        data: pushHistory(state.data, state.data.present.insertEdge(action.edge))\n      });\n\n    default:\n      return state;\n  }\n};\n\n/**\r\n * get alignment lines\r\n * @param draggingNodes the dragging node(s)\r\n * @param nodes all nodes to find the alignment lines\r\n * @param graphConfig graphConfig of type IGraphConfig\r\n * @param threshold threshold to align, default is 2\r\n */\n\nconst getAlignmentLines = (draggingNodes, nodes, graphConfig, threshold = 2) => {\n  const dummyDraggingNodeHW = getDummyDraggingNode(draggingNodes);\n  const closestNodes = getClosestNodes(dummyDraggingNodeHW, draggingNodes, nodes, graphConfig, threshold);\n  return getLines(dummyDraggingNodeHW, closestNodes, draggingNodes.length);\n};\n/**\r\n * get the dx or dy to auto align/attach\r\n * @param alignmentLines all alignment lines\r\n * @param nodes the dragging dummy node(s)\r\n * @param _graphConfig graphConfig of type IGraphConfig\r\n */\n\nconst getAutoAlignDisplacement = (alignmentLines, nodes, _graphConfig, alignDirection) => {\n  let min = Infinity;\n  let res = 0;\n  const nodeHW = getDummyDraggingNode(nodes);\n  const widthOrHeight = alignDirection === \"x\" ? nodeHW.width || 0 : nodeHW.height || 0;\n  alignmentLines.forEach(item => {\n    let alignLine;\n\n    if (alignDirection === \"x\" && item.x1 === item.x2) {\n      alignLine = item.x1;\n    } else if (alignDirection === \"y\" && item.y1 === item.y2) {\n      alignLine = item.y1;\n    } else {\n      return;\n    }\n\n    const distance1 = nodeHW[alignDirection] - alignLine;\n    const distanceMiddle = nodeHW[alignDirection] + (widthOrHeight || 0) / 2 - alignLine;\n    const distance2 = nodeHW[alignDirection] + (widthOrHeight || 0) - alignLine;\n\n    if (Math.abs(distance1) < min) {\n      min = Math.abs(distance1);\n      res = distance1 > 0 ? -min : min;\n    }\n\n    if (Math.abs(distanceMiddle) < min) {\n      min = Math.abs(distanceMiddle);\n      res = distanceMiddle > 0 ? -min : min;\n    }\n\n    if (Math.abs(distance2) < min) {\n      min = Math.abs(distance2);\n      res = distance2 > 0 ? -min : min;\n    }\n  });\n  return res;\n};\n/**\r\n * get min coordinate of nodes\r\n * @param nodes among these nodes to get the min coordinate\r\n * @param field \"x\"|\"y\"\r\n */\n\nconst getMinCoordinate = (nodes, field) => {\n  if (!nodes.length) {\n    return undefined;\n  }\n\n  return Math.min(...nodes.map(n => n[field]));\n};\n/**\r\n * get max coordinate of nodes\r\n * @param nodes among these nodes to get the max coordinate\r\n * @param field \"x\"|\"y\"\r\n */\n\n\nconst getMaxCoordinate = (nodes, field) => {\n  if (!nodes.length) {\n    return undefined;\n  }\n\n  return Math.max(...nodes.map(n => n[field] + (field === \"y\" ? n.height || 0 : n.width || 0)));\n};\n/**\r\n * set height and width for a node, and return the new node\r\n * @param node the node to set height and width\r\n * @param graphConfig graphConfig of type IGraphConfig\r\n */\n\n\nconst setSizeForNode = (node, graphConfig) => {\n  return Object.assign(Object.assign({}, node), getNodeSize(node, graphConfig));\n};\n/**\r\n * get the bounding box of the nodes\r\n * @param nodes the nodes to calculate the bounding box\r\n */\n\n\nconst getBoundingBoxOfNodes = nodes => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  nodes.forEach(n => {\n    const tempMinX = n.x;\n    const tempMinY = n.y;\n    const tempMaxX = n.x + (n.width || 0);\n    const tempMaxY = n.y + (n.height || 0);\n\n    if (tempMinX < minX) {\n      minX = tempMinX;\n    }\n\n    if (tempMinY < minY) {\n      minY = tempMinY;\n    }\n\n    if (tempMaxX > maxX) {\n      maxX = tempMaxX;\n    }\n\n    if (tempMaxY > maxY) {\n      maxY = tempMaxY;\n    }\n  });\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n};\n/**\r\n * get dummy dragging node constructed by all dragging nodes\r\n * @param draggingNodes all dragging nodes\r\n * @param graphConfig graphConfig of type IGraphConfig\r\n */\n\n\nconst getDummyDraggingNode = draggingNodes => {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = getBoundingBoxOfNodes(draggingNodes);\n  const dummyDraggingNode = {\n    id: v4(),\n    x,\n    y,\n    width,\n    height\n  };\n  return dummyDraggingNode;\n};\n/**\r\n * get the nodes closest to(within the threshold) the different sides of the dragging node(s)\r\n * @param dummyDraggingNode the dummy dragging node constructed by the dragging nodes\r\n * @param draggingNodes the dragging node(s)\r\n * @param nodes among these nodes to get the closest nodes\r\n * @param graphConfig graphConfig of type IGraphConfig\r\n * @param threshold threshold to align\r\n */\n\n\nconst getClosestNodes = (dummyDraggingNode, draggingNodes, nodes, graphConfig, threshold = 2) => {\n  const resX = []; // will has 3 items: the nodes closest to the \"left side\", \"middle\", \"right side\" (the order must follow this) of the dragging node\n\n  const resY = []; // will has 3 items: the nodes closest to the \"top\", \"middle\", \"bottom\" (the order must follow this) of the dragging node\n\n  const {\n    x: draggingNodeX,\n    y: draggingNodeY,\n    width: draggingNodeWidth = 0,\n    height: draggingNodeHeight = 0\n  } = dummyDraggingNode;\n  let minDistanceX = threshold;\n  let minDistanceY = threshold;\n  nodes.forEach(node => {\n    if (draggingNodes.find(dn => dn.id === node.id)) {\n      return;\n    }\n\n    const nodeHW = setSizeForNode(node, graphConfig);\n    const {\n      width: nodeWidth = 0,\n      height: nodeHeight = 0\n    } = nodeHW; // compare X coordinate of dragging node\n\n    [draggingNodeX, draggingNodeX + draggingNodeWidth / 2, draggingNodeX + draggingNodeWidth].forEach((draggingNodeValue, alignPos) => {\n      if (!resX[alignPos]) {\n        resX[alignPos] = {};\n      }\n\n      if (!resX[alignPos].closestNodes) {\n        resX[alignPos].closestNodes = [];\n      }\n\n      [nodeHW.x, nodeHW.x + nodeWidth / 2, nodeHW.x + nodeWidth].forEach(comparedValue => {\n        var _a;\n\n        const distance = Math.abs(draggingNodeValue - comparedValue);\n\n        if (distance <= minDistanceX) {\n          (_a = resX[alignPos].closestNodes) === null || _a === void 0 ? void 0 : _a.push(nodeHW);\n          resX[alignPos].alignCoordinateValue = comparedValue;\n          minDistanceX = distance;\n        }\n      });\n    }); // compare Y coordinate of dragging node\n\n    [draggingNodeY, draggingNodeY + draggingNodeHeight / 2, draggingNodeY + draggingNodeHeight].forEach((draggingNodeValue, alignPos) => {\n      if (!resY[alignPos]) {\n        resY[alignPos] = {};\n      }\n\n      if (!resY[alignPos].closestNodes) {\n        resY[alignPos].closestNodes = [];\n      }\n\n      [nodeHW.y, nodeHW.y + nodeHeight / 2, nodeHW.y + nodeHeight].forEach(comparedValue => {\n        var _a;\n\n        const distance = Math.abs(draggingNodeValue - comparedValue);\n\n        if (distance <= minDistanceY) {\n          (_a = resY[alignPos].closestNodes) === null || _a === void 0 ? void 0 : _a.push(nodeHW);\n          resY[alignPos].alignCoordinateValue = comparedValue;\n          minDistanceY = distance;\n        }\n      });\n    });\n  });\n  return {\n    closestX: resX,\n    closestY: resY\n  };\n};\n/**\r\n * get alignment lines\r\n * @param draggingNode the dragging node\r\n * @param closestNodes all closest nodes within the threshold\r\n */\n\n\nconst getLines = (draggingNode, closestNodes, numberOfDraggingNodes = 1) => {\n  const xLines = [];\n  const yLines = [];\n  const closestXNodes = closestNodes.closestX;\n  const closestYNodes = closestNodes.closestY; // vertical lines\n\n  closestXNodes.forEach((item, alignPos) => {\n    var _a;\n\n    if (item.alignCoordinateValue === undefined || // if it has the left alignment line for the dragging node OR has multi dragging nodes, will don't need middle alignment line\n    alignPos === 1 && (xLines.length || numberOfDraggingNodes > 1)) {\n      return;\n    }\n\n    const sameXNodes = [];\n    const x = item.alignCoordinateValue;\n    (_a = item.closestNodes) === null || _a === void 0 ? void 0 : _a.forEach(node => {\n      if (node.x === x || node.x + (node.width || 0) / 2 === x || node.x + (node.width || 0) === x) {\n        sameXNodes.push(node);\n      }\n    });\n    const y1 = getMinCoordinate([draggingNode, ...sameXNodes], \"y\");\n    const y2 = getMaxCoordinate([draggingNode, ...sameXNodes], \"y\");\n\n    if (y1 !== undefined && y2 !== undefined) {\n      xLines.push({\n        x1: x,\n        y1,\n        x2: x,\n        y2,\n        visible: true\n      });\n    }\n  }); // horizontal lines\n\n  closestYNodes.forEach((item, alignPos) => {\n    var _a;\n\n    if (item.alignCoordinateValue === undefined || // if it has the top alignment line for the dragging node OR has multi dragging nodes, will don't need middle alignment line\n    alignPos === 1 && (yLines.length || numberOfDraggingNodes > 1)) {\n      return;\n    }\n\n    const sameYNodes = [];\n    const y = item.alignCoordinateValue;\n    (_a = item.closestNodes) === null || _a === void 0 ? void 0 : _a.forEach(node => {\n      if (node.y === y || node.y + (node.height || 0) / 2 === y || node.y + (node.height || 0) === y) {\n        sameYNodes.push(node);\n      }\n    });\n    const x1 = getMinCoordinate([draggingNode, ...sameYNodes], \"x\");\n    const x2 = getMaxCoordinate([draggingNode, ...sameYNodes], \"x\");\n\n    if (x1 !== undefined && x2 !== undefined) {\n      yLines.push({\n        x1,\n        y1: y,\n        x2,\n        y2: y,\n        visible: true\n      });\n    }\n  });\n  return [...xLines, ...yLines];\n};\n\nfunction pipe(...args) {\n  return args.reduceRight((result, current) => value => result(current(value)), identical);\n}\n\nconst getDelta = (start, end, value) => {\n  if (value < start) {\n    return -10;\n  }\n\n  if (value > end) {\n    return 10;\n  }\n\n  return 0;\n};\n\nfunction getSelectedNodes(data, graphConfig) {\n  const nodes = [];\n  data.nodes.forEach(node => {\n    if (!isSelected(node)) {\n      return;\n    }\n\n    nodes.push(Object.assign({\n      id: node.id,\n      x: node.x,\n      y: node.y\n    }, getNodeSize(node, graphConfig)));\n  });\n  return nodes;\n}\n\nfunction dragNodeHandler(state, event) {\n  if (!isViewportComplete(state.viewport)) {\n    return state;\n  }\n\n  const limitScale = scale => {\n    return Math.max(scale, getScaleLimit(data, state.settings));\n  };\n\n  const e = event.rawEvent;\n  const {\n    rect\n  } = state.viewport;\n  const nextState = Object.assign({}, state);\n  const data = state.data.present;\n  const viewportDx = getDelta(rect.left, rect.right, e.clientX);\n  const viewportDy = getDelta(rect.top, rect.bottom, e.clientY);\n  const scale = viewportDx !== 0 || viewportDy !== 0 ? 0.999 : 1;\n  const viewport = viewportDx !== 0 || viewportDx !== 0 ? pipe(pan(-viewportDx, -viewportDy), zoom({\n    scale,\n    anchor: getRelativePoint(rect, e),\n    direction: Direction.XY,\n    limitScale\n  }))(state.viewport) : state.viewport;\n  const delta = getPointDeltaByClientDelta(event.dx + viewportDx * scale, event.dy + viewportDy * scale, viewport.transformMatrix);\n  const dummyNodes = Object.assign(Object.assign({}, state.dummyNodes), {\n    dx: state.dummyNodes.dx + delta.x,\n    dy: state.dummyNodes.dy + delta.y,\n    isVisible: event.isVisible\n  });\n\n  if (event.isAutoAlignEnable) {\n    const renderedNodes = getRenderedNodes(data.nodes, state.viewport);\n\n    if (renderedNodes.length < event.autoAlignThreshold) {\n      const nodes = dummyNodes.nodes.map(it => Object.assign(Object.assign({}, it), {\n        x: it.x + dummyNodes.dx,\n        y: it.y + dummyNodes.dy\n      }));\n      const alignmentLines = getAlignmentLines(nodes, renderedNodes, state.settings.graphConfig, state.viewport.transformMatrix[0] > 0.3 ? 2 : 5);\n\n      if (alignmentLines.length) {\n        const dxAligned = getAutoAlignDisplacement(alignmentLines, nodes, state.settings.graphConfig, \"x\");\n        const dyAligned = getAutoAlignDisplacement(alignmentLines, nodes, state.settings.graphConfig, \"y\");\n        dummyNodes.alignedDX = dummyNodes.dx + dxAligned;\n        dummyNodes.alignedDY = dummyNodes.dy + dyAligned;\n      } else {\n        dummyNodes.alignedDX = undefined;\n        dummyNodes.alignedDY = undefined;\n      }\n\n      nextState.alignmentLines = alignmentLines;\n    } else {\n      dummyNodes.alignedDX = undefined;\n      dummyNodes.alignedDY = undefined;\n    }\n  }\n\n  nextState.dummyNodes = dummyNodes;\n  nextState.viewport = viewport;\n  return nextState;\n}\n\nfunction handleDraggingNewNode(state, action) {\n  if (!state.settings.features.has(GraphFeatures.AutoAlign)) {\n    return state;\n  }\n\n  const data = state.data.present;\n  const renderedNodes = getRenderedNodes(data.nodes, state.viewport);\n  const alignmentLines = getAlignmentLines([action.node], renderedNodes, state.settings.graphConfig, state.viewport.transformMatrix[0] > 0.3 ? 2 : 5);\n  return Object.assign(Object.assign({}, state), {\n    alignmentLines\n  });\n}\n\nfunction dragStart(state, action) {\n  let data = state.data.present;\n  const targetNode = data.nodes.get(action.node.id);\n\n  if (!targetNode) {\n    return state;\n  }\n\n  let selectedNodes;\n\n  if (action.isMultiSelect) {\n    data = data.selectNodes(node => node.id === action.node.id || isSelected(node));\n    selectedNodes = getSelectedNodes(data, state.settings.graphConfig);\n  } else if (!isSelected(targetNode)) {\n    selectedNodes = [Object.assign({\n      id: action.node.id,\n      x: action.node.x,\n      y: action.node.y\n    }, getNodeSize(action.node, state.settings.graphConfig))];\n  } else {\n    selectedNodes = getSelectedNodes(data, state.settings.graphConfig);\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    data: Object.assign(Object.assign({}, state.data), {\n      present: data\n    }),\n    dummyNodes: Object.assign(Object.assign({}, emptyDummyNodes()), {\n      isVisible: false,\n      nodes: selectedNodes\n    })\n  });\n}\n\nfunction dragEnd(state, action) {\n  let data = state.data.present;\n\n  if (action.isDragCanceled) {\n    return Object.assign(Object.assign({}, state), {\n      alignmentLines: [],\n      dummyNodes: emptyDummyNodes()\n    });\n  }\n\n  const {\n    dx,\n    dy\n  } = state.dummyNodes;\n  data = data.updateNodesPositionAndSize(state.dummyNodes.nodes.map(node => Object.assign(Object.assign({}, node), {\n    x: node.x + dx,\n    y: node.y + dy,\n    width: undefined,\n    height: undefined\n  })));\n  return Object.assign(Object.assign({}, state), {\n    alignmentLines: [],\n    dummyNodes: emptyDummyNodes(),\n    data: pushHistory(state.data, data, unSelectAllEntity())\n  });\n} // centralize node or locate node to the specific position\n\n\nfunction locateNode(action, state) {\n  const data = state.data.present;\n\n  if (!isViewportComplete(state.viewport) || !action.nodes.length) {\n    return state;\n  }\n\n  if (action.nodes.length === 1) {\n    const nodeId = action.nodes[0];\n    const node = data.nodes.get(nodeId);\n\n    if (!node) {\n      return state;\n    }\n\n    const {\n      width,\n      height\n    } = getNodeSize(node, state.settings.graphConfig);\n    const nodeX = action.type === GraphNodeEvent.Centralize ? node.x + width / 2 : node.x;\n    const nodeY = action.type === GraphNodeEvent.Centralize ? node.y + height / 2 : node.y;\n    const {\n      x: clientX,\n      y: clientY\n    } = transformPoint(nodeX, nodeY, state.viewport.transformMatrix);\n    const position = action.type === GraphNodeEvent.Locate ? action.position : undefined;\n    return Object.assign(Object.assign({}, state), {\n      viewport: scrollIntoView(clientX, clientY, state.viewport.rect, true, position)(state.viewport)\n    });\n  }\n\n  const {\n    minNodeX,\n    minNodeY,\n    maxNodeX,\n    maxNodeY\n  } = getContentArea$1(data, state.settings.graphConfig, new Set(action.nodes));\n  return Object.assign(Object.assign({}, state), {\n    viewport: focusArea(minNodeX, minNodeY, maxNodeX, maxNodeY, state.viewport)\n  });\n}\n\nconst nodeReducer = (state, action) => {\n  const data = state.data.present;\n\n  switch (action.type) {\n    //#region resize\n    case GraphNodeEvent.ResizingStart:\n      return Object.assign(Object.assign({}, state), {\n        dummyNodes: Object.assign(Object.assign({}, emptyDummyNodes()), {\n          isVisible: true,\n          nodes: getSelectedNodes(data, state.settings.graphConfig)\n        })\n      });\n\n    case GraphNodeEvent.Resizing:\n      return Object.assign(Object.assign({}, state), {\n        dummyNodes: Object.assign(Object.assign({}, state.dummyNodes), {\n          dx: action.dx,\n          dy: action.dy,\n          dWidth: action.dWidth,\n          dHeight: action.dHeight\n        })\n      });\n\n    case GraphNodeEvent.ResizingEnd:\n      {\n        const {\n          dx,\n          dy,\n          dWidth,\n          dHeight\n        } = state.dummyNodes;\n        return Object.assign(Object.assign({}, state), {\n          dummyNodes: emptyDummyNodes(),\n          data: pushHistory(state.data, data.updateNodesPositionAndSize(state.dummyNodes.nodes.map(node => Object.assign(Object.assign({}, node), {\n            x: node.x + dx,\n            y: node.y + dy,\n            width: node.width + dWidth,\n            height: node.height + dHeight\n          }))), unSelectAllEntity())\n        });\n      }\n    //#endregion resize\n    //#region drag\n\n    case GraphNodeEvent.DragStart:\n      return dragStart(state, action);\n\n    case GraphNodeEvent.Drag:\n      return dragNodeHandler(state, action);\n\n    case GraphNodeEvent.DragEnd:\n      return dragEnd(state, action);\n    //#endregion drag\n\n    case GraphNodeEvent.PointerEnter:\n      switch (state.behavior) {\n        case GraphBehavior.Default:\n          return Object.assign(Object.assign({}, state), {\n            data: Object.assign(Object.assign({}, state.data), {\n              present: data.updateNode(action.node.id, updateStatus(add(GraphNodeStatus.Activated)))\n            })\n          });\n\n        default:\n          return state;\n      }\n\n    case GraphNodeEvent.PointerLeave:\n      switch (state.behavior) {\n        case GraphBehavior.Default:\n        case GraphBehavior.Connecting:\n          return Object.assign(Object.assign({}, state), {\n            data: Object.assign(Object.assign({}, state.data), {\n              present: data.updateNode(action.node.id, updateStatus(remove(GraphNodeStatus.Activated)))\n            })\n          });\n\n        default:\n          return state;\n      }\n\n    case GraphCanvasEvent.DraggingNodeFromItemPanel:\n      return handleDraggingNewNode(state, action);\n\n    case GraphCanvasEvent.DraggingNodeFromItemPanelEnd:\n      {\n        if (action.node) {\n          return Object.assign(Object.assign({}, state), {\n            alignmentLines: [],\n            data: pushHistory(state.data, state.data.present.insertNode(Object.assign(Object.assign({}, action.node), {\n              status: GraphNodeStatus.Selected\n            })), unSelectAllEntity())\n          });\n        }\n\n        return Object.assign(Object.assign({}, state), {\n          alignmentLines: []\n        });\n      }\n\n    case GraphNodeEvent.Centralize:\n    case GraphNodeEvent.Locate:\n      return locateNode(action, state);\n\n    case GraphNodeEvent.Add:\n      return Object.assign(Object.assign({}, state), {\n        data: pushHistory(state.data, data.insertNode(action.node))\n      });\n\n    case GraphNodeEvent.DoubleClick:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: state.data.present.updateNode(action.node.id, updateStatus(add(GraphNodeStatus.Editing)))\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst portReducer = (state, action) => {\n  switch (action.type) {\n    case GraphPortEvent.Focus:\n    case GraphPortEvent.PointerEnter:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: state.data.present.updatePort(action.node.id, action.port.id, updateStatus(add(GraphPortStatus.Activated)))\n        })\n      });\n\n    case GraphPortEvent.Blur:\n    case GraphPortEvent.PointerLeave:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: state.data.present.updatePort(action.node.id, action.port.id, updateStatus(remove(GraphPortStatus.Activated)))\n        })\n      });\n\n    case GraphPortEvent.Click:\n    case GraphPortEvent.ContextMenu:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: unSelectAllEntity()(state.data.present).updatePort(action.node.id, action.port.id, updateStatus(add(GraphPortStatus.Selected)))\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst selectNodeBySelectBox = (graphConfig, transformMatrix, selectBox, data) => {\n  if (!selectBox.width || !selectBox.height) {\n    return data;\n  }\n\n  const selectAreaMinX = Math.min(selectBox.startX, selectBox.startX + selectBox.width);\n  const selectAreaMaxX = Math.max(selectBox.startX, selectBox.startX + selectBox.width);\n  const selectAreaMinY = Math.min(selectBox.startY, selectBox.startY + selectBox.height);\n  const selectAreaMaxY = Math.max(selectBox.startY, selectBox.startY + selectBox.height);\n  const primeSelectionMin = reverseTransformPoint(selectAreaMinX, selectAreaMinY, transformMatrix);\n  const primeSelectionMax = reverseTransformPoint(selectAreaMaxX, selectAreaMaxY, transformMatrix); // padding box does not apply transform matrix\n\n  const primeRectSelectionBox = {\n    minX: primeSelectionMin.x,\n    minY: primeSelectionMin.y,\n    maxX: primeSelectionMax.x,\n    maxY: primeSelectionMax.y\n  };\n  return data.selectNodes(n => {\n    const {\n      width,\n      height\n    } = getNodeSize(n, graphConfig);\n    const rectNode = {\n      minX: n.x,\n      minY: n.y,\n      maxX: n.x + width,\n      maxY: n.y + height\n    };\n    return checkRectIntersect(primeRectSelectionBox, rectNode);\n  });\n};\n\nfunction handleNavigate(state, action) {\n  let data = unSelectAllEntity()(state.data.present);\n\n  if (action.node && action.port) {\n    data = data.updatePort(action.node.id, action.port.id, updateStatus(add(GraphPortStatus.Selected)));\n  } else if (action.node) {\n    const nodeId = action.node.id;\n    data = data.selectNodes(node => node.id === nodeId);\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    data: Object.assign(Object.assign({}, state.data), {\n      present: data\n    })\n  });\n}\n\nconst selectionReducer = (state, action) => {\n  var _a, _b;\n\n  const data = state.data.present;\n  const isLassoSelectEnable = state.settings.features.has(GraphFeatures.LassoSelect);\n\n  switch (action.type) {\n    case GraphCanvasEvent.Click:\n    case GraphCanvasEvent.ResetSelection:\n    case GraphCanvasEvent.ContextMenu:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: unSelectAllEntity()(data)\n        })\n      });\n\n    case GraphNodeEvent.Click:\n    case GraphNodeEvent.ContextMenu:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: nodeSelection(action.rawEvent, action.node)(data)\n        })\n      });\n\n    case GraphCanvasEvent.SelectStart:\n      {\n        if (!isViewportComplete(state.viewport)) {\n          return state;\n        }\n\n        const point = getRelativePoint(state.viewport.rect, action.rawEvent);\n        return Object.assign(Object.assign({}, state), {\n          data: Object.assign(Object.assign({}, state.data), {\n            present: unSelectAllEntity()(data)\n          }),\n          selectBoxPosition: {\n            startX: point.x,\n            startY: !isLassoSelectEnable ? point.y : 0,\n            width: 0,\n            height: 0\n          }\n        });\n      }\n\n    case GraphCanvasEvent.SelectMove:\n      if (state.behavior !== GraphBehavior.MultiSelect) {\n        return state;\n      }\n\n      return Object.assign(Object.assign({}, state), {\n        selectBoxPosition: Object.assign(Object.assign({}, state.selectBoxPosition), {\n          width: state.selectBoxPosition.width + action.dx,\n          height: !isLassoSelectEnable ? state.selectBoxPosition.height + action.dy : (_b = (_a = state.viewport.rect) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : state.selectBoxPosition.height\n        })\n      });\n\n    case GraphCanvasEvent.SelectEnd:\n      return Object.assign(Object.assign({}, state), {\n        selectBoxPosition: emptySelectBoxPosition(),\n        data: Object.assign(Object.assign({}, state.data), {\n          present: selectNodeBySelectBox(state.settings.graphConfig, state.viewport.transformMatrix, state.selectBoxPosition, data)\n        })\n      });\n\n    case GraphCanvasEvent.UpdateNodeSelectionBySelectBox:\n      {\n        if (state.behavior !== GraphBehavior.MultiSelect) {\n          return state;\n        }\n\n        return Object.assign(Object.assign({}, state), {\n          data: Object.assign(Object.assign({}, state.data), {\n            present: selectNodeBySelectBox(state.settings.graphConfig, state.viewport.transformMatrix, state.selectBoxPosition, data)\n          })\n        });\n      }\n\n    case GraphCanvasEvent.Navigate:\n      return handleNavigate(state, action);\n\n    case GraphNodeEvent.SelectAll:\n      return Object.assign(Object.assign({}, state), {\n        data: Object.assign(Object.assign({}, state.data), {\n          present: data.selectNodes(() => true)\n        })\n      });\n\n    case GraphNodeEvent.Select:\n      {\n        const nodes = new Set(action.nodes);\n        return Object.assign(Object.assign({}, state), {\n          data: Object.assign(Object.assign({}, state.data), {\n            present: data.selectNodes(node => nodes.has(node.id))\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nfunction getRectCenter(rect) {\n  return {\n    x: rect.width / 2,\n    y: rect.height / 2\n  };\n}\n\nfunction resetViewport(viewport, data, graphConfig, action) {\n  if (!isViewportComplete(viewport)) {\n    return viewport;\n  }\n\n  if (!action.ensureNodeVisible) {\n    return Object.assign(Object.assign({}, viewport), {\n      transformMatrix: EMPTY_TRANSFORM_MATRIX\n    });\n  }\n\n  const {\n    nodes,\n    groups\n  } = data;\n\n  if (nodes.size === 0) {\n    return Object.assign(Object.assign({}, viewport), {\n      transformMatrix: EMPTY_TRANSFORM_MATRIX\n    });\n  }\n\n  const isShapeRectInViewport = r => {\n    return isRectVisible(r, viewport);\n  };\n\n  const nodeRects = nodes.map(n => getNodeRect(n, graphConfig));\n  const hasVisibleNode = nodeRects.find(isShapeRectInViewport);\n\n  if (hasVisibleNode) {\n    return Object.assign(Object.assign({}, viewport), {\n      transformMatrix: EMPTY_TRANSFORM_MATRIX\n    });\n  }\n\n  const groupRects = groups.map(g => getGroupRect(g, nodes, graphConfig));\n  const hasVisibleGroup = groupRects.find(isShapeRectInViewport);\n\n  if (hasVisibleGroup) {\n    return Object.assign(Object.assign({}, viewport), {\n      transformMatrix: EMPTY_TRANSFORM_MATRIX\n    });\n  } // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n\n  let focusNode = nodeRects.first();\n\n  const findTopMostRect = cur => {\n    if (focusNode.y > cur.y) {\n      focusNode = cur;\n    }\n  };\n\n  nodeRects.forEach(findTopMostRect);\n  groupRects.forEach(findTopMostRect);\n  return Object.assign(Object.assign({}, viewport), {\n    transformMatrix: [1, 0, 0, 1, -focusNode.x, -focusNode.y]\n  });\n}\n\nfunction zoomToFit(viewport, data, settings, action) {\n  if (!isViewportComplete(viewport)) {\n    return viewport;\n  }\n\n  const {\n    graphConfig,\n    nodeMaxVisibleSize,\n    nodeMinVisibleSize\n  } = settings;\n  const transformMatrix = getZoomFitMatrix(Object.assign(Object.assign({}, action), {\n    data,\n    graphConfig,\n    rect: viewport.rect,\n    nodeMaxVisibleSize,\n    nodeMinVisibleSize\n  }));\n  return Object.assign(Object.assign({}, viewport), {\n    transformMatrix\n  });\n}\n\nconst reducer = (viewport, action, data, settings) => {\n  var _a, _b, _c, _d;\n\n  const {\n    graphConfig,\n    canvasBoundaryPadding,\n    features\n  } = settings;\n\n  const limitScale = scale => {\n    return Math.max(scale, getScaleLimit(data, settings));\n  };\n\n  switch (action.type) {\n    case GraphCanvasEvent.ViewportResize:\n      return Object.assign(Object.assign({}, viewport), {\n        rect: action.viewportRect\n      });\n\n    case GraphCanvasEvent.Zoom:\n      if (!isViewportComplete(viewport)) {\n        return viewport;\n      }\n\n      return zoom({\n        scale: action.scale,\n        anchor: (_a = action.anchor) !== null && _a !== void 0 ? _a : getRectCenter(viewport.rect),\n        direction: action.direction,\n        limitScale\n      })(viewport);\n\n    case GraphScrollBarEvent.Scroll:\n    case GraphCanvasEvent.MouseWheelScroll:\n    case GraphCanvasEvent.Pan:\n    case GraphCanvasEvent.Drag:\n      {\n        if (!isViewportComplete(viewport)) {\n          return viewport;\n        }\n\n        const {\n          transformMatrix,\n          rect\n        } = viewport;\n        let {\n          dx,\n          dy\n        } = action;\n        const limitBoundary = features.has(GraphFeatures.LimitBoundary);\n        const groupPadding = (_c = (_b = data.groups) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.padding; // TODO: this is not precise\n\n        if (limitBoundary) {\n          const {\n            minX,\n            maxX,\n            minY,\n            maxY\n          } = getOffsetLimit({\n            data,\n            graphConfig,\n            rect,\n            transformMatrix,\n            canvasBoundaryPadding,\n            groupPadding\n          });\n          dx = clamp(minX - transformMatrix[4], maxX - transformMatrix[4], dx);\n          dy = clamp(minY - transformMatrix[5], maxY - transformMatrix[5], dy);\n        }\n\n        return pan(dx, dy)(viewport);\n      }\n\n    case GraphCanvasEvent.Pinch:\n      {\n        const {\n          dx,\n          dy,\n          scale,\n          anchor\n        } = action;\n        return pipe(pan(dx, dy), zoom({\n          scale,\n          anchor,\n          limitScale\n        }))(viewport);\n      }\n\n    case GraphMinimapEvent.Pan:\n      return minimapPan(action.dx, action.dy)(viewport);\n\n    case GraphCanvasEvent.ResetViewport:\n      return resetViewport(viewport, data, graphConfig, action);\n\n    case GraphCanvasEvent.ZoomTo:\n      if (!isViewportComplete(viewport)) {\n        return viewport;\n      }\n\n      return zoomTo({\n        scale: action.scale,\n        anchor: (_d = action.anchor) !== null && _d !== void 0 ? _d : getRectCenter(viewport.rect),\n        direction: action.direction,\n        limitScale\n      })(viewport);\n\n    case GraphCanvasEvent.ZoomToFit:\n      return zoomToFit(viewport, data, settings, action);\n\n    case GraphCanvasEvent.ScrollIntoView:\n      if (viewport.rect) {\n        const {\n          x,\n          y\n        } = transformPoint(action.x, action.y, viewport.transformMatrix);\n        return scrollIntoView(x, y, viewport.rect, true)(viewport);\n      }\n\n      return viewport;\n\n    default:\n      return viewport;\n  }\n};\n\nconst viewportReducer = (state, action) => {\n  const viewport = reducer(state.viewport, action, state.data.present, state.settings);\n  return viewport === state.viewport ? state : Object.assign(Object.assign({}, state), {\n    viewport\n  });\n};\n\nconst builtinReducer = composeReducers([behaviorReducer, viewportReducer, nodeReducer, portReducer, edgeReducer, canvasReducer, connectingReducer, selectionReducer, contextMenuReducer].map(reducer => next => (state, action) => next(reducer(state, action), action)));\nfunction getGraphReducer(middleware = undefined, finalReducer = identical) {\n  const finalMiddleware = middleware ? composeReducers([middleware, builtinReducer]) : builtinReducer;\n  return finalMiddleware(finalReducer);\n}\nfunction useGraphReducer(params, middleware) {\n  const reducer = React.useMemo(() => getGraphReducer(middleware), [middleware]);\n  const [state, dispatchImpl] = React.useReducer(reducer, params, createGraphState);\n  const sideEffects = useConst(() => []);\n  const prevStateRef = React.useRef(state);\n  const dispatch = React.useCallback((action, callback) => {\n    if (callback) {\n      sideEffects.push(callback);\n    }\n\n    dispatchImpl(action);\n  }, [sideEffects]);\n  React.useEffect(() => {\n    const prevState = prevStateRef.current;\n\n    if (prevState === state) {\n      return;\n    }\n\n    prevStateRef.current = state;\n    unstable_batchedUpdates(() => {\n      sideEffects.forEach(callback => {\n        try {\n          callback(state, prevState);\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          console.error(e);\n        }\n      });\n      sideEffects.length = 0;\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state]);\n  return [state, dispatch];\n}\n\nconst useBackgroundRect = state => {\n  const {\n    viewport\n  } = state;\n  const renderedArea = useRenderedArea(viewport, true);\n  return {\n    rect: renderedArea\n  };\n};\n\nclass MouseMoveEventProvider {\n  constructor(target) {\n    this.target = target;\n  }\n\n  off(type, callback) {\n    switch (type) {\n      case \"move\":\n        this.target.removeEventListener(\"mousemove\", callback);\n        break;\n\n      case \"end\":\n        this.target.removeEventListener(\"mouseup\", callback);\n        break;\n    }\n\n    return this;\n  }\n\n  on(type, callback) {\n    switch (type) {\n      case \"move\":\n        this.target.addEventListener(\"mousemove\", callback);\n        break;\n\n      case \"end\":\n        this.target.addEventListener(\"mouseup\", callback);\n        break;\n    }\n\n    return this;\n  }\n\n}\n\nconst useGetMouseDownOnAnchor = (node, eventChannel) => {\n  const graphController = useGraphController();\n  return React.useCallback(f => evt => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    eventChannel.trigger({\n      type: GraphNodeEvent.ResizingStart,\n      rawEvent: evt,\n      node\n    });\n    const drag = new DragController(new MouseMoveEventProvider(graphController.getGlobalEventTarget()), defaultGetPositionFromEvent);\n\n    drag.onMove = ({\n      totalDX,\n      totalDY,\n      e: rawEvent\n    }) => {\n      eventChannel.trigger(Object.assign({\n        type: GraphNodeEvent.Resizing,\n        rawEvent,\n        node,\n        dx: 0,\n        dy: 0,\n        dWidth: 0,\n        dHeight: 0\n      }, f(totalDX, totalDY)));\n    };\n\n    drag.onEnd = ({\n      e: rawEvent\n    }) => {\n      eventChannel.trigger({\n        type: GraphNodeEvent.ResizingEnd,\n        rawEvent,\n        node\n      });\n    };\n\n    eventChannel.trigger({\n      type: GraphNodeEvent.ResizingStart,\n      rawEvent: evt,\n      node\n    });\n    drag.start(evt.nativeEvent);\n  }, [eventChannel, graphController, node]);\n};\n\nclass PointerEventProvider {\n  constructor(target, pointerId = null) {\n    this.eventEmitter = new EventEmitter();\n\n    this.onMove = e => {\n      if (this.pointerId === null || this.pointerId === e.pointerId) {\n        this.eventEmitter.emit(\"move\", e);\n      }\n    };\n\n    this.onUp = e => {\n      if (this.pointerId === null || this.pointerId === e.pointerId) {\n        this.eventEmitter.emit(\"end\", e);\n      }\n    };\n\n    this.target = target;\n    this.pointerId = pointerId;\n  }\n\n  off(type, callback) {\n    this.eventEmitter.off(type, callback);\n    this.ensureRemoveListener(type);\n    return this;\n  }\n\n  on(type, callback) {\n    this.ensureAddListener(type);\n    this.eventEmitter.on(type, callback);\n    return this;\n  }\n\n  ensureAddListener(type) {\n    if (!this.eventEmitter.listeners(type).length) {\n      switch (type) {\n        case \"move\":\n          this.target.addEventListener(\"pointermove\", this.onMove);\n          break;\n\n        case \"end\":\n          this.target.addEventListener(\"pointerup\", this.onUp);\n          break;\n      }\n    }\n  }\n\n  ensureRemoveListener(type) {\n    if (!this.eventEmitter.listeners(type).length) {\n      switch (type) {\n        case \"move\":\n          this.target.removeEventListener(\"pointermove\", this.onMove);\n          break;\n\n        case \"end\":\n          this.target.removeEventListener(\"pointerup\", this.onUp);\n          break;\n      }\n    }\n  }\n\n}\n\nconst withSimulatedClick = (params, type) => ({\n  totalDX,\n  totalDY,\n  e: rawEvent\n}) => {\n  var _a;\n\n  const {\n    eventChannel,\n    dragThreshold,\n    containerRef\n  } = params;\n  const events = [];\n  events.push({\n    type,\n    rawEvent\n  });\n\n  if (rawEvent.target instanceof Node && ((_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.contains(rawEvent.target)) && isWithinThreshold(totalDX, totalDY, dragThreshold)) {\n    events.push({\n      type: GraphCanvasEvent.Click,\n      rawEvent\n    });\n  }\n\n  eventChannel.batch(events);\n};\n\nconst dragMultiSelect = (e, params) => {\n  const {\n    getPositionFromEvent,\n    graphController,\n    eventChannel\n  } = params;\n  const dragging = new DragController(new MouseMoveEventProvider(graphController.getGlobalEventTarget()), getPositionFromEvent);\n\n  dragging.onMove = ({\n    dx,\n    dy,\n    e: rawEvent\n  }) => {\n    eventChannel.trigger({\n      type: GraphCanvasEvent.SelectMove,\n      rawEvent,\n      dx,\n      dy\n    });\n  };\n\n  dragging.onEnd = withSimulatedClick(params, GraphCanvasEvent.SelectEnd);\n  eventChannel.trigger({\n    type: GraphCanvasEvent.SelectStart,\n    rawEvent: e\n  });\n  dragging.start(e);\n};\n\nconst dragPan = (e, params) => {\n  const {\n    getPositionFromEvent,\n    graphController,\n    eventChannel\n  } = params;\n  const dragging = new DragController(new MouseMoveEventProvider(graphController.getGlobalEventTarget()), getPositionFromEvent);\n\n  dragging.onMove = ({\n    dx,\n    dy,\n    e: rawEvent\n  }) => {\n    eventChannel.trigger({\n      type: GraphCanvasEvent.Drag,\n      rawEvent,\n      dx,\n      dy\n    });\n  };\n\n  dragging.onEnd = withSimulatedClick(params, GraphCanvasEvent.DragEnd);\n  dragging.start(e);\n  eventChannel.trigger({\n    type: GraphCanvasEvent.DragStart,\n    rawEvent: e\n  });\n};\n\nconst onContainerMouseDown = (e, params) => {\n  var _a;\n\n  e.preventDefault();\n  e.stopPropagation();\n\n  if (e.button !== MouseEventButton.Primary) {\n    return;\n  }\n\n  const {\n    canvasMouseMode,\n    isPanDisabled,\n    isMultiSelectDisabled,\n    state,\n    isLassoSelectEnable,\n    graphController\n  } = params; // in pan mode, hold ctrl or shift to perform select.\n  // in select mode, hold space to perform pan\n\n  const isPanMode = canvasMouseMode === CanvasMouseMode.Pan && !e.ctrlKey && !e.shiftKey && !e.metaKey || ((_a = state.activeKeys) === null || _a === void 0 ? void 0 : _a.has(\" \"));\n\n  if (!isPanDisabled && isPanMode) {\n    dragPan(e.nativeEvent, params);\n  } else if (!isMultiSelectDisabled || isLassoSelectEnable && !e.ctrlKey && !e.metaKey) {\n    dragMultiSelect(e.nativeEvent, params);\n  } else {\n    graphController.canvasClickOnce = true;\n  }\n};\n\nfunction isMouseButNotLeft(e) {\n  return e.pointerType === \"mouse\" && e.button !== MouseEventButton.Primary;\n}\n\nconst onNodePointerDown = (evt, target, params) => {\n  evt.preventDefault();\n  const {\n    svgRef,\n    isNodesDraggable,\n    getPositionFromEvent,\n    isClickNodeToSelectDisabled,\n    eventChannel,\n    dragThreshold,\n    rectRef,\n    isAutoAlignEnable,\n    autoAlignThreshold,\n    graphController\n  } = params;\n\n  if (isNodesDraggable) {\n    evt.stopPropagation();\n  }\n\n  const isMouseRight = isMouseButNotLeft(evt);\n\n  if (isClickNodeToSelectDisabled || isMouseRight) {\n    return;\n  }\n\n  if (svgRef.current) {\n    svgRef.current.focus({\n      preventScroll: true\n    });\n  }\n\n  const isMultiSelect = checkIsMultiSelect(evt);\n  const dragging = new DragNodeController(new PointerEventProvider(graphController.getGlobalEventTarget(), evt.pointerId), getPositionFromEvent, rectRef);\n\n  dragging.onMove = ({\n    dx,\n    dy,\n    totalDX,\n    totalDY,\n    e\n  }) => {\n    if (isNodesDraggable) {\n      eventChannel.trigger({\n        type: GraphNodeEvent.Drag,\n        node: target,\n        dx,\n        dy,\n        rawEvent: e,\n        isVisible: !isWithinThreshold(totalDX, totalDY, dragThreshold),\n        isAutoAlignEnable,\n        autoAlignThreshold\n      });\n    }\n  };\n\n  dragging.onEnd = ({\n    totalDX,\n    totalDY,\n    e\n  }) => {\n    var _a, _b;\n\n    graphController.pointerId = null;\n    const isDragCanceled = isWithinThreshold(totalDX, totalDY, dragThreshold);\n\n    if (isDragCanceled || !isNodesDraggable) {\n      graphController.nodeClickOnce = target;\n    }\n\n    eventChannel.trigger({\n      type: GraphNodeEvent.DragEnd,\n      node: target,\n      rawEvent: e,\n      isDragCanceled\n    });\n\n    if (isDragCanceled) {\n      const simulatedEvent = new MouseEvent(\"click\", e);\n      (_b = (_a = evt.currentTarget) !== null && _a !== void 0 ? _a : evt.target) === null || _b === void 0 ? void 0 : _b.dispatchEvent(simulatedEvent);\n    }\n  };\n\n  graphController.pointerId = evt.pointerId;\n\n  if (evt.target instanceof Element && evt.pointerType !== \"mouse\") {\n    evt.target.releasePointerCapture(evt.pointerId);\n  }\n\n  eventChannel.trigger({\n    type: GraphNodeEvent.DragStart,\n    node: target,\n    rawEvent: evt,\n    isMultiSelect\n  });\n  dragging.start(evt.nativeEvent);\n};\n\nconst useCanvasKeyboardEventHandlers = args => {\n  const {\n    featureControl,\n    graphConfig,\n    setCurHoverNode,\n    setCurHoverPort,\n    eventChannel\n  } = args;\n  const {\n    isDeleteDisabled,\n    isPasteDisabled,\n    isUndoEnabled\n  } = featureControl;\n  return React.useMemo(() => {\n    const keyDownHandlerMap = new Map();\n\n    const deleteKeyDownHandler = () => evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      if (isDeleteDisabled) {\n        return;\n      }\n\n      eventChannel.trigger({\n        type: GraphCanvasEvent.Delete\n      });\n      setCurHoverNode(undefined);\n      setCurHoverPort(undefined);\n    };\n\n    keyDownHandlerMap.set(\"delete\", deleteKeyDownHandler());\n    keyDownHandlerMap.set(\"backspace\", deleteKeyDownHandler());\n\n    const cKeyDownHandler = evt => {\n      if (metaControl(evt)) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        eventChannel.trigger({\n          type: GraphCanvasEvent.Copy\n        });\n      }\n    };\n\n    keyDownHandlerMap.set(\"c\", cKeyDownHandler);\n\n    const vKeyDownHandler = evt => {\n      if (metaControl(evt)) {\n        evt.preventDefault();\n        evt.stopPropagation();\n\n        if (isPasteDisabled) {\n          return;\n        }\n\n        const data = graphConfig.getClipboard().read();\n\n        if (data) {\n          eventChannel.trigger({\n            type: GraphCanvasEvent.Paste,\n            data\n          });\n        }\n      }\n    };\n\n    keyDownHandlerMap.set(\"v\", vKeyDownHandler);\n\n    const zKeyDownHandler = evt => {\n      if (!isUndoEnabled) {\n        return;\n      }\n\n      if (metaControl(evt)) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        eventChannel.trigger({\n          type: GraphCanvasEvent.Undo\n        });\n      }\n    };\n\n    if (isUndoEnabled) {\n      keyDownHandlerMap.set(\"z\", zKeyDownHandler);\n    }\n\n    const yKeyDownHandler = evt => {\n      if (!isUndoEnabled) {\n        return;\n      }\n\n      if (metaControl(evt)) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        eventChannel.trigger({\n          type: GraphCanvasEvent.Redo\n        });\n      }\n    };\n\n    if (isUndoEnabled) {\n      keyDownHandlerMap.set(\"y\", yKeyDownHandler);\n    }\n\n    const aKeyDownHandler = evt => {\n      if (metaControl(evt)) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        eventChannel.trigger({\n          type: GraphNodeEvent.SelectAll\n        });\n      }\n    };\n\n    keyDownHandlerMap.set(\"a\", aKeyDownHandler);\n\n    const spaceKeyDownHandler = evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n    };\n\n    const ctrlKeyDownHandler = evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n    };\n\n    const metaKeyDownHandler = evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n    };\n\n    const shiftKeyDownHandler = evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n    };\n\n    keyDownHandlerMap.set(\" \", spaceKeyDownHandler);\n    keyDownHandlerMap.set(\"control\", ctrlKeyDownHandler);\n    keyDownHandlerMap.set(\"meta\", metaKeyDownHandler);\n    keyDownHandlerMap.set(\"shift\", shiftKeyDownHandler);\n    return evt => {\n      if (evt.repeat) {\n        return;\n      }\n\n      const key = evt.key.toLowerCase();\n      const handler = keyDownHandlerMap.get(key);\n\n      if (handler) {\n        handler.call(null, evt);\n      }\n    };\n  }, [eventChannel, graphConfig, isDeleteDisabled, isPasteDisabled, isUndoEnabled, setCurHoverNode, setCurHoverPort]);\n};\n\nlet prevMouseDownPortId;\nlet prevMouseDownPortTime;\nfunction useEventChannel({\n  props,\n  dispatch,\n  rectRef,\n  svgRef,\n  containerRef,\n  featureControl,\n  graphConfig,\n  setFocusedWithoutMouse,\n  setCurHoverNode,\n  setCurHoverPort,\n  eventChannel,\n  updateViewport,\n  graphController\n}) {\n  const {\n    dragThreshold = 10,\n    autoAlignThreshold = DEFAULT_AUTO_ALIGN_THRESHOLD,\n    getPositionFromEvent = defaultGetPositionFromEvent,\n    canvasMouseMode,\n    edgeWillAdd\n  } = props;\n  const {\n    isNodesDraggable,\n    isAutoAlignEnable,\n    isClickNodeToSelectDisabled,\n    isPanDisabled,\n    isMultiSelectDisabled,\n    isLassoSelectEnable,\n    isConnectDisabled,\n    isPortHoverViewEnable,\n    isNodeEditDisabled,\n    isA11yEnable\n  } = featureControl;\n  const animationFramedDispatch = React.useMemo(() => animationFramed(dispatch), [dispatch]);\n  const keyDownHandler = useCanvasKeyboardEventHandlers({\n    featureControl,\n    eventChannel,\n    graphConfig,\n    setCurHoverNode,\n    setCurHoverPort\n  });\n\n  const focusFirstNode = e => {\n    const data = graphController.getData();\n\n    if (data.nodes.size > 0 && svgRef.current) {\n      const firstNode = data.head && data.nodes.get(data.head);\n\n      if (firstNode) {\n        focusItem(svgRef, {\n          node: firstNode,\n          port: undefined\n        }, e, eventChannel);\n      }\n    }\n  }; //#region edge\n\n\n  const handleEdgeEvent = event => {\n    switch (event.type) {\n      case GraphEdgeEvent.ConnectStart:\n      case GraphEdgeEvent.ConnectMove:\n      case GraphEdgeEvent.ConnectEnd:\n      case GraphEdgeEvent.ConnectNavigate:\n      case GraphEdgeEvent.Click:\n      case GraphEdgeEvent.MouseEnter:\n      case GraphEdgeEvent.MouseLeave:\n      case GraphEdgeEvent.DoubleClick:\n        dispatch(event);\n        break;\n\n      case GraphEdgeEvent.ContextMenu:\n        event.rawEvent.stopPropagation();\n        event.rawEvent.preventDefault();\n        dispatch(event);\n        break;\n    }\n  }; //#endregion edge\n  //#region canvas\n  // eslint-disable-next-line complexity\n\n\n  const handleCanvasEvent = event => {\n    var _a, _b;\n\n    switch (event.type) {\n      case GraphCanvasEvent.ViewportResize:\n      case GraphCanvasEvent.Drag:\n      case GraphCanvasEvent.MouseWheelScroll:\n      case GraphCanvasEvent.Zoom:\n      case GraphCanvasEvent.Pinch:\n      case GraphCanvasEvent.Click:\n      case GraphCanvasEvent.SelectStart:\n      case GraphCanvasEvent.SelectMove:\n      case GraphCanvasEvent.SelectEnd:\n      case GraphCanvasEvent.ResetSelection:\n      case GraphCanvasEvent.Navigate:\n      case GraphCanvasEvent.Paste:\n      case GraphCanvasEvent.Undo:\n      case GraphCanvasEvent.Redo:\n      case GraphCanvasEvent.Delete:\n      case GraphCanvasEvent.KeyUp:\n      case GraphCanvasEvent.DraggingNodeFromItemPanelStart:\n      case GraphCanvasEvent.DraggingNodeFromItemPanel:\n      case GraphCanvasEvent.DraggingNodeFromItemPanelEnd:\n        dispatch(event);\n        break;\n\n      case GraphCanvasEvent.Copy:\n        {\n          const selectedData = filterSelectedItems(graphController.getData());\n          const clipboard = graphConfig.getClipboard();\n          clipboard.write(selectedData);\n        }\n        break;\n\n      case GraphCanvasEvent.KeyDown:\n        if (!event.rawEvent.repeat && event.rawEvent.target === event.rawEvent.currentTarget && !event.rawEvent.shiftKey && event.rawEvent.key === \"Tab\") {\n          event.rawEvent.preventDefault();\n          event.rawEvent.stopPropagation();\n          setFocusedWithoutMouse(true);\n          focusFirstNode(event.rawEvent);\n        } else {\n          keyDownHandler(event.rawEvent);\n        }\n\n        dispatch(event);\n        break;\n\n      case GraphCanvasEvent.MouseDown:\n        {\n          graphController.nodeClickOnce = null;\n          (_a = svgRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n            preventScroll: true\n          });\n          setFocusedWithoutMouse(false);\n          const evt = event.rawEvent;\n          updateViewport();\n          onContainerMouseDown(evt, {\n            state: graphController.state,\n            canvasMouseMode,\n            isPanDisabled,\n            isMultiSelectDisabled,\n            isLassoSelectEnable,\n            dragThreshold,\n            containerRef,\n            getPositionFromEvent: defaultGetPositionFromEvent,\n            eventChannel,\n            graphController\n          });\n        }\n        break;\n\n      case GraphCanvasEvent.MouseUp:\n        if (graphController.canvasClickOnce) {\n          graphController.canvasClickOnce = false;\n          const evt = event.rawEvent;\n\n          if (evt.target instanceof Node && ((_b = svgRef.current) === null || _b === void 0 ? void 0 : _b.contains(evt.target)) && evt.target.nodeName === \"svg\") {\n            eventChannel.trigger({\n              type: GraphCanvasEvent.Click,\n              rawEvent: event.rawEvent\n            });\n          }\n        }\n\n        break;\n\n      case GraphCanvasEvent.ContextMenu:\n        event.rawEvent.preventDefault();\n        event.rawEvent.stopPropagation();\n        dispatch(event);\n        break;\n\n      case GraphCanvasEvent.MouseMove:\n        {\n          const evt = event.rawEvent;\n          graphController.setMouseClientPosition({\n            x: evt.clientX,\n            y: evt.clientY\n          });\n        }\n        break;\n\n      case GraphCanvasEvent.MouseLeave:\n        graphController.unsetMouseClientPosition();\n        graphController.canvasClickOnce = false;\n        break;\n\n      case GraphCanvasEvent.Blur:\n        setFocusedWithoutMouse(false);\n        break;\n    }\n  }; //#endregion canvas\n  //#region node\n\n\n  const onNodePointerEnter = event => {\n    const {\n      node\n    } = event;\n    const {\n      isNodeHoverViewEnabled\n    } = featureControl;\n    const behavior = graphController.getBehavior();\n\n    switch (behavior) {\n      case GraphBehavior.Connecting:\n      case GraphBehavior.Default:\n        if (isNodeHoverViewEnabled) {\n          setCurHoverNode(node.id);\n          setCurHoverPort(undefined);\n        }\n\n        break;\n    }\n\n    dispatch(event);\n  };\n\n  const onNodePointerLeave = event => {\n    dispatch(event);\n    setCurHoverNode(undefined);\n  };\n\n  const onNodeDoubleClick = event => {\n    if (isNodeEditDisabled) {\n      return;\n    }\n\n    event.rawEvent.stopPropagation();\n    dispatch(event);\n  };\n\n  const onNodeKeyDown = event => {\n    if (!svgRef || !isA11yEnable) {\n      return;\n    }\n\n    const data = graphController.getData();\n    const {\n      node\n    } = event;\n    const evt = event.rawEvent;\n\n    switch (evt.key) {\n      case \"Tab\":\n        {\n          evt.preventDefault();\n          evt.stopPropagation();\n          const nextItem = evt.shiftKey ? getPrevItem(data, node) : getNextItem(data, node);\n          focusItem(svgRef, nextItem, evt, eventChannel);\n        }\n        break;\n\n      case \"ArrowUp\":\n        evt.preventDefault();\n        evt.stopPropagation();\n        focusUpNode(data, node.id, svgRef, graphController, evt, eventChannel);\n        break;\n\n      case \"ArrowDown\":\n        evt.preventDefault();\n        evt.stopPropagation();\n        focusDownNode(data, node.id, svgRef, graphController, evt, eventChannel);\n        break;\n\n      case \"ArrowLeft\":\n        evt.preventDefault();\n        evt.stopPropagation();\n        focusLeftNode(data, node.id, svgRef, graphController, evt, eventChannel);\n        break;\n\n      case \"ArrowRight\":\n        evt.preventDefault();\n        evt.stopPropagation();\n        focusRightNode(data, node.id, svgRef, graphController, evt, eventChannel);\n        break;\n    }\n  }; // eslint-disable-next-line complexity\n\n\n  const handleNodeEvent = event => {\n    var _a;\n\n    switch (event.type) {\n      case GraphNodeEvent.ResizingStart:\n      case GraphNodeEvent.Resizing:\n      case GraphNodeEvent.ResizingEnd:\n      case GraphNodeEvent.DragStart:\n      case GraphNodeEvent.Drag:\n      case GraphNodeEvent.DragEnd:\n      case GraphNodeEvent.SelectAll:\n        dispatch(event);\n        break;\n\n      case GraphNodeEvent.PointerMove:\n        if (event.rawEvent.pointerId === graphController.pointerId) {\n          animationFramedDispatch(event);\n        }\n\n        break;\n\n      case GraphNodeEvent.PointerDown:\n        {\n          graphController.nodeClickOnce = null;\n\n          if (graphController.getBehavior() !== GraphBehavior.Default) {\n            return;\n          }\n\n          const evt = event.rawEvent;\n          updateViewport();\n          onNodePointerDown(evt, event.node, {\n            svgRef,\n            rectRef,\n            isNodesDraggable,\n            isAutoAlignEnable,\n            dragThreshold,\n            getPositionFromEvent,\n            isClickNodeToSelectDisabled,\n            autoAlignThreshold,\n            eventChannel,\n            graphController\n          });\n        }\n        break;\n\n      case GraphNodeEvent.PointerEnter:\n        onNodePointerEnter(event);\n        break;\n\n      case GraphNodeEvent.PointerLeave:\n        onNodePointerLeave(event);\n        break;\n\n      case GraphNodeEvent.MouseDown:\n        graphController.nodeClickOnce = null;\n        event.rawEvent.preventDefault();\n\n        if (isNodesDraggable) {\n          event.rawEvent.stopPropagation();\n        }\n\n        setFocusedWithoutMouse(false);\n        break;\n\n      case GraphNodeEvent.Click:\n        if (((_a = graphController.nodeClickOnce) === null || _a === void 0 ? void 0 : _a.id) === event.node.id) {\n          const {\n            currentTarget\n          } = event.rawEvent;\n\n          if (currentTarget instanceof SVGElement) {\n            currentTarget.focus({\n              preventScroll: true\n            });\n          }\n\n          event.node = graphController.nodeClickOnce;\n          dispatch(event);\n          graphController.nodeClickOnce = null;\n        } else {\n          event.intercepted = true;\n        }\n\n        break;\n\n      case GraphNodeEvent.ContextMenu:\n        event.rawEvent.preventDefault();\n        event.rawEvent.stopPropagation();\n        dispatch(event);\n        break;\n\n      case GraphNodeEvent.DoubleClick:\n        onNodeDoubleClick(event);\n        break;\n\n      case GraphNodeEvent.KeyDown:\n        onNodeKeyDown(event);\n        break;\n    }\n  }; //#endregion node\n  //#region port\n\n\n  const onPortPointerDown = React.useCallback(event => {\n    const evt = event.rawEvent;\n    const {\n      node,\n      port\n    } = event;\n    setFocusedWithoutMouse(false);\n    evt.stopPropagation();\n    evt.preventDefault();\n    prevMouseDownPortId = `${node.id}:${port.id}`;\n    prevMouseDownPortTime = performance.now();\n\n    if (isConnectDisabled || isMouseButNotLeft(evt)) {\n      return;\n    }\n\n    updateViewport();\n    const globalEventTarget = graphController.getGlobalEventTarget();\n    const dragging = new DragController(new PointerEventProvider(globalEventTarget, evt.pointerId), getPositionFromEvent);\n\n    dragging.onMove = ({\n      clientX,\n      clientY,\n      e\n    }) => {\n      eventChannel.trigger({\n        type: GraphEdgeEvent.ConnectMove,\n        rawEvent: e,\n        clientX,\n        clientY\n      });\n    };\n\n    dragging.onEnd = ({\n      e,\n      totalDY,\n      totalDX\n    }) => {\n      var _a, _b;\n\n      const isCancel = isWithinThreshold(totalDX, totalDY, dragThreshold);\n      eventChannel.trigger({\n        type: GraphEdgeEvent.ConnectEnd,\n        rawEvent: e,\n        edgeWillAdd,\n        isCancel\n      });\n      graphController.pointerId = null;\n\n      if (isCancel) {\n        const simulatedEvent = new MouseEvent(\"click\", e);\n        (_b = (_a = evt.currentTarget) !== null && _a !== void 0 ? _a : evt.target) === null || _b === void 0 ? void 0 : _b.dispatchEvent(simulatedEvent);\n      }\n    };\n\n    eventChannel.trigger({\n      type: GraphEdgeEvent.ConnectStart,\n      nodeId: node.id,\n      portId: port.id,\n      rawEvent: evt,\n      clientPoint: {\n        x: evt.clientX,\n        y: evt.clientY\n      }\n    });\n\n    if (evt.target instanceof Element && evt.pointerType !== \"mouse\") {\n      evt.target.releasePointerCapture(evt.pointerId);\n    }\n\n    graphController.pointerId = evt.pointerId;\n    dragging.start(evt.nativeEvent);\n  }, [edgeWillAdd, eventChannel, getPositionFromEvent, graphController, isConnectDisabled, setFocusedWithoutMouse, updateViewport]);\n  const onPortPointerUp = React.useCallback(event => {\n    const evt = event.rawEvent;\n    const {\n      node,\n      port\n    } = event; // simulate port click event\n\n    if (prevMouseDownPortId === `${node.id}:${port.id}` && performance.now() - (prevMouseDownPortTime || 0) < 500) {\n      prevMouseDownPortId = undefined;\n      prevMouseDownPortTime = undefined;\n      eventChannel.trigger({\n        type: GraphPortEvent.Click,\n        node,\n        port,\n        rawEvent: evt\n      });\n    }\n  }, [eventChannel]);\n\n  const onPortPointerEnter = event => {\n    const behavior = graphController.getBehavior();\n\n    switch (behavior) {\n      case GraphBehavior.Default:\n        setCurHoverPort([event.node.id, event.port.id]);\n        break;\n    }\n\n    if (isPortHoverViewEnable) {\n      setCurHoverPort([event.node.id, event.port.id]);\n    }\n\n    if (event.rawEvent.pointerId === graphController.pointerId) {\n      dispatch(event);\n    }\n  };\n\n  const onPortPointerLeave = event => {\n    setCurHoverPort(undefined);\n    dispatch(event);\n  };\n\n  const onPortKeyDown = event => {\n    var _a, _b, _c;\n\n    if (!isA11yEnable) {\n      return;\n    }\n\n    const evt = event.rawEvent; // nativeEvent.code not support by Edge <79, use evt.key to polyfill\n\n    if (evt.altKey && (evt.nativeEvent.code === \"KeyC\" || evt.key === \"c\")) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      eventChannel.trigger({\n        type: GraphEdgeEvent.ConnectStart,\n        nodeId: event.node.id,\n        portId: event.port.id,\n        rawEvent: evt\n      });\n      return;\n    }\n\n    const data = graphController.getData();\n    const {\n      node,\n      port\n    } = event;\n\n    switch (evt.key) {\n      case \"Tab\":\n        if (isA11yEnable && graphController.getBehavior() === GraphBehavior.Connecting) {\n          evt.preventDefault();\n          evt.stopPropagation();\n          eventChannel.trigger({\n            type: GraphEdgeEvent.ConnectNavigate,\n            rawEvent: evt\n          });\n        } else {\n          const nextItem = evt.shiftKey ? getPrevItem(data, node, port) : getNextItem(data, node, port);\n          focusItem(svgRef, nextItem, evt, eventChannel);\n        }\n\n        break;\n\n      case \"ArrowUp\":\n      case \"ArrowLeft\":\n        evt.preventDefault();\n        evt.stopPropagation();\n        focusPrevPort((_a = node.ports) !== null && _a !== void 0 ? _a : [], node, port.id, svgRef, evt, eventChannel);\n        break;\n\n      case \"ArrowDown\":\n      case \"ArrowRight\":\n        evt.preventDefault();\n        evt.stopPropagation();\n        focusNextPort((_b = node.ports) !== null && _b !== void 0 ? _b : [], node, port.id, svgRef, evt, eventChannel);\n        break;\n\n      case \"g\":\n        evt.preventDefault();\n        evt.stopPropagation();\n        goToConnectedPort(data, node, port, svgRef, evt, eventChannel);\n        break;\n\n      case \"Escape\":\n        if (graphController.getBehavior() === GraphBehavior.Connecting) {\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          if (svgRef.current) {\n            (_c = findDOMElement(svgRef.current, {\n              node,\n              port\n            })) === null || _c === void 0 ? void 0 : _c.blur();\n          }\n        }\n\n        break;\n\n      case \"Enter\":\n        evt.preventDefault();\n        evt.stopPropagation();\n        eventChannel.trigger({\n          type: GraphEdgeEvent.ConnectEnd,\n          rawEvent: evt.nativeEvent,\n          edgeWillAdd,\n          isCancel: false\n        });\n        break;\n    }\n  };\n\n  const handlePortEvent = event => {\n    switch (event.type) {\n      case GraphPortEvent.Click:\n        dispatch(event);\n        break;\n\n      case GraphPortEvent.PointerDown:\n        onPortPointerDown(event);\n        break;\n\n      case GraphPortEvent.PointerUp:\n        onPortPointerUp(event);\n        break;\n\n      case GraphPortEvent.PointerEnter:\n        onPortPointerEnter(event);\n        break;\n\n      case GraphPortEvent.PointerLeave:\n        onPortPointerLeave(event);\n        break;\n\n      case GraphPortEvent.ContextMenu:\n        event.rawEvent.preventDefault();\n        event.rawEvent.stopPropagation();\n        dispatch(event);\n        break;\n\n      case GraphPortEvent.Focus:\n        event.rawEvent.stopPropagation();\n        dispatch(event);\n        break;\n\n      case GraphPortEvent.Blur:\n        if (graphController.getBehavior() === GraphBehavior.Connecting) {\n          eventChannel.trigger({\n            type: GraphEdgeEvent.ConnectEnd,\n            rawEvent: event.rawEvent.nativeEvent,\n            edgeWillAdd,\n            isCancel: true\n          });\n        }\n\n        break;\n\n      case GraphPortEvent.KeyDown:\n        onPortKeyDown(event);\n        break;\n    }\n  }; //#endregion port\n\n\n  const handleEvent = event => {\n    const behavior = handleBehaviorChange(graphController.getBehavior(), event);\n    graphController.setBehavior(behavior);\n    handleEdgeEvent(event);\n    handleCanvasEvent(event);\n    handleNodeEvent(event);\n    handlePortEvent(event); //#region other events\n\n    switch (event.type) {\n      case GraphMinimapEvent.Pan:\n      case GraphScrollBarEvent.Scroll:\n      case GraphContextMenuEvent.Open:\n      case GraphContextMenuEvent.Close:\n        dispatch(event);\n        break;\n    } //#endregion other events\n\n  };\n\n  React.useImperativeHandle(eventChannel.listenersRef, () => handleEvent);\n  React.useImperativeHandle(eventChannel.externalHandlerRef, () => props.onEvent);\n}\n\nconst useFeatureControl = features => {\n  return React.useMemo(() => {\n    const isNodesDraggable = features.has(GraphFeatures.NodeDraggable);\n    const isNodeResizable = features.has(GraphFeatures.NodeResizable);\n    const isAutoFitDisabled = !features.has(GraphFeatures.AutoFit);\n    const isPanDisabled = !features.has(GraphFeatures.PanCanvas);\n    const isMultiSelectDisabled = !features.has(GraphFeatures.MultipleSelect);\n    const isLassoSelectEnable = features.has(GraphFeatures.LassoSelect);\n    const isNodeHoverViewEnabled = features.has(GraphFeatures.NodeHoverView);\n    const isClickNodeToSelectDisabled = !features.has(GraphFeatures.ClickNodeToSelect);\n    const isConnectDisabled = !features.has(GraphFeatures.AddNewEdges);\n    const isPortHoverViewEnable = features.has(GraphFeatures.PortHoverView);\n    const isNodeEditDisabled = !features.has(GraphFeatures.EditNode);\n    const isVerticalScrollDisabled = !features.has(GraphFeatures.CanvasVerticalScrollable);\n    const isHorizontalScrollDisabled = !features.has(GraphFeatures.CanvasHorizontalScrollable);\n    const isA11yEnable = features.has(GraphFeatures.A11yFeatures);\n    const isAutoAlignEnable = features.has(GraphFeatures.AutoAlign);\n    const isCtrlKeyZoomEnable = features.has(GraphFeatures.CtrlKeyZoom);\n    const isLimitBoundary = features.has(GraphFeatures.LimitBoundary);\n    const isVirtualizationEnabled = !features.has(GraphFeatures.AutoFit);\n    const isEdgeEditable = features.has(GraphFeatures.EditEdge);\n    const isDeleteDisabled = !features.has(GraphFeatures.Delete);\n    const isPasteDisabled = !features.has(GraphFeatures.AddNewNodes) || !features.has(GraphFeatures.AddNewEdges);\n    const isUndoEnabled = features.has(GraphFeatures.UndoStack);\n    const isScrollbarVisible = (!isVerticalScrollDisabled || !isHorizontalScrollDisabled || !isPanDisabled) && isLimitBoundary && !features.has(GraphFeatures.InvisibleScrollbar);\n    return {\n      isNodesDraggable,\n      isNodeResizable,\n      isAutoFitDisabled,\n      isPanDisabled,\n      isMultiSelectDisabled,\n      isLassoSelectEnable,\n      isNodeHoverViewEnabled,\n      isClickNodeToSelectDisabled,\n      isConnectDisabled,\n      isPortHoverViewEnable,\n      isNodeEditDisabled,\n      isVerticalScrollDisabled,\n      isHorizontalScrollDisabled,\n      isA11yEnable,\n      isAutoAlignEnable,\n      isCtrlKeyZoomEnable,\n      isLimitBoundary,\n      isVirtualizationEnabled,\n      isEdgeEditable,\n      isDeleteDisabled,\n      isPasteDisabled,\n      isUndoEnabled,\n      isScrollbarVisible\n    };\n  }, [features]);\n};\n\nconst emptyLine = () => ({\n  x1: 0,\n  y1: 0,\n  x2: 0,\n  y2: 0,\n  visible: false\n});\nconst Line = props => {\n  var _a;\n\n  const {\n    line,\n    style\n  } = props;\n  const lineStyle = Object.assign(Object.assign({\n    // strokeDasharray: \"0,0\",\n    strokeWidth: 1\n  }, style), {\n    stroke: line.visible ? (_a = style === null || style === void 0 ? void 0 : style.stroke) !== null && _a !== void 0 ? _a : \"#ea4300\" : \"none\"\n  });\n  return jsx(\"line\", {\n    className: \"auto-align-hint\",\n    x1: line.x1,\n    y1: line.y1,\n    x2: line.x2,\n    y2: line.y2,\n    style: lineStyle\n  });\n};\n\nconst AlignmentLines = /*#__PURE__*/React.memo(({\n  style\n}) => {\n  const alignmentLines = useAlignmentLines();\n  return jsx(Fragment, {\n    children: alignmentLines.map((l, index) => {\n      if (l.visible) {\n        return jsx(Line, {\n          line: l,\n          style: style\n        }, index);\n      }\n\n      return null;\n    })\n  });\n});\nAlignmentLines.displayName = \"AlignmentLines\";\n\nconst NodeFrame = props => {\n  var _a, _b;\n\n  const slotsContext = React.useContext(SlotsContext);\n  return jsx(Fragment, {\n    children: (_b = (_a = slotsContext.renderNodeFrame) === null || _a === void 0 ? void 0 : _a.call(slotsContext, props)) !== null && _b !== void 0 ? _b : props.children\n  });\n};\n\nconst NodeResizeHandler = props => {\n  var _a, _b;\n\n  const slotsContext = React.useContext(SlotsContext);\n  return jsx(Fragment, {\n    children: (_b = (_a = slotsContext.renderNodeResizeHandler) === null || _a === void 0 ? void 0 : _a.call(slotsContext, props)) !== null && _b !== void 0 ? _b : props.children\n  });\n};\n\nconst Slots = {\n  NodeFrame,\n  NodeResizeHandler\n};\n\nconst AnimatingNodeGroup = props => {\n  var _a, _b;\n\n  const {\n    dummyNodes,\n    graphData\n  } = props;\n  const graphConfig = useGraphConfig();\n  const {\n    dWidth,\n    dHeight\n  } = dummyNodes;\n  const dx = (_a = dummyNodes.alignedDX) !== null && _a !== void 0 ? _a : dummyNodes.dx;\n  const dy = (_b = dummyNodes.alignedDY) !== null && _b !== void 0 ? _b : dummyNodes.dy;\n  return jsx(\"g\", {\n    children: dummyNodes.nodes.map(dummyNode => {\n      const node = graphData.nodes.get(dummyNode.id);\n\n      if (!node) {\n        return null;\n      }\n\n      const x = dummyNode.x + dx;\n      const y = dummyNode.y + dy;\n      const width = dummyNode.width + dWidth;\n      const height = dummyNode.height + dHeight;\n      const nodeConfig = getNodeConfig(node, graphConfig);\n\n      if (nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.renderDummy) {\n        return nodeConfig.renderDummy(Object.assign(Object.assign({}, node.inner), {\n          x,\n          y,\n          width,\n          height\n        }));\n      }\n\n      return jsx(Slots.NodeFrame, Object.assign({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }, {\n        children: jsx(\"rect\", {\n          transform: `translate(${x},${y})`,\n          height: height,\n          width: width,\n          stroke: defaultColors.dummyNodeStroke,\n          strokeDasharray: \"4\",\n          fill: \"none\"\n        }, node.id)\n      }), `node-frame-${dummyNode.id}`);\n    })\n  });\n};\n\nconst ConnectingLine = props => {\n  const {\n    autoAttachLine,\n    connectingLine,\n    styles\n  } = props;\n  const strokeColor = (styles === null || styles === void 0 ? void 0 : styles.stroke) || defaultColors.primaryColor;\n  const fill = (styles === null || styles === void 0 ? void 0 : styles.fill) || \"none\";\n  const strokeDasharray = (styles === null || styles === void 0 ? void 0 : styles.strokeDasharray) || \"4,4\";\n  const connectingLineStroke = connectingLine.visible ? strokeColor : \"none\";\n  return jsxs(\"g\", {\n    children: [jsx(\"defs\", {\n      children: jsx(\"marker\", Object.assign({\n        id: \"markerArrow\",\n        markerWidth: \"10\",\n        markerHeight: \"10\",\n        refX: \"6\",\n        refY: \"5\",\n        orient: \"auto\",\n        markerUnits: \"strokeWidth\"\n      }, {\n        children: jsx(\"path\", {\n          d: \"M0,0 L6,5 L0,10\",\n          style: {\n            stroke: connectingLineStroke,\n            fill: \"none\"\n          }\n        })\n      }))\n    }), jsx(\"line\", {\n      x1: connectingLine.x1,\n      y1: connectingLine.y1,\n      x2: connectingLine.x2,\n      y2: connectingLine.y2,\n      style: {\n        stroke: connectingLineStroke,\n        fill,\n        strokeDasharray\n      },\n      markerEnd: \"url(#markerArrow)\"\n    }), jsx(\"path\", {\n      d: getCurvePathD(autoAttachLine.x2, autoAttachLine.x1, autoAttachLine.y2, autoAttachLine.y1),\n      style: {\n        stroke: autoAttachLine.visible ? strokeColor : \"none\",\n        fill: \"none\"\n      }\n    })]\n  });\n};\n\nconst Connecting = /*#__PURE__*/React.memo(props => {\n  const {\n    styles,\n    graphConfig,\n    viewport,\n    movingPoint\n  } = props;\n  const {\n    sourcePort,\n    sourceNode,\n    targetPort,\n    targetNode\n  } = useConnectingState();\n\n  if (!sourceNode || !sourcePort) {\n    return null;\n  }\n\n  const sourcePortPosition = sourceNode.getPortPosition(sourcePort.id, graphConfig);\n  let targetPortPosition;\n  let isAttach = false;\n\n  if (targetNode && targetPort) {\n    isAttach = true;\n    targetPortPosition = targetNode === null || targetNode === void 0 ? void 0 : targetNode.getPortPosition(targetPort.id, graphConfig);\n  } else {\n    targetPortPosition = sourcePortPosition;\n  }\n\n  if (!sourcePortPosition || !targetPortPosition) {\n    return null;\n  }\n\n  const sourcePoint = transformPoint(sourcePortPosition.x, sourcePortPosition.y, viewport.transformMatrix);\n  const targetPoint = transformPoint(targetPortPosition.x, targetPortPosition.y, viewport.transformMatrix);\n  const connectingLine = movingPoint ? {\n    x1: sourcePoint.x,\n    y1: sourcePoint.y,\n    x2: movingPoint.x,\n    y2: movingPoint.y,\n    visible: !isAttach\n  } : emptyLine();\n  const autoAttachLine = {\n    x1: sourcePoint.x,\n    y1: sourcePoint.y,\n    x2: targetPoint.x,\n    y2: targetPoint.y,\n    visible: isAttach\n  };\n  return jsx(ConnectingLine, {\n    connectingLine: connectingLine,\n    autoAttachLine: autoAttachLine,\n    styles: styles\n  });\n});\nConnecting.displayName = \"Connecting\";\n\nconst defaultStyle = {\n  position: \"fixed\",\n  userSelect: \"none\"\n};\nconst GraphContextMenu = ({\n  state,\n  onClick\n}) => {\n  var _a, _b;\n\n  const ref = React.useRef(null);\n  const [style, setStyle] = React.useState(Object.assign({}, defaultStyle));\n  React.useLayoutEffect(() => {\n    const el = ref.current;\n\n    if (!el || !state.contextMenuPosition) {\n      return;\n    }\n\n    const {\n      x,\n      y\n    } = state.contextMenuPosition;\n    const {\n      clientWidth,\n      clientHeight\n    } = document.documentElement;\n    const {\n      width,\n      height\n    } = el.getBoundingClientRect();\n    const nextStyle = Object.assign({}, defaultStyle);\n\n    if (x + width >= clientWidth) {\n      nextStyle.right = 0;\n    } else {\n      nextStyle.left = x;\n    }\n\n    if (y + height > clientHeight) {\n      nextStyle.bottom = 0;\n    } else {\n      nextStyle.top = y;\n    }\n\n    setStyle(nextStyle); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [(_a = state.contextMenuPosition) === null || _a === void 0 ? void 0 : _a.x, (_b = state.contextMenuPosition) === null || _b === void 0 ? void 0 : _b.y]);\n  const contextMenuConfig = useContextMenuConfigContext();\n  const [content, setContent] = React.useState(jsx(Fragment, {}));\n  React.useEffect(() => {\n    const data = state.data.present;\n    let selectedNodesCount = 0;\n    let selectedPortsCount = 0;\n    let selectedEdgesCount = 0;\n    data.nodes.forEach(node => {\n      var _a;\n\n      if (isSelected(node)) {\n        selectedNodesCount += 1;\n      }\n\n      (_a = node.ports) === null || _a === void 0 ? void 0 : _a.forEach(port => {\n        if (isSelected(port)) {\n          selectedPortsCount += 1;\n        }\n      });\n    });\n    data.edges.forEach(edge => {\n      if (isSelected(edge)) {\n        selectedEdgesCount += 1;\n      }\n    });\n    let menu; // todo port menu\n\n    if (selectedPortsCount + selectedNodesCount + selectedEdgesCount > 1) {\n      menu = contextMenuConfig.getMenu(MenuType.Multi);\n    } else if (selectedPortsCount + selectedNodesCount + selectedEdgesCount === 0) {\n      menu = contextMenuConfig.getMenu(MenuType.Canvas);\n    } else if (selectedNodesCount === 1) {\n      menu = contextMenuConfig.getMenu(MenuType.Node);\n    } else if (selectedPortsCount === 1) {\n      menu = contextMenuConfig.getMenu(MenuType.Port);\n    } else {\n      menu = contextMenuConfig.getMenu(MenuType.Edge);\n    }\n\n    setContent(menu);\n  }, [state.data.present, contextMenuConfig]);\n  const handleContextMenu = React.useCallback(evt => {\n    evt.stopPropagation();\n    evt.preventDefault();\n  }, []);\n  return jsx(Fragment, {\n    children: state.contextMenuPosition && jsx(\"div\", Object.assign({\n      ref: ref,\n      onClick: onClick,\n      onContextMenu: handleContextMenu,\n      role: \"button\",\n      style: style\n    }, {\n      children: content\n    }))\n  });\n};\n\nconst Renderer = props => jsx(\"rect\", {\n  height: props.height,\n  width: props.width,\n  fill: props.group.fill\n});\n\nconst defaultGroup = {\n  render: Renderer\n};\n\nconst Group = props => {\n  var _a;\n\n  const {\n    data,\n    group\n  } = props;\n  const graphConfig = useGraphConfig();\n  const {\n    x,\n    y,\n    width,\n    height\n  } = React.useMemo(() => getGroupRect(group, data.nodes, graphConfig), [group, data.nodes, graphConfig]);\n  const groupConfig = (_a = graphConfig.getGroupConfig(group)) !== null && _a !== void 0 ? _a : defaultGroup;\n  const automationId = `group-container-${group.id}`;\n  return jsx(\"g\", Object.assign({\n    \"data-automation-id\": automationId,\n    transform: `translate(${x}, ${y})`\n  }, {\n    children: groupConfig.render({\n      group,\n      height,\n      width\n    })\n  }), group.id);\n};\n\nconst GraphGroupsRenderer = props => {\n  return jsx(\"g\", {\n    children: React.useMemo(() => props.groups.map(group => {\n      return jsx(Group, {\n        group: group,\n        data: props.data\n      }, group.id);\n    }), [props.groups, props.data])\n  });\n};\n\nconst NodeTooltips = props => {\n  const {\n    node,\n    viewport\n  } = props;\n  const graphConfig = useGraphConfig();\n\n  if (!node) {\n    return null;\n  }\n\n  if (!has(GraphNodeStatus.Activated)(node.status)) {\n    return null;\n  }\n\n  const nodeConfig = getNodeConfig(node, graphConfig);\n\n  if (!(nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.renderTooltips)) {\n    return null;\n  }\n\n  return jsx(\"div\", Object.assign({\n    className: \"node-tooltips\"\n  }, {\n    children: nodeConfig.renderTooltips({\n      model: node,\n      viewport\n    })\n  }));\n};\n\nconst PortTooltips = props => {\n  const graphConfig = useGraphConfig();\n  const {\n    parentNode,\n    port,\n    viewport\n  } = props;\n  const isPortTooltipsVisible = has(GraphPortStatus.Activated)(port.status);\n\n  if (!isPortTooltipsVisible) {\n    return null;\n  }\n\n  const portConfig = graphConfig.getPortConfig(port);\n\n  if (!portConfig || !portConfig.renderTooltips) {\n    return null;\n  }\n\n  const pos = parentNode.getPortPosition(port.id, graphConfig);\n\n  if (!pos) {\n    return null;\n  }\n\n  return jsx(\"div\", Object.assign({\n    className: \"port-tooltips\"\n  }, {\n    children: jsx(ConnectingStateContext.Consumer, {\n      children: ({\n        sourceNode,\n        sourcePort\n      }) => portConfig.renderTooltips && portConfig.renderTooltips(Object.assign({\n        model: port,\n        parentNode,\n        data: props.data,\n        anotherNode: sourceNode,\n        anotherPort: sourcePort,\n        viewport\n      }, pos))\n    })\n  }));\n};\n\nfunction useRefValue(value) {\n  const ref = useRef(value);\n  useLayoutEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nconst SCROLL_BAR_WIDTH = 10;\nconst wrapperCommonStyle = {\n  position: \"absolute\",\n  cursor: \"initial\"\n};\nconst useStyles = createUseStyles({\n  verticalScrollWrapper: Object.assign(Object.assign({}, wrapperCommonStyle), {\n    height: \"100%\",\n    width: SCROLL_BAR_WIDTH,\n    top: 0,\n    right: 0\n  }),\n  horizontalScrollWrapper: Object.assign(Object.assign({}, wrapperCommonStyle), {\n    height: SCROLL_BAR_WIDTH,\n    width: \"100%\",\n    bottom: 0,\n    left: 0\n  }),\n  verticalScrollStyle: args => ({\n    height: args.scrollbarLayout.verticalScrollHeight,\n    width: \"100%\",\n    backgroundColor: defaultColors.scrollbarColor,\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    transform: `translateY(${args.scrollbarLayout.verticalScrollTop}px)`\n  }),\n  horizontalScrollStyle: args => ({\n    width: args.scrollbarLayout.horizontalScrollWidth - SCROLL_BAR_WIDTH,\n    height: \"100%\",\n    backgroundColor: defaultColors.scrollbarColor,\n    position: \"absolute\",\n    left: 0,\n    bottom: 0,\n    transform: `translateX(${args.scrollbarLayout.horizontalScrollLeft}px)`\n  })\n});\nconst Scrollbar = props => {\n  const {\n    vertical = true,\n    horizontal = true,\n    offsetLimit,\n    eventChannel,\n    viewport\n  } = props;\n  const graphController = useGraphController();\n  const scrollbarLayout = getScrollbarLayout(viewport, offsetLimit);\n  const classes = useStyles({\n    scrollbarLayout\n  });\n  const scrollbarLayoutRef = useRefValue(scrollbarLayout);\n  /**\r\n   * @param e\r\n   */\n\n  function onVerticalScrollMouseDown(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const {\n      height: containerHeight\n    } = viewport.rect;\n    const dragging = new DragController(new MouseMoveEventProvider(graphController.getGlobalEventTarget()), defaultGetPositionFromEvent);\n\n    dragging.onMove = ({\n      dy: scrollbarDy,\n      e: rawEvent\n    }) => {\n      const {\n        totalContentHeight\n      } = scrollbarLayoutRef.current;\n      const dy = -(scrollbarDy * totalContentHeight) / containerHeight;\n      eventChannel.trigger({\n        type: GraphScrollBarEvent.Scroll,\n        rawEvent,\n        dx: 0,\n        dy\n      });\n    };\n\n    dragging.onEnd = () => {\n      eventChannel.trigger({\n        type: GraphScrollBarEvent.ScrollEnd\n      });\n    };\n\n    dragging.start(e.nativeEvent);\n    eventChannel.trigger({\n      type: GraphScrollBarEvent.ScrollStart\n    });\n  }\n  /**\r\n   * @param e\r\n   */\n\n\n  function onHorizontalScrollMouseDown(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const {\n      width: containerWidth\n    } = viewport.rect;\n    const dragging = new DragController(new MouseMoveEventProvider(graphController.getGlobalEventTarget()), defaultGetPositionFromEvent);\n\n    dragging.onMove = ({\n      dx: scrollbarDx,\n      e: rawEvent\n    }) => {\n      const {\n        totalContentWidth\n      } = scrollbarLayoutRef.current;\n      const dx = -(scrollbarDx * totalContentWidth) / containerWidth;\n      eventChannel.trigger({\n        type: GraphScrollBarEvent.Scroll,\n        rawEvent,\n        dx,\n        dy: 0\n      });\n    };\n\n    dragging.onEnd = () => {\n      eventChannel.trigger({\n        type: GraphScrollBarEvent.ScrollEnd\n      });\n    };\n\n    dragging.start(e.nativeEvent);\n    eventChannel.trigger({\n      type: GraphScrollBarEvent.ScrollStart\n    });\n  }\n\n  return jsxs(Fragment, {\n    children: [vertical && jsx(\"div\", Object.assign({\n      className: classes.verticalScrollWrapper\n    }, {\n      children: jsx(\"div\", {\n        className: classes.verticalScrollStyle,\n        onMouseDown: onVerticalScrollMouseDown,\n        role: \"button\",\n        \"aria-label\": \"vertical scrollbar\",\n        \"aria-roledescription\": \"vertical scrollbar\",\n        id: \"canvas-vertical-scrollbar\"\n      })\n    })), horizontal && jsx(\"div\", Object.assign({\n      className: classes.horizontalScrollWrapper\n    }, {\n      children: jsx(\"div\", {\n        className: classes.horizontalScrollStyle,\n        onMouseDown: onHorizontalScrollMouseDown,\n        role: \"button\",\n        \"aria-label\": \"horizontal scrollbar\",\n        \"aria-roledescription\": \"horizontal scrollbar\",\n        id: \"canvas-horizontal-scrollbar\"\n      })\n    }))]\n  });\n}; // =========================== utils for scroll bar ================================\n\n/**\r\n * get the total content height, including the container height and the scrollable area\r\n *\r\n * @param containerHeight\r\n * @param offsetLimit\r\n * @returns totalContentHeight\r\n */\n\nfunction getTotalContentHeight(containerHeight, offsetLimit) {\n  const {\n    minY,\n    maxY\n  } = offsetLimit;\n  return containerHeight + maxY - minY;\n}\n/**\r\n * get the total content width, including the container width and the scrollable area\r\n *\r\n * @param containerWidth\r\n * @param offsetLimit\r\n * @returns totalContentWidth\r\n */\n\n\nfunction getTotalContentWidth(containerWidth, offsetLimit) {\n  const {\n    minX,\n    maxX\n  } = offsetLimit;\n  return containerWidth + maxX - minX;\n}\n/**\r\n * get the scrollbar size and position\r\n *\r\n * @param rect\r\n * @param offsetLimit\r\n * @param zoomPanSettings\r\n * @returns\r\n */\n\n\nfunction getScrollbarLayout(viewport, offsetLimit) {\n  const {\n    rect,\n    transformMatrix\n  } = viewport;\n  const totalContentHeight = getTotalContentHeight(rect.height, offsetLimit);\n  const totalContentWidth = getTotalContentWidth(rect.width, offsetLimit);\n  return {\n    totalContentHeight,\n    totalContentWidth,\n    verticalScrollHeight: rect.height * rect.height / totalContentHeight,\n    horizontalScrollWidth: rect.width * rect.width / totalContentWidth,\n    verticalScrollTop: (offsetLimit.maxY - transformMatrix[5]) * rect.height / totalContentHeight,\n    horizontalScrollLeft: (offsetLimit.maxX - transformMatrix[4]) * rect.width / totalContentWidth\n  };\n}\n\nconst Transform = ({\n  matrix,\n  children\n}) => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const transform = React.useMemo(() => `matrix(${matrix.join(\" \")})`, matrix);\n  return jsx(\"g\", Object.assign({\n    transform: transform\n  }, {\n    children: children\n  }));\n};\n\nfunction getHintPoints(source, target, {\n  minX,\n  minY,\n  maxX,\n  maxY\n}, yOnRightAxis, xOnBottomAxis, xOnTopAxis, yOnLeftAxis) {\n  if (source.x === target.x) {\n    return {\n      x: source.x,\n      y: source.y < target.y ? maxY : minY\n    };\n  }\n\n  if (source.x < target.x) {\n    if (source.y < target.y) {\n      return yOnRightAxis <= maxY ? {\n        x: maxX,\n        y: yOnRightAxis\n      } : {\n        x: xOnBottomAxis,\n        y: maxY\n      };\n    } else {\n      return yOnRightAxis >= minY ? {\n        x: maxX,\n        y: yOnRightAxis\n      } : {\n        x: xOnTopAxis,\n        y: minY\n      };\n    }\n  }\n\n  if (source.y < target.y) {\n    return xOnBottomAxis > minX ? {\n      x: xOnBottomAxis,\n      y: maxY\n    } : {\n      x: minX,\n      y: yOnLeftAxis\n    };\n  }\n\n  return yOnLeftAxis > minY ? {\n    x: minX,\n    y: yOnLeftAxis\n  } : {\n    x: xOnTopAxis,\n    y: minY\n  };\n}\n\nconst GraphEdge = /*#__PURE__*/React.memo( // eslint-disable-next-line complexity\nprops => {\n  var _a;\n\n  const {\n    edge,\n    data: graphModel,\n    eventChannel,\n    source,\n    target,\n    graphId\n  } = props;\n  const graphConfig = useGraphConfig();\n  const virtualization = useVirtualization();\n  const {\n    viewport,\n    renderedArea,\n    visibleArea\n  } = virtualization;\n\n  const edgeEvent = type => e => {\n    e.persist();\n    eventChannel.trigger({\n      type,\n      edge,\n      rawEvent: e\n    });\n  };\n\n  const isSourceRendered = isPointInRect(renderedArea, source);\n  const isTargetRendered = isPointInRect(renderedArea, target);\n  const isVisible = isSourceRendered && isTargetRendered;\n  React.useLayoutEffect(() => {\n    if (isVisible) {\n      virtualization.renderedEdges.add(edge.id);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [virtualization]);\n\n  if (!isVisible) {\n    return null;\n  }\n\n  const edgeConfig = graphConfig.getEdgeConfig(edge);\n\n  if (!edgeConfig) {\n    Debug.warn(`invalid edge ${JSON.stringify(edge)}`);\n    return null;\n  }\n\n  if (!edgeConfig.render) {\n    Debug.warn(`Missing \"render\" method in edge config ${JSON.stringify(edge)}`);\n    return null;\n  }\n\n  const isSourceVisible = isPointInRect(visibleArea, source);\n  const isTargetVisible = isPointInRect(visibleArea, target);\n  let edgeNode = edgeConfig.render({\n    model: edge,\n    data: graphModel,\n    x1: source.x,\n    y1: source.y,\n    x2: target.x,\n    y2: target.y,\n    viewport\n  });\n\n  if (has(GraphEdgeStatus.ConnectedToSelected)(edge.status) && (!isSourceVisible || !isTargetVisible)) {\n    const linearFunction = getLinearFunction(source.x, source.y, target.x, target.y);\n    const inverseLinearFunction = getLinearFunction(source.y, source.x, target.y, target.x);\n    const hintSource = isSourceVisible ? source : target;\n    const hintTarget = isSourceVisible ? target : source;\n    const yOnRightAxis = linearFunction(visibleArea.maxX);\n    const xOnBottomAxis = inverseLinearFunction(visibleArea.maxY);\n    const xOnTopAxis = inverseLinearFunction(visibleArea.minY);\n    const yOnLeftAxis = linearFunction(visibleArea.minX);\n    const hintPoint = getHintPoints(hintSource, hintTarget, visibleArea, yOnRightAxis, xOnBottomAxis, xOnTopAxis, yOnLeftAxis);\n\n    if (isSourceVisible && edgeConfig.renderWithTargetHint) {\n      edgeNode = edgeConfig.renderWithTargetHint({\n        model: edge,\n        data: graphModel,\n        x1: source.x,\n        y1: source.y,\n        x2: hintPoint.x,\n        y2: hintPoint.y,\n        viewport\n      });\n    } else if (isTargetVisible && edgeConfig.renderWithSourceHint) {\n      edgeNode = edgeConfig.renderWithSourceHint({\n        model: edge,\n        data: graphModel,\n        x1: hintPoint.x,\n        y1: hintPoint.y,\n        x2: target.x,\n        y2: target.y,\n        viewport\n      });\n    }\n  }\n\n  const id = getEdgeUid(graphId, edge);\n  const className = `edge-container-${edge.id}`;\n  const automationId = (_a = edge.automationId) !== null && _a !== void 0 ? _a : className;\n  return jsx(\"g\", Object.assign({\n    id: id,\n    onClick: edgeEvent(GraphEdgeEvent.Click),\n    onDoubleClick: edgeEvent(GraphEdgeEvent.DoubleClick),\n    onMouseDown: edgeEvent(GraphEdgeEvent.MouseDown),\n    onMouseUp: edgeEvent(GraphEdgeEvent.MouseUp),\n    onMouseEnter: edgeEvent(GraphEdgeEvent.MouseEnter),\n    onMouseLeave: edgeEvent(GraphEdgeEvent.MouseLeave),\n    onContextMenu: edgeEvent(GraphEdgeEvent.ContextMenu),\n    onMouseMove: edgeEvent(GraphEdgeEvent.MouseMove),\n    onMouseOver: edgeEvent(GraphEdgeEvent.MouseOver),\n    onMouseOut: edgeEvent(GraphEdgeEvent.MouseOut),\n    onFocus: undefined,\n    onBlur: undefined,\n    className: className,\n    \"data-automation-id\": automationId\n  }, {\n    children: edgeNode\n  }));\n});\n\nfunction compareEqual(prev, props) {\n  return prev.node === props.node;\n}\n\nconst EdgeChampNodeRender = /*#__PURE__*/React.memo(props => {\n  var _a, _b;\n\n  const {\n    node,\n    data\n  } = props,\n        others = __rest(props, [\"node\", \"data\"]);\n\n  const graphConfig = useGraphConfig();\n  const values = [];\n  const valueCount = node.valueCount;\n\n  for (let i = 0; i < valueCount; i += 1) {\n    const it = node.getValue(i);\n    const source = (_a = data.nodes.get(it.source)) === null || _a === void 0 ? void 0 : _a.getPortPosition(it.sourcePortId, graphConfig);\n    const target = (_b = data.nodes.get(it.target)) === null || _b === void 0 ? void 0 : _b.getPortPosition(it.targetPortId, graphConfig);\n\n    if (source && target) {\n      values.push( /*#__PURE__*/createElement(GraphEdge, Object.assign({}, others, {\n        key: it.id,\n        data: data,\n        edge: it,\n        source: source,\n        target: target\n      })));\n    }\n  }\n\n  const children = [];\n  const nodeCount = node.nodeCount;\n\n  for (let i = 0; i < nodeCount; i += 1) {\n    const it = node.getNode(i);\n\n    if (it.type === NodeType$1.Bitmap) {\n      children.push(jsx(EdgeChampNodeRender, Object.assign({}, props, {\n        node: it\n      }), node.getHash(i)));\n    } else {\n      children.push(jsx(EdgeHashCollisionNodeRender, Object.assign({}, props, {\n        node: it\n      }), it.getHash()));\n    }\n  }\n\n  return jsxs(Fragment, {\n    children: [values, children]\n  });\n}, compareEqual);\nEdgeChampNodeRender.displayName = \"EdgeChampNodeRender\";\nconst EdgeHashCollisionNodeRender = /*#__PURE__*/React.memo(props => {\n  const {\n    data,\n    node\n  } = props,\n        others = __rest(props, [\"data\", \"node\"]);\n\n  const graphConfig = useGraphConfig();\n  return jsx(Fragment, {\n    children: node.values.map(edge => {\n      var _a, _b;\n\n      const source = (_a = data.nodes.get(edge.source)) === null || _a === void 0 ? void 0 : _a.getPortPosition(edge.sourcePortId, graphConfig);\n      const target = (_b = data.nodes.get(edge.target)) === null || _b === void 0 ? void 0 : _b.getPortPosition(edge.targetPortId, graphConfig);\n\n      if (source && target) {\n        return /*#__PURE__*/createElement(GraphEdge, Object.assign({}, others, {\n          key: edge.id,\n          data: data,\n          edge: edge,\n          source: source,\n          target: target\n        }));\n      } else {\n        return null;\n      }\n    })\n  });\n}, compareEqual);\nEdgeHashCollisionNodeRender.displayName = \"EdgeHashCollisionNodeRender\";\nconst EdgeTree = props => {\n  const {\n    tree\n  } = props,\n        others = __rest(props, [\"tree\"]);\n\n  return jsx(EdgeChampNodeRender, Object.assign({}, others, {\n    node: tree.root\n  }));\n};\n\n// use static css file here\nconst styles = mergeStyleSets({\n  svg: [{\n    position: \"absolute\",\n    overflow: \"hidden\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\"\n  }, {\n    \"&:focus\": {\n      outline: \"none\"\n    }\n  }],\n  node: {\n    cursor: \"move\"\n  },\n  container: {\n    position: \"relative\",\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    touchAction: \"none\"\n  },\n  buttonA11Y: {\n    opacity: 0,\n    width: 0,\n    height: 0,\n    overflow: \"hidden\"\n  },\n  addingNodeSvg: {\n    zIndex: 1000000,\n    position: \"fixed\",\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"100%\"\n  },\n  moduleItem: {\n    userSelect: \"none\",\n    cursor: \"pointer\"\n  },\n  minimap: {\n    height: 320,\n    width: 320,\n    userSelect: \"none\",\n    touchAction: \"none\"\n  },\n  minimapSvg: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\"\n  }\n});\n\nconst GraphNode = props => {\n  var _a;\n\n  const {\n    node,\n    eventChannel,\n    getNodeAriaLabel,\n    viewport,\n    graphId\n  } = props;\n  const graphConfig = useGraphConfig();\n  const nodeConfig = getNodeConfig(node, graphConfig);\n\n  const nodeEvent = type => evt => {\n    evt.persist();\n    const e = {\n      type,\n      node,\n      rawEvent: evt\n    };\n    eventChannel.trigger(e);\n  };\n\n  const onClick = e => {\n    e.persist();\n    const isMultiSelect = checkIsMultiSelect(e);\n    eventChannel.trigger({\n      type: GraphNodeEvent.Click,\n      rawEvent: e,\n      isMultiSelect,\n      node\n    });\n  };\n\n  const id = getNodeUid(graphId, node);\n  const automationId = (_a = node.automationId) !== null && _a !== void 0 ? _a : getNodeAutomationId(node);\n\n  if (!(nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.render)) {\n    Debug.warn(`Missing \"render\" method in node config`);\n    return null;\n  }\n\n  return jsx(\"g\", Object.assign({\n    id: id,\n    // for IE and Edge\n    focusable: \"true\",\n    tabIndex: 0,\n    className: styles.node,\n    onPointerDown: nodeEvent(GraphNodeEvent.PointerDown),\n    onPointerEnter: nodeEvent(GraphNodeEvent.PointerEnter),\n    onPointerMove: nodeEvent(GraphNodeEvent.PointerMove),\n    onPointerLeave: nodeEvent(GraphNodeEvent.PointerLeave),\n    onPointerUp: nodeEvent(GraphNodeEvent.PointerUp),\n    onDoubleClick: nodeEvent(GraphNodeEvent.DoubleClick),\n    onMouseDown: nodeEvent(GraphNodeEvent.MouseDown),\n    onMouseUp: nodeEvent(GraphNodeEvent.MouseUp),\n    onMouseEnter: nodeEvent(GraphNodeEvent.MouseEnter),\n    onMouseLeave: nodeEvent(GraphNodeEvent.MouseLeave),\n    onContextMenu: nodeEvent(GraphNodeEvent.ContextMenu),\n    onMouseMove: nodeEvent(GraphNodeEvent.MouseMove),\n    onMouseOver: nodeEvent(GraphNodeEvent.MouseOver),\n    onMouseOut: nodeEvent(GraphNodeEvent.MouseOut),\n    onClick: onClick,\n    onKeyDown: nodeEvent(GraphNodeEvent.KeyDown),\n    \"aria-label\": getNodeAriaLabel(node),\n    role: \"group\",\n    \"aria-roledescription\": \"node\",\n    \"data-automation-id\": automationId\n  }, {\n    children: jsx(\"g\", Object.assign({\n      className: \"node-box-container\"\n    }, {\n      children: nodeConfig.render({\n        model: node,\n        viewport\n      })\n    }))\n  }));\n};\n\nconst RESIZE_POINT_WIDTH = 8;\nconst RESIZE_POINT_HEIGHT = 8;\nconst NodeAnchor = ({\n  x,\n  y,\n  cursor,\n  onMouseDown\n}) => {\n  return jsx(Slots.NodeResizeHandler, Object.assign({\n    x: x,\n    y: y,\n    cursor: cursor,\n    onMouseDown: onMouseDown\n  }, {\n    children: jsx(\"rect\", {\n      x: x,\n      y: y,\n      height: RESIZE_POINT_HEIGHT,\n      width: RESIZE_POINT_WIDTH,\n      stroke: defaultColors.controlPointColor,\n      fill: \"transparent\",\n      cursor: cursor,\n      onMouseDown: onMouseDown\n    })\n  }));\n};\n\nconst BBOX_PADDING = 15;\nconst GraphNodeAnchors = props => {\n  var _a, _b;\n\n  const {\n    node,\n    getMouseDown\n  } = props;\n  const graphConfig = useGraphConfig();\n  const nodeConfig = getNodeConfig(node, graphConfig);\n  const minWidth = (_a = nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.getMinWidth(node)) !== null && _a !== void 0 ? _a : 0;\n  const minHeight = (_b = nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.getMinHeight(node)) !== null && _b !== void 0 ? _b : 0;\n  const height = getRectHeight(nodeConfig, node);\n  const width = getRectWidth(nodeConfig, node);\n  const nw = getMouseDown((dx, dy) => {\n    const finalDx = Math.min(dx, width - minWidth);\n    const finalDy = Math.min(dy, height - minHeight);\n    return {\n      dx: +finalDx,\n      dy: +finalDy,\n      dWidth: -finalDx,\n      dHeight: -finalDy\n    };\n  });\n  const n = getMouseDown((_dx, dy) => {\n    const finalDy = Math.min(dy, height - minHeight);\n    return {\n      dy: +finalDy,\n      dHeight: -finalDy\n    };\n  });\n  const ne = getMouseDown((dx, dy) => {\n    const finalDx = Math.max(dx, minWidth - width);\n    const finalDy = Math.min(dy, height - minHeight);\n    return {\n      dy: +finalDy,\n      dWidth: +finalDx,\n      dHeight: -finalDy\n    };\n  });\n  const e = getMouseDown(dx => {\n    const finalDx = Math.max(dx, minWidth - width);\n    return {\n      dWidth: +finalDx\n    };\n  });\n  const se = getMouseDown((dx, dy) => {\n    const finalDx = Math.max(dx, minWidth - width);\n    const finalDy = Math.max(dy, minHeight - height);\n    return {\n      dWidth: +finalDx,\n      dHeight: +finalDy\n    };\n  });\n  const s = getMouseDown((_dx, dy) => {\n    const finalDy = Math.max(dy, minHeight - height);\n    return {\n      dHeight: +finalDy\n    };\n  });\n  const sw = getMouseDown((dx, dy) => {\n    const finalDx = Math.min(dx, width - minWidth);\n    const finalDy = Math.max(dy, minHeight - height);\n    return {\n      dx: +finalDx,\n      dWidth: -finalDx,\n      dHeight: +finalDy\n    };\n  });\n  const w = getMouseDown(dx => {\n    const finalDx = Math.min(dx, width - minWidth);\n    return {\n      dx: finalDx,\n      dWidth: -finalDx\n    };\n  });\n  return jsxs(Fragment, {\n    children: [jsx(NodeAnchor, {\n      cursor: \"nw-resize\",\n      x: node.x - BBOX_PADDING,\n      y: node.y - BBOX_PADDING - RESIZE_POINT_HEIGHT,\n      onMouseDown: nw\n    }, \"nw-resize\"), jsx(NodeAnchor, {\n      x: node.x + width / 2 - RESIZE_POINT_WIDTH / 2,\n      y: node.y - BBOX_PADDING - RESIZE_POINT_HEIGHT,\n      cursor: \"n-resize\",\n      onMouseDown: n\n    }, \"n-resize\"), jsx(NodeAnchor, {\n      x: node.x + width + BBOX_PADDING - RESIZE_POINT_WIDTH,\n      y: node.y - BBOX_PADDING - RESIZE_POINT_HEIGHT,\n      cursor: \"ne-resize\",\n      onMouseDown: ne\n    }, \"ne-resize\"), jsx(NodeAnchor, {\n      x: node.x + width + BBOX_PADDING - RESIZE_POINT_WIDTH,\n      y: node.y + height / 2 - RESIZE_POINT_HEIGHT / 2,\n      cursor: \"e-resize\",\n      onMouseDown: e\n    }, \"e-resize\"), jsx(NodeAnchor, {\n      x: node.x + width + BBOX_PADDING - RESIZE_POINT_WIDTH,\n      y: node.y + height + BBOX_PADDING,\n      cursor: \"se-resize\",\n      onMouseDown: se\n    }, \"se-resize\"), jsx(NodeAnchor, {\n      x: node.x + width / 2 - RESIZE_POINT_WIDTH / 2,\n      y: node.y + height + BBOX_PADDING,\n      cursor: \"s-resize\",\n      onMouseDown: s\n    }, \"s-resize\"), jsx(NodeAnchor, {\n      x: node.x - BBOX_PADDING,\n      y: node.y + height + BBOX_PADDING,\n      cursor: \"sw-resize\",\n      onMouseDown: sw\n    }, \"sw-resize\"), jsx(NodeAnchor, {\n      x: node.x - BBOX_PADDING,\n      y: node.y + height / 2 - RESIZE_POINT_HEIGHT / 2,\n      cursor: \"w-resize\",\n      onMouseDown: w\n    }, \"w-resize\")]\n  });\n};\n\nconst GraphOneNodePorts = props => {\n  const {\n    data,\n    node,\n    getPortAriaLabel,\n    eventChannel,\n    viewport,\n    graphId\n  } = props;\n  const graphConfig = useGraphConfig();\n  const ports = node.ports;\n\n  if (!ports) {\n    return null;\n  }\n\n  const portEvent = (type, port) => e => {\n    e.persist();\n    eventChannel.trigger({\n      type,\n      node,\n      port,\n      rawEvent: e\n    });\n  };\n\n  return jsx(\"g\", {\n    children: ports.map(p => {\n      var _a;\n\n      const portConfig = graphConfig.getPortConfig(p);\n\n      if (!portConfig || !portConfig.render) {\n        Debug.warn(`invalid port config ${node.id}:${node.name} - ${p.id}:${p.name}`);\n        return null;\n      }\n\n      const pos = node.getPortPosition(p.id, graphConfig);\n\n      if (!pos) {\n        return null;\n      }\n\n      const portKey = getPortUid(graphId, node, p);\n      const automationId = (_a = p.automationId) !== null && _a !== void 0 ? _a : getPortAutomationId(p, node);\n      return jsx(\"g\", Object.assign({\n        id: portKey,\n        tabIndex: 0,\n        // for IE and Edge\n        focusable: \"true\",\n        onPointerDown: portEvent(GraphPortEvent.PointerDown, p),\n        onPointerUp: portEvent(GraphPortEvent.PointerUp, p),\n        onDoubleClick: portEvent(GraphPortEvent.DoubleClick, p),\n        onMouseDown: portEvent(GraphPortEvent.MouseDown, p),\n        onMouseUp: portEvent(GraphPortEvent.MouseUp, p),\n        onContextMenu: portEvent(GraphPortEvent.ContextMenu, p),\n        onPointerEnter: portEvent(GraphPortEvent.PointerEnter, p),\n        onPointerLeave: portEvent(GraphPortEvent.PointerLeave, p),\n        onMouseMove: portEvent(GraphPortEvent.MouseMove, p),\n        onMouseOver: portEvent(GraphPortEvent.MouseOver, p),\n        onMouseOut: portEvent(GraphPortEvent.MouseOut, p),\n        onFocus: portEvent(GraphPortEvent.Focus, p),\n        onBlur: portEvent(GraphPortEvent.Blur, p),\n        onKeyDown: portEvent(GraphPortEvent.KeyDown, p),\n        onClick: portEvent(GraphPortEvent.Click, p),\n        \"aria-label\": getPortAriaLabel(data, node, p),\n        role: \"group\",\n        \"aria-roledescription\": \"port\",\n        \"data-automation-id\": automationId\n      }, {\n        children: jsx(ConnectingStateContext.Consumer, {\n          children: ({\n            sourceNode,\n            sourcePort\n          }) => portConfig === null || portConfig === void 0 ? void 0 : portConfig.render(Object.assign({\n            model: p,\n            data,\n            parentNode: node,\n            anotherNode: sourceNode,\n            anotherPort: sourcePort,\n            viewport\n          }, pos))\n        })\n      }), portKey);\n    })\n  });\n};\n\nconst GraphNodeParts = _a => {\n  var {\n    node,\n    isNodeResizable,\n    renderNodeAnchors\n  } = _a,\n      commonProps = __rest(_a, [\"node\", \"isNodeResizable\", \"renderNodeAnchors\"]);\n\n  const virtualization = useVirtualization();\n  const {\n    renderedArea,\n    viewport\n  } = virtualization;\n  const getMouseDown = useGetMouseDownOnAnchor(node, commonProps.eventChannel);\n  const isVisible = isPointInRect(renderedArea, node);\n  React.useLayoutEffect(() => {\n    if (isVisible) {\n      virtualization.renderedEdges.add(node.id);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [virtualization]);\n\n  if (!isVisible) {\n    return null;\n  }\n\n  let nodeAnchors;\n\n  if (isNodeResizable && isNodeEditing(node)) {\n    const defaultAnchors = jsx(GraphNodeAnchors, {\n      node: node,\n      getMouseDown: getMouseDown\n    });\n\n    nodeAnchors = renderNodeAnchors ? renderNodeAnchors(node, getMouseDown, defaultAnchors) : defaultAnchors;\n  }\n\n  return jsxs(Fragment, {\n    children: [jsx(GraphNode, Object.assign({}, commonProps, {\n      node: node,\n      viewport: viewport\n    })), jsx(GraphOneNodePorts, Object.assign({}, commonProps, {\n      node: node,\n      viewport: viewport\n    })), nodeAnchors]\n  });\n};\n\nconst GraphNodePartsMemo = /*#__PURE__*/React.memo(GraphNodeParts);\n\nconst NodeTreeNode = /*#__PURE__*/React.memo(_a => {\n  var {\n    node\n  } = _a,\n      others = __rest(_a, [\"node\"]);\n\n  const values = node.values.map(arg => {\n    const it = arg[1];\n    return jsx(GraphNodePartsMemo, Object.assign({\n      node: it\n    }, others), it.id);\n  });\n  const children = node.type === NodeType.Internal ? node.children.map((child, index) => {\n    const key = index < node.selfSize ? node.getKey(index) : \"last\";\n    return jsx(NodeTreeNode, Object.assign({\n      node: child\n    }, others), key);\n  }) : undefined;\n  return jsxs(Fragment, {\n    children: [values, children]\n  });\n}, (prevProps, nextProps) => prevProps.node === nextProps.node);\nNodeTreeNode.displayName = \"NodeTreeNode\";\nconst NodeTree = _a => {\n  var {\n    tree\n  } = _a,\n      others = __rest(_a, [\"tree\"]);\n\n  return jsx(NodeTreeNode, Object.assign({\n    node: tree.sortedRoot\n  }, others));\n};\n\nconst NodeLayers = ({\n  data,\n  renderTree\n}) => {\n  const layers = new Set();\n  data.nodes.forEach(n => layers.add(n.layer));\n  return jsx(Fragment, {\n    children: Array.from(layers.values()).sort().map(l => renderTree(data.nodes.filter(n => n.layer === l), l))\n  });\n};\n\nconst VirtualizationProvider = ({\n  viewport,\n  isVirtualizationEnabled,\n  virtualizationDelay,\n  eventChannel,\n  children\n}) => {\n  const renderedArea = useRenderedArea(viewport, isVirtualizationEnabled);\n  const visibleArea = React.useMemo(() => getVisibleArea(viewport), [viewport]);\n  const contextValue = React.useMemo(() => ({\n    viewport,\n    renderedArea,\n    visibleArea,\n    renderedEdges: new Set(),\n    renderedNodes: new Set(),\n    timestamp: performance.now()\n  }), [viewport, renderedArea, visibleArea]);\n  const context = useDeferredValue(contextValue, {\n    timeout: virtualizationDelay\n  });\n  const previousContextRef = React.useRef(context);\n  React.useEffect(() => {\n    const previousContext = previousContextRef.current;\n    previousContextRef.current = context;\n    eventChannel.trigger({\n      type: GraphCanvasEvent.VirtualizationRecalculated,\n      performanceStartTime: context.timestamp,\n      renderedNodes: previousContext.renderedNodes,\n      renderedEdges: previousContext.renderedEdges,\n      previousRenderedNodes: previousContext.renderedNodes,\n      previousRenderedEdges: previousContext.renderedEdges\n    });\n  }, [context, eventChannel]);\n  return jsx(VirtualizationContext.Provider, Object.assign({\n    value: context\n  }, {\n    children: children\n  }));\n};\n\nconst getCursorStyle = ({\n  canvasMouseMode,\n  state,\n  isPanDisabled,\n  isMultiSelecting\n}) => {\n  if (state.behavior === GraphBehavior.Connecting) {\n    return \"initial\";\n  }\n\n  const isClickMultipleSelect = [\"meta\", \"control\"].some(key => state.activeKeys.has(key));\n\n  if (isClickMultipleSelect) {\n    return \"initial\";\n  }\n\n  const isAreaSelection = state.activeKeys.has(\"shift\");\n\n  if (isAreaSelection) {\n    return \"crosshair\";\n  } // selection mode\n\n\n  if (canvasMouseMode !== CanvasMouseMode.Pan) {\n    if (state.activeKeys.has(\" \") && !isPanDisabled) {\n      return \"grab\";\n    }\n\n    if (isMultiSelecting) {\n      return \"crosshair\";\n    }\n\n    return \"inherit\";\n  }\n\n  return isPanDisabled ? \"inherit\" : \"grab\";\n};\n/**\r\n * @param state\r\n * @param isNodeDraggable\r\n */\n\n\nfunction getNodeCursor(isNodeDraggable) {\n  return isNodeDraggable ? \"move\" : \"initial\";\n}\n\nconst getGraphStyles = (props, state, isPanDisabled, isNodeDraggable, focusedWithoutMouse, isMultiSelecting) => {\n  var _a, _b;\n\n  return mergeStyleSets({\n    svg: [\"react-dag-editor-svg-container\", styles.svg, (_a = props.styles) === null || _a === void 0 ? void 0 : _a.svg, {\n      \"& *:focus\": {\n        outline: defaultColors.outlineStyle\n      },\n      [`& .${styles.node}`]: {\n        cursor: getNodeCursor(isNodeDraggable)\n      }\n    }],\n    container: [\"react-dag-editor-container\", styles.container, {\n      cursor: getCursorStyle({\n        canvasMouseMode: props.canvasMouseMode,\n        state,\n        isPanDisabled,\n        isMultiSelecting\n      }),\n      [`&.${styles.container}`]: Object.assign(Object.assign({\n        background: defaultColors.canvasBackground\n      }, props.style), (_b = props.styles) === null || _b === void 0 ? void 0 : _b.root)\n    }, focusedWithoutMouse && {\n      outline: `${defaultColors.focusOutlineColor} solid 1px`\n    }],\n    buttonA11y: [\"react-dag-editor-a11y-help-button\", styles.buttonA11Y],\n    node: [styles.node]\n  });\n};\n\nfunction Graph(props) {\n  var _a, _b, _c, _d, _e;\n\n  const [focusedWithoutMouse, setFocusedWithoutMouse] = React.useState(false);\n  const graphController = useGraphController();\n  const {\n    state,\n    dispatch\n  } = useGraphState();\n  const data = state.data.present;\n  const {\n    viewport\n  } = state;\n  const {\n    eventChannel\n  } = graphController;\n  const graphId = useConst(() => `graph-${v4()}`);\n  const defaultSVGRef = React.useRef(null);\n  const {\n    focusCanvasAccessKey = \"f\",\n    zoomSensitivity = 0.1,\n    scrollSensitivity = 0.5,\n    svgRef = defaultSVGRef,\n    virtualizationDelay = 500,\n    background = null\n  } = props;\n  const graphConfig = useGraphConfig();\n  const featureControl = useFeatureControl(state.settings.features);\n  const [curHoverNode, setCurHoverNode] = React.useState();\n  const [curHoverPort, setCurHoverPort] = React.useState(undefined);\n  const containerRef = React.useRef(null);\n  const rectRef = React.useRef(undefined);\n  const updateViewport = useUpdateViewportCallback(rectRef, svgRef, eventChannel);\n  useEventChannel({\n    props,\n    dispatch,\n    rectRef,\n    svgRef,\n    setFocusedWithoutMouse,\n    containerRef,\n    featureControl,\n    graphConfig,\n    setCurHoverNode,\n    setCurHoverPort,\n    updateViewport,\n    eventChannel,\n    graphController\n  });\n  useContainerRect(state, svgRef, containerRef, updateViewport);\n  const {\n    isNodesDraggable,\n    isNodeResizable,\n    isPanDisabled,\n    isMultiSelectDisabled,\n    isLassoSelectEnable,\n    isNodeEditDisabled,\n    isVerticalScrollDisabled,\n    isHorizontalScrollDisabled,\n    isA11yEnable,\n    isCtrlKeyZoomEnable,\n    isVirtualizationEnabled,\n    isScrollbarVisible\n  } = featureControl;\n  useSelectBox(dispatch, state.selectBoxPosition);\n\n  const canvasEventHandler = type => rawEvent => {\n    rawEvent.persist();\n    eventChannel.trigger({\n      type,\n      rawEvent\n    });\n  };\n\n  const classes = getGraphStyles(props, state, isPanDisabled, isNodesDraggable, focusedWithoutMouse, state.behavior === GraphBehavior.MultiSelect);\n  useWheelHandler({\n    containerRef,\n    svgRef,\n    rectRef,\n    zoomSensitivity,\n    scrollSensitivity,\n    dispatch,\n    isHorizontalScrollDisabled,\n    isVerticalScrollDisabled,\n    isCtrlKeyZoomEnable,\n    eventChannel,\n    graphConfig\n  });\n  const onContextMenuClick = React.useCallback(evt => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    eventChannel.trigger({\n      type: GraphContextMenuEvent.Close\n    });\n\n    if (svgRef.current) {\n      // to prevent: the keyboard events will be disabled after using the context menu (because the context menu is not the element of svg)\n      svgRef.current.focus({\n        preventScroll: true\n      });\n    }\n  }, [eventChannel, svgRef]);\n  const onFocusButtonClick = React.useCallback(() => {\n    setFocusedWithoutMouse(true);\n\n    if (svgRef.current) {\n      svgRef.current.focus({\n        preventScroll: true\n      });\n    }\n  }, [svgRef]);\n  useSafariScale({\n    rectRef,\n    svgRef,\n    eventChannel\n  });\n  const accessKey = isA11yEnable ? focusCanvasAccessKey : undefined;\n  const touchHandlers = useGraphTouchHandler(rectRef, eventChannel);\n  const renderNodeTree = React.useCallback((tree, layer) => {\n    var _a, _b;\n\n    return jsx(NodeTree, {\n      graphId: graphId,\n      isNodeResizable: isNodeResizable,\n      tree: tree,\n      data: data,\n      isNodeEditDisabled: isNodeEditDisabled,\n      eventChannel: eventChannel,\n      getNodeAriaLabel: (_a = props.getNodeAriaLabel) !== null && _a !== void 0 ? _a : defaultGetNodeAriaLabel,\n      getPortAriaLabel: (_b = props.getPortAriaLabel) !== null && _b !== void 0 ? _b : defaultGetPortAriaLabel,\n      renderNodeAnchors: props.renderNodeAnchors\n    }, layer);\n  }, [data, eventChannel, graphId, isNodeEditDisabled, isNodeResizable, props.getNodeAriaLabel, props.getPortAriaLabel, props.renderNodeAnchors]);\n\n  if (!isSupported()) {\n    const {\n      onBrowserNotSupported = () => jsx(\"p\", {\n        children: \"Your browser is not supported\"\n      })\n    } = props;\n    return jsx(Fragment, {\n      children: onBrowserNotSupported()\n    });\n  }\n\n  const renderPortTooltip = () => {\n    if (!curHoverPort || !isViewportComplete(state.viewport)) {\n      return null;\n    }\n\n    const [nodeId, portId] = curHoverPort;\n    const node = data.nodes.get(nodeId);\n\n    if (!node) {\n      return null;\n    }\n\n    const port = node.getPort(portId);\n\n    if (!port) {\n      return null;\n    }\n\n    return jsx(PortTooltips, {\n      port: port,\n      parentNode: node,\n      data: data,\n      viewport: state.viewport\n    });\n  };\n\n  const renderNodeTooltip = () => {\n    var _a;\n\n    if (!curHoverNode || !isViewportComplete(state.viewport)) {\n      return null;\n    } // do not show tooltip if current node has contextmenu\n\n\n    const curHoverNodeHasContextMenu = state.contextMenuPosition && curHoverNode === ((_a = state.data.present.nodes.find(isSelected)) === null || _a === void 0 ? void 0 : _a.id);\n\n    if (curHoverNodeHasContextMenu) {\n      return null;\n    }\n\n    return jsx(NodeTooltips, {\n      node: data.nodes.get(curHoverNode),\n      viewport: state.viewport\n    });\n  };\n\n  return jsxs(\"div\", Object.assign({\n    ref: containerRef,\n    role: \"application\",\n    id: graphId,\n    className: classes.container\n  }, touchHandlers, {\n    onDoubleClick: canvasEventHandler(GraphCanvasEvent.DoubleClick),\n    onMouseDown: canvasEventHandler(GraphCanvasEvent.MouseDown),\n    onMouseUp: canvasEventHandler(GraphCanvasEvent.MouseUp),\n    onContextMenu: canvasEventHandler(GraphCanvasEvent.ContextMenu),\n    onMouseMove: canvasEventHandler(GraphCanvasEvent.MouseMove),\n    onMouseOver: canvasEventHandler(GraphCanvasEvent.MouseOver),\n    onMouseOut: canvasEventHandler(GraphCanvasEvent.MouseOut),\n    onFocus: canvasEventHandler(GraphCanvasEvent.Focus),\n    onBlur: canvasEventHandler(GraphCanvasEvent.Blur),\n    onKeyDown: canvasEventHandler(GraphCanvasEvent.KeyDown),\n    onKeyUp: canvasEventHandler(GraphCanvasEvent.KeyUp)\n  }, {\n    children: [jsx(\"button\", {\n      className: classes.buttonA11y,\n      onClick: onFocusButtonClick,\n      accessKey: accessKey,\n      hidden: true\n    }), jsxs(\"svg\", Object.assign({\n      tabIndex: 0,\n      // for IE and Edge\n      focusable: \"true\",\n      preserveAspectRatio: \"xMidYMid meet\",\n      ref: svgRef,\n      className: classes.svg,\n      \"data-graph-id\": graphId\n    }, {\n      children: [jsx(\"title\", {\n        children: props.title\n      }), jsx(\"desc\", {\n        children: props.desc\n      }), jsxs(Transform, Object.assign({\n        matrix: viewport.transformMatrix\n      }, {\n        children: [state.viewport.rect && jsxs(VirtualizationProvider, Object.assign({\n          viewport: state.viewport,\n          isVirtualizationEnabled: isVirtualizationEnabled,\n          virtualizationDelay: virtualizationDelay,\n          eventChannel: eventChannel\n        }, {\n          children: [background, jsx(GraphGroupsRenderer, {\n            data: data,\n            groups: (_a = data.groups) !== null && _a !== void 0 ? _a : constantEmptyArray()\n          }), jsx(EdgeTree, {\n            graphId: graphId,\n            tree: data.edges,\n            data: data,\n            eventChannel: eventChannel\n          }), jsx(NodeLayers, {\n            data: data,\n            renderTree: renderNodeTree\n          })]\n        })), state.dummyNodes.isVisible && jsx(AnimatingNodeGroup, {\n          dummyNodes: state.dummyNodes,\n          graphData: state.data.present\n        }), jsx(AlignmentLines, {\n          style: (_b = props.styles) === null || _b === void 0 ? void 0 : _b.alignmentLine\n        })]\n      })), (!isMultiSelectDisabled || isLassoSelectEnable) && jsx(SelectBox, {\n        selectBoxPosition: state.selectBoxPosition,\n        style: (_c = props.styles) === null || _c === void 0 ? void 0 : _c.selectBox\n      }), state.connectState && jsx(Connecting, {\n        graphConfig: graphConfig,\n        eventChannel: eventChannel,\n        viewport: state.viewport,\n        styles: (_d = props.styles) === null || _d === void 0 ? void 0 : _d.connectingLine,\n        movingPoint: state.connectState.movingPoint\n      })]\n    })), isScrollbarVisible && isViewportComplete(state.viewport) && jsx(Scrollbar, {\n      viewport: state.viewport,\n      offsetLimit: getOffsetLimit({\n        data,\n        graphConfig,\n        rect: state.viewport.rect,\n        transformMatrix: viewport.transformMatrix,\n        canvasBoundaryPadding: state.settings.canvasBoundaryPadding,\n        groupPadding: (_e = data.groups[0]) === null || _e === void 0 ? void 0 : _e.padding\n      }),\n      dispatch: dispatch,\n      horizontal: !isHorizontalScrollDisabled,\n      vertical: !isVerticalScrollDisabled,\n      eventChannel: eventChannel\n    }), jsx(GraphContextMenu, {\n      state: state,\n      onClick: onContextMenuClick,\n      \"data-automation-id\": \"context-menu-container\"\n    }), renderNodeTooltip(), renderPortTooltip()]\n  }));\n}\n\nconst emptyNodeConfig = {\n  render() {\n    return null;\n  },\n\n  getMinHeight() {\n    return 0;\n  },\n\n  getMinWidth() {\n    return 0;\n  }\n\n};\n\nfunction useSvgRect(svgRef) {\n  const [rect, setRect] = useState(undefined);\n  useLayoutEffect(() => {\n    if (!svgRef.current) {\n      return;\n    }\n\n    setRect(svgRef.current.getBoundingClientRect());\n  }, [svgRef]);\n  return rect;\n}\n\nconst AddingNodeSvg = ({\n  model,\n  svgRef,\n  nextNodeRef\n}) => {\n  const rect = useSvgRect(svgRef);\n  const graphConfig = useGraphConfig();\n  const graphController = useGraphController();\n  const alignmentLines = useAlignmentLines();\n  const viewport = useViewport();\n  const dummyNode = React.useMemo(() => {\n    if (!model || !viewport.rect) {\n      return null;\n    }\n\n    const {\n      transformMatrix\n    } = viewport;\n    const {\n      left,\n      top\n    } = viewport.rect;\n    const diffLeft = left / transformMatrix[0];\n    const diffTop = top / transformMatrix[3];\n    return Object.assign({\n      id: model.id,\n      x: model.x - diffLeft,\n      y: model.y - diffTop\n    }, getNodeSize(model, graphConfig));\n  }, [graphConfig, viewport, model]);\n  React.useLayoutEffect(() => {\n    if (!dummyNode) {\n      return;\n    }\n\n    graphController.eventChannel.trigger({\n      type: GraphCanvasEvent.DraggingNodeFromItemPanel,\n      node: dummyNode\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dummyNode === null || dummyNode === void 0 ? void 0 : dummyNode.x, dummyNode === null || dummyNode === void 0 ? void 0 : dummyNode.y]);\n  const attachedNode = React.useMemo(() => {\n    if (!dummyNode || !model) {\n      return null;\n    }\n\n    const dxAligned = getAutoAlignDisplacement(alignmentLines, [dummyNode], graphConfig, \"x\");\n    const dyAligned = getAutoAlignDisplacement(alignmentLines, [dummyNode], graphConfig, \"y\");\n    return Object.assign(Object.assign({}, model), {\n      x: model.x + dxAligned,\n      y: model.y + dyAligned\n    });\n  }, [alignmentLines, dummyNode, graphConfig, model]);\n  React.useEffect(() => {\n    nextNodeRef.current = attachedNode;\n  }, [nextNodeRef, attachedNode]);\n  const eventChannel = useConst(() => new EventChannel());\n  const tempGraphId = useConst(v4);\n  const node = React.useMemo(() => NodeModel.fromJSON(attachedNode !== null && attachedNode !== void 0 ? attachedNode : model, undefined, undefined), [attachedNode, model]);\n  return jsx(\"svg\", Object.assign({\n    id: tempGraphId,\n    ref: svgRef,\n    className: styles.addingNodeSvg,\n    preserveAspectRatio: \"xMidYMid meet\"\n  }, {\n    children: jsx(Transform, Object.assign({\n      matrix: viewport.transformMatrix\n    }, {\n      children: rect && jsx(GraphNode, {\n        graphId: tempGraphId,\n        node: node,\n        viewport: {\n          rect,\n          transformMatrix: viewport.transformMatrix\n        },\n        eventChannel: eventChannel,\n        getNodeAriaLabel: defaultGetNodeAriaLabel\n      })\n    }))\n  }));\n};\n\nconst el = document.createElement(\"div\");\ndocument.body.appendChild(el);\n/**\r\n * @param rect the container clement bounding box rect\r\n * @param clientX point: x\r\n * @param clientY point: y\r\n *\r\n * @returns boolean value to indicate whether the point is in bound or not.\r\n */\n\nfunction isWithInBound(rect, clientX, clientY) {\n  const {\n    top,\n    right,\n    bottom,\n    left\n  } = rect;\n  return clientX >= left && clientX <= right && clientY >= top && clientY <= bottom;\n}\n\nconst adjustedClientPoint = (x, y, rect, transformMatrix) => {\n  let adjustedX = x;\n  let adjustedY = y;\n\n  if (rect) {\n    const {\n      left,\n      top\n    } = rect;\n    adjustedX = x - left;\n    adjustedY = y - top;\n  }\n\n  return reverseTransformPoint(adjustedX, adjustedY, transformMatrix);\n}; // adjust position to the middle of the node, and with the correct zoom/pan\n\n\nconst adjustPosition = (clientX, clientY, rect, transformMatrix, node, nodeConfig) => {\n  const rectWidth = getRectWidth(nodeConfig, node);\n  const rectHeight = getRectHeight(nodeConfig, node); // get transformed width and height\n\n  const realWidth = transformMatrix[0] * rectWidth + transformMatrix[2] * rectHeight;\n  const realHeight = transformMatrix[1] * rectWidth + transformMatrix[3] * rectHeight;\n  return adjustedClientPoint(clientX - realWidth / 2, clientY - realHeight / 2, rect, transformMatrix);\n};\n/**\r\n * The Item in the item panel from which we can add node to the canvas.\r\n *\r\n * @param props type IItemProps\r\n * @returns\r\n */\n\n\nconst Item = props => {\n  const graphConfig = useGraphConfig();\n  const graphController = useGraphController();\n  const [workingModel, setWorkingModel] = React.useState(null);\n  const nextNodeRef = useRefValue(workingModel);\n  const svgRef = React.useRef(null);\n  const {\n    style,\n    children,\n    getNode,\n    dragWillStart = noop\n  } = props;\n  const onPointerDown = React.useCallback(evt => {\n    var _a;\n\n    evt.stopPropagation();\n\n    if (isMouseButNotLeft(evt) || !graphController.getEnabledFeatures().has(GraphFeatures.AddNewNodes)) {\n      return;\n    }\n\n    const partial = getNode();\n    const nodeConfig = (_a = graphConfig.getNodeConfig(partial)) !== null && _a !== void 0 ? _a : emptyNodeConfig;\n    const position = adjustPosition(evt.clientX, evt.clientY, undefined, graphController.state.viewport.transformMatrix, partial, nodeConfig);\n    const node = Object.assign(Object.assign(Object.assign({}, partial), position), {\n      id: partial.id || v4()\n    });\n    const drag = new DragController(new PointerEventProvider(graphController.getGlobalEventTarget()), defaultGetPositionFromEvent);\n    const eventChannel = graphController.eventChannel;\n    eventChannel.trigger({\n      type: GraphCanvasEvent.DraggingNodeFromItemPanelStart,\n      rawEvent: evt\n    });\n\n    drag.onMove = ({\n      e\n    }) => {\n      setWorkingModel(n => {\n        if (!n) {\n          return n;\n        }\n\n        return Object.assign(Object.assign({}, n), adjustPosition(e.clientX, e.clientY, undefined, graphController.state.viewport.transformMatrix, n, nodeConfig));\n      });\n    };\n\n    drag.onEnd = ({\n      e\n    }) => {\n      const viewport = graphController.state.viewport;\n      let nextNode = nextNodeRef.current;\n\n      if (!isViewportComplete(viewport) || !nextNode || !isWithInBound(viewport.rect, e.clientX, e.clientY)) {\n        setWorkingModel(null);\n        eventChannel.trigger({\n          type: GraphCanvasEvent.DraggingNodeFromItemPanelEnd,\n          node: null\n        });\n        return;\n      }\n\n      nextNodeRef.current = null;\n      nextNode = Object.assign(Object.assign({}, nextNode), adjustPosition(e.clientX, e.clientY, viewport.rect, viewport.transformMatrix, nextNode, nodeConfig));\n      eventChannel.trigger({\n        type: GraphCanvasEvent.DraggingNodeFromItemPanelEnd,\n        node: nextNode\n      });\n      setWorkingModel(null);\n    };\n\n    dragWillStart(node);\n    setWorkingModel(node);\n    drag.start(evt.nativeEvent);\n  }, [graphController, getNode, graphConfig, dragWillStart, nextNodeRef]);\n  const className = mergeStyles(styles.moduleItem, props.className);\n  return jsxs(Fragment, {\n    children: [jsx(\"div\", Object.assign({\n      className: className,\n      style: style,\n      onPointerDown: onPointerDown,\n      role: \"button\"\n    }, {\n      children: children\n    })), workingModel && /*#__PURE__*/ReactDOM.createPortal(jsx(AddingNodeSvg, {\n      svgRef: svgRef,\n      model: workingModel,\n      nextNodeRef: nextNodeRef\n    }), el)]\n  });\n};\n\nclass TouchDragAdapter {\n  constructor() {\n    this.startListeners = new Set();\n    this.moveListeners = new Set();\n    this.endListeners = new Set();\n  }\n\n  off(type, callback) {\n    switch (type) {\n      case \"start\":\n        this.startListeners.delete(callback);\n        break;\n\n      case \"move\":\n        this.moveListeners.delete(callback);\n        break;\n\n      case \"end\":\n        this.endListeners.delete(callback);\n        break;\n    }\n\n    return this;\n  }\n\n  on(type, callback) {\n    switch (type) {\n      case \"start\":\n        this.startListeners.add(callback);\n        break;\n\n      case \"move\":\n        this.moveListeners.add(callback);\n        break;\n\n      case \"end\":\n        this.endListeners.add(callback);\n        break;\n    }\n\n    return this;\n  }\n\n  onStart(_events, e, ...args) {\n    this.startListeners.forEach(cb => {\n      cb.call(undefined, e, ...args);\n    });\n  }\n\n  onMove(_events, e, ...args) {\n    this.moveListeners.forEach(cb => {\n      cb.call(undefined, e, ...args);\n    });\n  }\n\n  onEnd(e, ...args) {\n    this.endListeners.forEach(cb => {\n      cb.call(undefined, e, ...args);\n    });\n  }\n\n}\n\nconst StaticNode = props => {\n  const {\n    node\n  } = props;\n  const graphConfig = useGraphConfig();\n  const nodeConfig = getNodeConfig(node, graphConfig);\n\n  if (nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.renderStatic) {\n    return jsx(\"g\", {\n      children: nodeConfig.renderStatic({\n        model: node\n      })\n    });\n  }\n\n  const rectHeight = getRectHeight(nodeConfig, node);\n  const rectWidth = getRectWidth(nodeConfig, node);\n  return jsx(\"rect\", {\n    transform: `translate(${node.x}, ${node.y})`,\n    height: rectHeight,\n    width: rectWidth,\n    fill: defaultColors.dummyNodeStroke\n  });\n};\n\nconst StaticNodeWithMemo = /*#__PURE__*/React.memo(StaticNode, (prevProps, nextProps) => {\n  const prevNode = prevProps.node;\n  const nextNode = nextProps.node;\n  return prevNode.x === nextNode.x && prevNode.y === nextNode.y && prevNode.height === nextNode.height && prevNode.width === nextNode.width && prevNode.isInSearchResults === nextNode.isInSearchResults && prevNode.isCurrentSearchResult === nextNode.isCurrentSearchResult;\n});\n\nconst ReadonlyNodeTreeNode = /*#__PURE__*/React.memo(({\n  node\n}) => {\n  const values = node.values.map(it => jsx(StaticNodeWithMemo, {\n    node: it[1]\n  }, it[1].id));\n  const children = node.type === NodeType.Internal ? node.children.map((child, index) => {\n    const key = index < node.selfSize ? node.getKey(index) : \"last\";\n    return jsx(ReadonlyNodeTreeNode, {\n      node: child\n    }, key);\n  }) : undefined;\n  return jsxs(Fragment, {\n    children: [values, children]\n  });\n});\nReadonlyNodeTreeNode.displayName = \"ReadonlyNodeTreeNode\";\nconst ReadonlyNodeTree = ({\n  tree\n}) => {\n  return jsx(ReadonlyNodeTreeNode, {\n    node: tree.sortedRoot\n  });\n};\n\nconst StaticGraph = props => {\n  const {\n    nodes\n  } = props.data;\n  const style = Object.assign({\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    height: \"100%\",\n    width: \"100%\"\n  }, props.style);\n  return jsx(\"svg\", Object.assign({\n    style: style\n  }, {\n    children: jsx(Transform, Object.assign({\n      matrix: props.transformMatrix\n    }, {\n      children: jsx(ReadonlyNodeTree, {\n        tree: nodes\n      })\n    }))\n  }));\n};\n\nconst MiniMapShadow = ({\n  containerRect: rect,\n  viewport,\n  shadowPadding: _shadowPadding = 0,\n  onClick\n}) => {\n  if (!rect) {\n    return null;\n  }\n\n  const shadowStyle = {\n    fill: defaultColors.minimapShadow,\n    opacity: 0.1\n  };\n  const lineStyle = {\n    stroke: defaultColors.inputFocusBorderAlt,\n    strokeWidth: 1\n  };\n  const viewportStartX = Math.max(viewport.startX, _shadowPadding);\n  const viewportStartY = Math.max(viewport.startY, _shadowPadding);\n  const viewportEndX = Math.min(viewport.endX, rect.width - _shadowPadding);\n  const viewportEndY = Math.min(viewport.endY, rect.height - _shadowPadding);\n  const sideShadowHeight = viewportEndY - viewportStartY;\n  const rightShadowWidth = rect.width - viewportEndX;\n  const bottomShadowHeight = rect.height - viewportEndY;\n  return jsxs(Fragment, {\n    children: [viewportStartY > 0 && jsxs(\"g\", {\n      children: [jsx(\"rect\", {\n        onClick: onClick,\n        onMouseDown: stopPropagation,\n        onPointerDown: stopPropagation,\n        x: 0,\n        y: 0,\n        height: viewportStartY,\n        width: rect.width,\n        style: shadowStyle\n      }), jsx(\"line\", {\n        x1: viewportStartX,\n        y1: viewportStartY,\n        x2: viewportEndX,\n        y2: viewportStartY,\n        style: lineStyle\n      })]\n    }), viewportStartX && sideShadowHeight > 0 && jsxs(\"g\", {\n      children: [jsx(\"rect\", {\n        onClick: onClick,\n        onMouseDown: stopPropagation,\n        onPointerDown: stopPropagation,\n        x: 0,\n        y: viewportStartY,\n        height: sideShadowHeight,\n        width: viewportStartX,\n        style: shadowStyle\n      }), jsx(\"line\", {\n        x1: viewportStartX,\n        y1: viewportStartY,\n        x2: viewportStartX,\n        y2: viewportEndY,\n        style: lineStyle\n      })]\n    }), rightShadowWidth && sideShadowHeight > 0 && jsxs(\"g\", {\n      children: [jsx(\"rect\", {\n        onClick: onClick,\n        onMouseDown: stopPropagation,\n        onPointerDown: stopPropagation,\n        x: viewportEndX,\n        y: viewportStartY,\n        height: sideShadowHeight,\n        width: rightShadowWidth,\n        style: shadowStyle\n      }), jsx(\"line\", {\n        x1: viewportEndX,\n        y1: viewportStartY,\n        x2: viewportEndX,\n        y2: viewportEndY,\n        style: lineStyle\n      })]\n    }), bottomShadowHeight > 0 && jsxs(\"g\", {\n      children: [jsx(\"rect\", {\n        onClick: onClick,\n        onMouseDown: stopPropagation,\n        onPointerDown: stopPropagation,\n        x: 0,\n        y: viewportEndY,\n        height: bottomShadowHeight,\n        width: rect.width,\n        style: shadowStyle\n      }), jsx(\"line\", {\n        x1: viewportStartX,\n        y1: viewportEndY,\n        x2: viewportEndX,\n        y2: viewportEndY,\n        style: lineStyle\n      })]\n    })]\n  });\n};\n\nconst Minimap = props => {\n  const {\n    shadowPadding = 0,\n    maxNodesCountAllowed = 150,\n    onRenderUnavailable = () => null,\n    renderArrow = () => undefined\n  } = props;\n  const graphViewport = useViewport();\n  const graphController = useGraphController();\n  const data = useGraphData();\n  const minimapContainerStyle = Object.assign({\n    background: defaultColors.minimapBackground\n  }, props.style);\n  const svgRef = React.useRef(null);\n  const graphConfig = useGraphConfig();\n  const rect = useMinimapRect(svgRef);\n  const rectRef = useRefValue(rect);\n  const minimapTransformMatrix = React.useMemo(() => {\n    if (!rect) {\n      return EMPTY_TRANSFORM_MATRIX;\n    }\n\n    return getZoomFitMatrix({\n      data,\n      rect,\n      graphConfig,\n      nodeMaxVisibleSize: {\n        width: 0,\n        height: 0\n      },\n      nodeMinVisibleSize: {\n        width: Infinity,\n        height: Infinity\n      }\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rect, data.nodes]);\n  const minimapTransformMatrixRef = useRefValue(minimapTransformMatrix);\n  const viewport = React.useMemo(() => {\n    if (!rect || !isViewportComplete(graphViewport)) {\n      return {\n        startX: 0,\n        startY: 0,\n        endX: 0,\n        endY: 0\n      };\n    }\n\n    const boundaryPoints = getVisibleArea(graphViewport);\n    const {\n      x: startX,\n      y: startY\n    } = transformPoint(boundaryPoints.minX, boundaryPoints.minY, minimapTransformMatrix);\n    const {\n      x: endX,\n      y: endY\n    } = transformPoint(boundaryPoints.maxX, boundaryPoints.maxY, minimapTransformMatrix);\n    return {\n      startX,\n      startY,\n      endX,\n      endY\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rect, minimapTransformMatrix, graphViewport.rect, ...graphViewport.transformMatrix]);\n  const onClick = React.useCallback(evt => {\n    evt.stopPropagation();\n\n    if (!rect) {\n      return;\n    }\n\n    const viewportWidth = viewport.endX - viewport.startX;\n    const viewportHeight = viewport.endY - viewport.startY;\n    const point = reverseTransformPoint(clamp(shadowPadding + viewportWidth / 2, rect.width - shadowPadding - viewportWidth / 2, evt.clientX - rect.left), clamp(shadowPadding + viewportHeight / 2, rect.height - shadowPadding - viewportHeight / 2, evt.clientY - rect.top), minimapTransformMatrix);\n    graphController.eventChannel.batch([{\n      type: GraphCanvasEvent.ScrollIntoView,\n      x: point.x,\n      y: point.y\n    }, {\n      type: GraphMinimapEvent.Click,\n      rawEvent: evt\n    }]);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [rect]);\n  const onStartDrag = React.useCallback((evt, eventProvider) => {\n    if (!rectRef.current) {\n      return;\n    }\n\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = rectRef.current;\n    const validMouseRect = {\n      startX: left + shadowPadding,\n      startY: top + shadowPadding,\n      endX: right - shadowPadding,\n      endY: bottom - shadowPadding\n    };\n    graphController.eventChannel.trigger({\n      type: GraphMinimapEvent.PanStart,\n      rawEvent: evt\n    });\n    const drag = new DragController(eventProvider, e => {\n      const x = clamp(validMouseRect.startX, validMouseRect.endX, e.clientX);\n      const y = clamp(validMouseRect.startY, validMouseRect.endY, e.clientY);\n      return {\n        x,\n        y\n      };\n    });\n\n    drag.onMove = ({\n      dx,\n      dy,\n      e\n    }) => {\n      const {\n        x,\n        y\n      } = getPointDeltaByClientDelta(-dx, -dy, minimapTransformMatrixRef.current);\n      graphController.eventChannel.trigger({\n        type: GraphMinimapEvent.Pan,\n        dx: x,\n        dy: y,\n        rawEvent: e\n      });\n    };\n\n    drag.start(evt);\n\n    drag.onEnd = () => {\n      graphController.eventChannel.trigger({\n        type: GraphMinimapEvent.PanEnd,\n        rawEvent: evt\n      });\n    };\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [shadowPadding]);\n  const arrowParams = React.useMemo(() => {\n    if (!rect) {\n      return {\n        showArrow: false,\n        arrowDeg: 0\n      };\n    }\n\n    const showArrow = viewport.startX > rect.width - shadowPadding || viewport.startY > rect.height - shadowPadding || viewport.endX < shadowPadding || viewport.endY < shadowPadding; // arrow rotate center\n\n    const x0 = rect.width / 2;\n    const y0 = rect.height / 2;\n    const x1 = (viewport.startX + viewport.endX) / 2;\n    const y1 = (viewport.startY + viewport.endY) / 2;\n    let arrowDeg = Math.atan2(y1 - y0, x1 - x0) * 180 / Math.PI;\n\n    if (arrowDeg < 0) {\n      arrowDeg = arrowDeg + 360;\n    }\n\n    return {\n      showArrow,\n      arrowDeg\n    };\n  }, [rect, viewport, shadowPadding]);\n  const onMouseDown = React.useCallback(evt => {\n    onStartDrag(evt.nativeEvent, new MouseMoveEventProvider(graphController.getGlobalEventTarget()));\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [onStartDrag]);\n  const touchController = React.useMemo(() => {\n    const handlers = new Map();\n    const touchDragAdapter = new TouchDragAdapter();\n    touchDragAdapter.on(\"start\", e => {\n      onStartDrag(e, touchDragAdapter);\n    });\n    handlers.set(1, touchDragAdapter);\n    return new TouchController(handlers); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onStartDrag, rect]);\n  const staticGraphEl = React.useMemo(() => jsx(StaticGraph, {\n    data: data,\n    transformMatrix: minimapTransformMatrix\n  }), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [data.nodes, ...minimapTransformMatrix]);\n\n  if (data.nodes.size > maxNodesCountAllowed) {\n    return jsx(\"div\", Object.assign({\n      className: \"minimap-container\",\n      style: minimapContainerStyle\n    }, {\n      children: onRenderUnavailable()\n    }));\n  }\n\n  return jsxs(\"div\", Object.assign({\n    className: `minimap-container ${styles.minimap}`,\n    style: minimapContainerStyle\n  }, {\n    children: [staticGraphEl, jsx(\"svg\", Object.assign({\n      className: styles.minimapSvg\n    }, touchController.eventHandlers, {\n      onMouseDown: onMouseDown,\n      ref: svgRef,\n      \"data-automation-id\": \"minimap-id\"\n    }, {\n      children: jsx(MiniMapShadow, {\n        containerRect: rect,\n        viewport: viewport,\n        shadowPadding: shadowPadding,\n        onClick: onClick\n      })\n    })), arrowParams.showArrow && renderArrow(arrowParams.arrowDeg)]\n  }));\n};\n\nconst ContextMenu = props => {\n  const classes = mergeStyleSets({\n    contextMenu: {\n      fontSize: 14,\n      background: defaultColors.contextMenuBackground,\n      color: defaultColors.fontColor,\n      border: `1px solid ${defaultColors.contextMenuBorder}`,\n      width: 193,\n      lineHeight: \"20px\",\n      cursor: \"default\",\n      \"> *\": {\n        padding: 8,\n        \":hover\": {\n          background: defaultColors.contextMenuHoverBackground\n        }\n      }\n    }\n  });\n  const propsMerged = Object.assign(Object.assign({}, props), {\n    className: `${classes.contextMenu} ${props.className}`\n  });\n  const contextMenuConfig = useContextMenuConfigContext();\n  contextMenuConfig.registerContextMenu(propsMerged);\n  return jsx(\"div\", {\n    children: props.children\n  });\n};\n\nconst NodeMenu = props => {\n  const contextMenuConfig = useContextMenuConfigContext();\n  contextMenuConfig.registerMenu(props.children, MenuType.Node);\n  return null;\n};\n\nconst EdgeMenu = props => {\n  const contextMenuConfig = useContextMenuConfigContext();\n  contextMenuConfig.registerMenu(props.children, MenuType.Edge);\n  return null;\n};\n\nconst PortMenu = props => {\n  const contextMenuConfig = useContextMenuConfigContext();\n  contextMenuConfig.registerMenu(props.children, MenuType.Port);\n  return null;\n};\n\nconst CanvasMenu = props => {\n  const contextMenuConfig = useContextMenuConfigContext();\n  contextMenuConfig.registerMenu(props.children, MenuType.Canvas);\n  return null;\n};\n\nconst MultiMenu = props => {\n  const contextMenuConfig = useContextMenuConfigContext();\n  contextMenuConfig.registerMenu(props.children, MenuType.Multi);\n  return null;\n};\n\nconst GridBackground = ({\n  smallGridAttributes,\n  gridAttributes,\n  backgroundAttributes,\n  rect\n}) => {\n  const rectX = rect.minX;\n  const rectY = rect.minY;\n  const width = rect.maxX - rect.minX;\n  const height = rect.maxY - rect.minY;\n  return jsxs(Fragment, {\n    children: [jsxs(\"defs\", {\n      children: [jsx(\"pattern\", Object.assign({\n        id: \"smallGrid\",\n        width: \"8\",\n        height: \"8\",\n        patternUnits: \"userSpaceOnUse\"\n      }, {\n        children: jsx(\"path\", Object.assign({\n          d: \"M 8 0 L 0 0 0 8\",\n          fill: \"none\",\n          stroke: \"gray\",\n          strokeWidth: \"0.5\"\n        }, smallGridAttributes))\n      })), jsxs(\"pattern\", Object.assign({\n        id: \"grid\",\n        width: \"80\",\n        height: \"80\",\n        patternUnits: \"userSpaceOnUse\"\n      }, {\n        children: [jsx(\"rect\", {\n          width: \"80\",\n          height: \"80\",\n          fill: \"url(#smallGrid)\"\n        }), jsx(\"path\", Object.assign({\n          d: \"M 80 0 L 0 0 0 80\",\n          fill: \"none\",\n          stroke: \"gray\",\n          strokeWidth: \"1\"\n        }, gridAttributes))]\n      }))]\n    }), jsx(\"rect\", Object.assign({\n      x: rectX,\n      y: rectY,\n      width: width,\n      height: height,\n      fill: \"url(#grid)\"\n    }, backgroundAttributes))]\n  });\n};\n\nclass TestAPI {\n  constructor(adapter) {\n    this.adapter = adapter;\n  }\n\n  getNodesCount() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield this.adapter.selectAll(\"g[data-automation-id*='node-container-']\")).length;\n    });\n  }\n\n  getEdgesCount() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield this.adapter.selectAll(\"g[data-automation-id*='edge-container-']\")).length;\n    });\n  }\n\n  addNodeFromItemPanel(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const addColumnsModuleInPanelElPos = yield this.getCentralPosBySelector(options.itemSelector);\n      yield this.adapter.mouseMove(addColumnsModuleInPanelElPos.x, addColumnsModuleInPanelElPos.y);\n      yield this.adapter.mouseDown();\n      const canvasBBOx = yield this.getCanvasBoundingBox();\n      yield this.adapter.mouseMove(canvasBBOx.x + options.x, canvasBBOx.y + options.y);\n      yield this.adapter.mouseUp();\n    });\n  }\n\n  connectTwoNodes({\n    sourceNodeName,\n    sourcePortName,\n    targetNodeName,\n    targetPortName\n  }) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const sourcePos = yield this.getCentralPosBySelector(this.getPortCssSelector(sourceNodeName, sourcePortName));\n      yield this.adapter.mouseMove(sourcePos.x, sourcePos.y);\n      yield this.adapter.mouseDown();\n      const targetPos = yield this.getCentralPosBySelector(this.getPortCssSelector(targetNodeName, targetPortName));\n      yield this.adapter.mouseMove(targetPos.x, targetPos.y);\n      yield this.adapter.mouseUp();\n    });\n  }\n\n  draggingNode(nodeName, toPosition) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const nodeCenterPos = yield this.getCentralPosBySelector(this.getNodeCssSelector(nodeName));\n      yield this.adapter.mouseMove(nodeCenterPos.x, nodeCenterPos.y);\n      yield this.adapter.mouseDown();\n      const canvasBBOx = yield this.getCanvasBoundingBox();\n      yield this.adapter.mouseMove(toPosition.x + canvasBBOx.x, toPosition.y + canvasBBOx.y);\n    });\n  }\n\n  rightClickOnNode(nodeName) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.rightClick(this.getNodeCssSelector(nodeName));\n    });\n  }\n\n  clickOnNode(nodeName) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.click(this.getNodeCssSelector(nodeName));\n    });\n  }\n\n  hoverOnNode(nodeName) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.hover(this.getNodeCssSelector(nodeName));\n    });\n  }\n\n  hoverOnPort(nodeName, portName) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.hover(this.getPortCssSelector(nodeName, portName));\n    });\n  }\n\n  hoverOnEdge(edgeId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.hover(this.getEdgeCssSelector(edgeId));\n    });\n  }\n\n  getAutoAlignHintLineCount() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield this.adapter.selectAll(\"line.auto-align-hint\")).length;\n    });\n  }\n  /**\r\n   * select node(s) with ctrl key\r\n   *\r\n   * @param nodeNames node names to be selected\r\n   */\n\n\n  clickOnNodesWithCtrlKey(nodeNames) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.keyDown(\"Control\");\n\n      for (const name of nodeNames) {\n        yield this.clickOnNode(name);\n      }\n\n      yield this.adapter.keyUp(\"Control\");\n    });\n  }\n\n  rightClickOnCanvas(x, y) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.rightClick(\"svg.react-dag-editor-svg-container\", {\n        position: {\n          x,\n          y\n        }\n      });\n    });\n  }\n\n  selectArea(start, end) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.mouseMove(start.x, start.y);\n      yield this.adapter.mouseDown();\n      yield this.adapter.mouseMove(end.x, end.y);\n      yield this.adapter.mouseUp();\n    });\n  }\n\n  connectWithKeyboard(isCancelConnect = false) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // focus to a port\n      yield this.focusOnCanvasWithKeyboard();\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"Tab\"); // enter connect mode\n\n      yield this.adapter.keyDown(\"Alt\");\n      yield this.adapter.keyPress(\"c\");\n      yield this.adapter.keyUp(\"Alt\"); // focus to another port\n\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"Tab\"); // finish connect or cancel connect\n\n      if (isCancelConnect) {\n        yield this.adapter.keyPress(\"Escape\");\n      } else {\n        yield this.adapter.keyPress(\"Enter\");\n      }\n    });\n  }\n\n  navigateAroundNodesWithKeyboard() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.focusOnCanvasWithKeyboard();\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"ArrowDown\");\n      yield this.adapter.keyPress(\"ArrowDown\");\n      yield this.adapter.keyPress(\"ArrowRight\");\n      yield this.adapter.keyPress(\"ArrowLeft\");\n    });\n  }\n\n  navigateBackWithKeyboard() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.focusOnCanvasWithKeyboard();\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"Tab\"); // pressing shift key to navigate back\n\n      yield this.adapter.keyDown(\"Shift\");\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyUp(\"Shift\");\n    });\n  }\n\n  navigateAroundPortsWithKeyboard() {\n    return __awaiter(this, void 0, void 0, function* () {\n      // focus on canvas\n      yield this.focusOnCanvasWithKeyboard(); // navigate to a node\n\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"ArrowDown\"); // navigate to a port\n\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"ArrowDown\");\n      yield this.adapter.keyPress(\"ArrowDown\");\n    });\n  }\n\n  goToConnectedPortWithKeyboard() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.focusOnCanvasWithKeyboard(); // navigate to a node\n\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"ArrowDown\"); // navigate to a port\n\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"Tab\"); // go to connected port\n\n      yield this.adapter.keyDown(\"Alt\");\n      yield this.adapter.keyPress(\"g\");\n      yield this.adapter.keyUp(\"Alt\");\n    });\n  }\n\n  deleteNodeWithKeyboard() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.focusOnCanvasWithKeyboard();\n      yield this.adapter.keyPress(\"Tab\");\n      yield this.adapter.keyPress(\"ArrowDown\");\n      yield this.adapter.keyPress(\"Delete\");\n    });\n  }\n\n  panCanvas(from, to) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.mouseMove(from.x, from.y);\n      yield this.adapter.mouseDown();\n      yield this.adapter.mouseMove(to.x, to.y);\n      yield this.adapter.mouseUp();\n    });\n  }\n\n  getElementBoundingBox(cssSelector) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const el = yield this.adapter.waitForSelector(cssSelector);\n      const {\n        x = 0,\n        y = 0,\n        height = 0,\n        width = 0\n      } = (yield el.boundingBox()) || {};\n      return {\n        x,\n        y,\n        width,\n        height\n      };\n    });\n  }\n\n  getCanvasBoundingBox() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getElementBoundingBox(\"svg.react-dag-editor-svg-container\");\n    });\n  }\n\n  getMinimapBoundingBox() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        x,\n        y,\n        height,\n        width\n      } = yield this.getElementBoundingBox(\"svg[data-automation-id*='minimap-id']\");\n      return {\n        x,\n        y,\n        width,\n        height\n      };\n    });\n  }\n\n  dragOnItem(start, end) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.selectArea(start, end);\n    });\n  }\n\n  getNodeCentralPosition(nodeName) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const pos = yield this.getCentralPosBySelector(this.getNodeCssSelector(nodeName));\n      return pos;\n    });\n  }\n\n  getNodes() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getDomElements(\"g[data-automation-id*='node-container-']\");\n    });\n  }\n\n  getEdges() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getDomElements(\"g[data-automation-id*='edge-container-']\");\n    });\n  }\n\n  getPorts() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getDomElements(\"g[aria-roledescription='port']\");\n    });\n  }\n\n  getNodeTooltips() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getDomElements(\".node-tooltips\");\n    });\n  }\n\n  getPortTooltips() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getDomElements(\".port-tooltips\");\n    });\n  }\n\n  composeGraph() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const nodes = yield this.getNodes();\n      const edges = yield this.getEdges();\n      const ports = yield this.getPorts();\n      const nodeTooltips = yield this.getNodeTooltips();\n      const portTooltips = yield this.getPortTooltips();\n      return {\n        nodes,\n        edges,\n        ports,\n        nodeTooltips,\n        portTooltips\n      };\n    });\n  }\n\n  getCentralPosBySelector(cssSelector) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getCentralPosByBBox(yield this.getElementBoundingBox(cssSelector));\n    });\n  }\n\n  getDomElements(selector) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      return Promise.all((_a = yield this.adapter.selectAll(selector)) === null || _a === void 0 ? void 0 : _a.map(handle => __awaiter(this, void 0, void 0, function* () {\n        const bbox = yield handle.boundingBox();\n        const className = yield handle.getAttribute(\"class\");\n        const innerHTML = yield handle.innerHTML();\n        const textContent = yield handle.textContent();\n        const ariaLabel = yield handle.getAttribute(\"aria-label\");\n        const automationId = yield handle.getAttribute(\"data-automation-id\");\n        return {\n          bbox,\n          textContent,\n          className,\n          innerHTML,\n          ariaLabel,\n          automationId\n        };\n      })));\n    });\n  }\n\n  getCentralPosByBBox(bbox) {\n    if (!bbox) {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n\n    return {\n      x: bbox.width / 2 + bbox.x,\n      y: bbox.height / 2 + bbox.y\n    };\n  }\n\n  getPortCssSelector(nodeName, portName) {\n    return `g[data-automation-id*='${nodeName}'][data-automation-id*='${portName}'][data-automation-id*='port-']`;\n  }\n\n  getNodeCssSelector(nodeName) {\n    return `g[data-automation-id*='node-container-'][data-automation-id*='${nodeName}']`;\n  }\n\n  getEdgeCssSelector(edgeId) {\n    return `g[data-automation-id*='edge-container-${edgeId}']`;\n  }\n\n  focusOnCanvasWithKeyboard() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.adapter.keyDown(\"Alt\");\n      yield this.adapter.keyDown(\"Shift\");\n      yield this.adapter.keyPress(\"f\");\n      yield this.adapter.keyUp(\"Alt\");\n      yield this.adapter.keyUp(\"Shift\");\n    });\n  }\n\n}\n\nexport { ACTIVATED_STATUS, bitset as Bitset, BrowserType, CanvasMenu, CanvasMouseMode, ContextMenu, ContextMenuConfig, ContextMenuConfigContext, DEFAULT_GRAPH_SETTINGS, DEFAULT_NODE_MAX_VISIBLE_SIZE, DEFAULT_NODE_MIN_VISIBLE_SIZE, Debug, DefaultClipboard, DefaultStorage, Direction, EMPTY_CONNECT_STATE, EMPTY_GAP, EMPTY_GRAPH_STATE, EMPTY_STATUS, EMPTY_TRANSFORM_MATRIX, EMPTY_VIEW_PORT, EdgeMenu, EdgeModel, GanttChartFeatures, Graph, GraphBehavior, GraphCanvasEvent, GraphConfigBuilder, GraphConfigContext, GraphContextMenuEvent, GraphEdgeEvent, GraphEdgeStatus, GraphFeatures, GraphMinimapEvent, GraphModel, GraphNodeAnchors, GraphNodeEvent, GraphNodeStatus, GraphPortEvent, GraphPortStatus, GraphScrollBarEvent, GraphStateContext, GraphValueContext, GridBackground, Item, LinearEquation, MenuType, Minimap, MultiMenu, NodeAnchor, NodeMenu, NodeModel, PortMenu, RESIZE_POINT_HEIGHT, RESIZE_POINT_WIDTH, ReactDagEditor, SELECTED_STATUS, StaticGraph, TestAPI, ViewportContext, allFeatures, applyDefaultPortsPosition, applyHorizontalGraphPortsPosition, arrayEquals, canRedo, canUndo, checkRectIntersect, clamp, composeReducers, constantEmptyArray, createGraphState, dataReadonlyMode, debounce, defaultFeatures, defaultGetPositionFromEvent, defaultGraphStateContext, defaultPort, diffGraphEdge, diffGraphNode, diffGraphPort, distance, filterSelectedItems, focusArea, getBrowser, getClientDeltaByPointDelta, getClientPointFromRealPoint, getContainer, getContainerCenter, getContainerClientPoint, getContentArea$1 as getContentArea, getCriticalPath, getCurvePathD, getEdgeSourceTargetCoordinate, getEdgeUid, getGraphReducer, getGroupRect, getLinearFunction, getMinimapRect, getNearestConnectablePort, getNeighborPorts, getNodeAutomationId, getNodeConfig, getNodeRect, getNodeSize, getNodeUid, getOffsetLimit, getPointDeltaByClientDelta, getPortAutomationId, getPortPosition, getPortPositionByPortId, getPortUid, getRealPointFromClientPoint, getRectHeight, getRectWidth, getRelativePoint, getRenderedArea, getRenderedEdges, getRenderedNodes, getScaleLimit, getScaleRange, getTopoSortingNodes, getVisibleArea, getVisibleNodes, getZoomFitMatrix, isActivated, isCanvasEvent, isConnectable, isEdgeEvent, isMacOs, isMobile, isNodeEditing, isNodeEvent, isNodeVisible, isPointInRect, isPointVisible, isPortEvent, isRectVisible, isSelected, isSupported, isViewportComplete, isViewportEmpty, isWithinRect, isWithinThreshold, line, markCriticalPath, markEdgeDirty, memoize, minimapPan, nodeSelection, notSelected, pan, previewMode, pushHistory, rect, redo, resetConnectStatus, resetNodePortsState, resetUndoStack, resolveValueOrCallback, reverseTransformPoint, scrollIntoView, setData, stopPropagation, transformPoint, unSelectAllEntity, undo, updateData, updateStatus, useAlignmentLines, useBackgroundRect, useConnectingState, useContainerRect, useContextMenuConfigContext, useDeferredValue, useGetMouseDownOnAnchor, useGraphConfig, useGraphController, useGraphData, useGraphReducer, useGraphState, useGraphTouchHandler, useMinimapRect, useRenderedArea, useSafariScale, useSelectBox, useThrottle, useUpdateViewportCallback, useViewport, useVirtualization, useWheelHandler, zoom, zoomTo };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}