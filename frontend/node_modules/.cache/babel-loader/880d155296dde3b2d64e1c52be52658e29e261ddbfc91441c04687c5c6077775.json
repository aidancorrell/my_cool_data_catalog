{"ast":null,"code":"import warning from 'tiny-warning';\n\n/**\n * Set selector.\n *\n * @param {Object} original rule\n * @param {String} className class string\n * @return {Boolean} flag, indicating function was successfull or not\n */\nfunction registerClass(rule, className) {\n  // Skip falsy values\n  if (!className) return true; // Support array of class names `{composes: ['foo', 'bar']}`\n\n  if (Array.isArray(className)) {\n    for (var index = 0; index < className.length; index++) {\n      var isSetted = registerClass(rule, className[index]);\n      if (!isSetted) return false;\n    }\n    return true;\n  } // Support space separated class names `{composes: 'foo bar'}`\n\n  if (className.indexOf(' ') > -1) {\n    return registerClass(rule, className.split(' '));\n  }\n  var _ref = rule.options,\n    parent = _ref.parent; // It is a ref to a local rule.\n\n  if (className[0] === '$') {\n    var refRule = parent.getRule(className.substr(1));\n    if (!refRule) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Referenced rule is not defined. \\n\" + rule.toString()) : void 0;\n      return false;\n    }\n    if (refRule === rule) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Cyclic composition detected. \\n\" + rule.toString()) : void 0;\n      return false;\n    }\n    parent.classes[rule.key] += \" \" + parent.classes[refRule.key];\n    return true;\n  }\n  parent.classes[rule.key] += \" \" + className;\n  return true;\n}\n/**\n * Convert compose property to additional class, remove property from original styles.\n *\n * @param {Rule} rule\n * @api public\n */\n\nfunction jssCompose() {\n  function onProcessStyle(style, rule) {\n    if (!('composes' in style)) return style;\n    registerClass(rule, style.composes); // Remove composes property to prevent infinite loop.\n\n    delete style.composes;\n    return style;\n  }\n  return {\n    onProcessStyle: onProcessStyle\n  };\n}\nexport default jssCompose;","map":{"version":3,"names":["warning","registerClass","rule","className","Array","isArray","index","length","isSetted","indexOf","split","_ref","options","parent","refRule","getRule","substr","process","env","NODE_ENV","toString","classes","key","jssCompose","onProcessStyle","style","composes"],"sources":["/Users/aidancorrell/repos/data_catalog/frontend/node_modules/jss-plugin-compose/dist/jss-plugin-compose.esm.js"],"sourcesContent":["import warning from 'tiny-warning';\n\n/**\n * Set selector.\n *\n * @param {Object} original rule\n * @param {String} className class string\n * @return {Boolean} flag, indicating function was successfull or not\n */\nfunction registerClass(rule, className) {\n  // Skip falsy values\n  if (!className) return true; // Support array of class names `{composes: ['foo', 'bar']}`\n\n  if (Array.isArray(className)) {\n    for (var index = 0; index < className.length; index++) {\n      var isSetted = registerClass(rule, className[index]);\n      if (!isSetted) return false;\n    }\n\n    return true;\n  } // Support space separated class names `{composes: 'foo bar'}`\n\n\n  if (className.indexOf(' ') > -1) {\n    return registerClass(rule, className.split(' '));\n  }\n\n  var _ref = rule.options,\n      parent = _ref.parent; // It is a ref to a local rule.\n\n  if (className[0] === '$') {\n    var refRule = parent.getRule(className.substr(1));\n\n    if (!refRule) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Referenced rule is not defined. \\n\" + rule.toString()) : void 0;\n      return false;\n    }\n\n    if (refRule === rule) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Cyclic composition detected. \\n\" + rule.toString()) : void 0;\n      return false;\n    }\n\n    parent.classes[rule.key] += \" \" + parent.classes[refRule.key];\n    return true;\n  }\n\n  parent.classes[rule.key] += \" \" + className;\n  return true;\n}\n/**\n * Convert compose property to additional class, remove property from original styles.\n *\n * @param {Rule} rule\n * @api public\n */\n\n\nfunction jssCompose() {\n  function onProcessStyle(style, rule) {\n    if (!('composes' in style)) return style;\n    registerClass(rule, style.composes); // Remove composes property to prevent infinite loop.\n\n    delete style.composes;\n    return style;\n  }\n\n  return {\n    onProcessStyle: onProcessStyle\n  };\n}\n\nexport default jssCompose;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,cAAc;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACC,IAAI,EAAEC,SAAS,EAAE;EACtC;EACA,IAAI,CAACA,SAAS,EAAE,OAAO,IAAI,CAAC,CAAC;;EAE7B,IAAIC,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC,EAAE;IAC5B,KAAK,IAAIG,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGH,SAAS,CAACI,MAAM,EAAED,KAAK,EAAE,EAAE;MACrD,IAAIE,QAAQ,GAAGP,aAAa,CAACC,IAAI,EAAEC,SAAS,CAACG,KAAK,CAAC,CAAC;MACpD,IAAI,CAACE,QAAQ,EAAE,OAAO,KAAK;IAC7B;IAEA,OAAO,IAAI;EACb,CAAC,CAAC;;EAGF,IAAIL,SAAS,CAACM,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;IAC/B,OAAOR,aAAa,CAACC,IAAI,EAAEC,SAAS,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC;EAClD;EAEA,IAAIC,IAAI,GAAGT,IAAI,CAACU,OAAO;IACnBC,MAAM,GAAGF,IAAI,CAACE,MAAM,CAAC,CAAC;;EAE1B,IAAIV,SAAS,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACxB,IAAIW,OAAO,GAAGD,MAAM,CAACE,OAAO,CAACZ,SAAS,CAACa,MAAM,CAAC,CAAC,CAAC,CAAC;IAEjD,IAAI,CAACF,OAAO,EAAE;MACZG,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGnB,OAAO,CAAC,KAAK,EAAE,0CAA0C,GAAGE,IAAI,CAACkB,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;MAC7H,OAAO,KAAK;IACd;IAEA,IAAIN,OAAO,KAAKZ,IAAI,EAAE;MACpBe,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGnB,OAAO,CAAC,KAAK,EAAE,uCAAuC,GAAGE,IAAI,CAACkB,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;MAC1H,OAAO,KAAK;IACd;IAEAP,MAAM,CAACQ,OAAO,CAACnB,IAAI,CAACoB,GAAG,CAAC,IAAI,GAAG,GAAGT,MAAM,CAACQ,OAAO,CAACP,OAAO,CAACQ,GAAG,CAAC;IAC7D,OAAO,IAAI;EACb;EAEAT,MAAM,CAACQ,OAAO,CAACnB,IAAI,CAACoB,GAAG,CAAC,IAAI,GAAG,GAAGnB,SAAS;EAC3C,OAAO,IAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASoB,UAAUA,CAAA,EAAG;EACpB,SAASC,cAAcA,CAACC,KAAK,EAAEvB,IAAI,EAAE;IACnC,IAAI,EAAE,UAAU,IAAIuB,KAAK,CAAC,EAAE,OAAOA,KAAK;IACxCxB,aAAa,CAACC,IAAI,EAAEuB,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;;IAErC,OAAOD,KAAK,CAACC,QAAQ;IACrB,OAAOD,KAAK;EACd;EAEA,OAAO;IACLD,cAAc,EAAEA;EAClB,CAAC;AACH;AAEA,eAAeD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}