{"ast":null,"code":"var _jsxFileName = \"/Users/aidancorrell/repos/data_catalog/frontend/src/components/LineageGraph.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\nimport React, { useEffect } from \"react\";\nimport { Graph } from \"react-d3-graph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineageGraph = ({\n  lineageData\n}) => {\n  _s();\n  const graphConfig = {\n    automaticRearrangeAfterDropNode: false,\n    collapsible: false,\n    directed: false,\n    focusAnimationDuration: 0.75,\n    focusZoom: 1,\n    freezeAllDragEvents: false,\n    height: 400,\n    highlightDegree: 1,\n    highlightOpacity: 1,\n    linkHighlightBehavior: false,\n    maxZoom: 8,\n    minZoom: 0.1,\n    nodeHighlightBehavior: true,\n    panAndZoom: true,\n    staticGraph: false,\n    staticGraphWithDragAndDrop: false,\n    width: 800,\n    d3: {\n      alphaTarget: 0.05,\n      gravity: -100,\n      linkLength: 100,\n      linkStrength: 1,\n      disableLinkForce: false\n    },\n    node: {\n      color: \"#d3d3d3\",\n      fontColor: \"black\",\n      fontSize: 8,\n      fontWeight: \"normal\",\n      highlightColor: \"SAME\",\n      highlightFontSize: 8,\n      highlightFontWeight: \"normal\",\n      highlightStrokeColor: \"SAME\",\n      highlightStrokeWidth: \"SAME\",\n      labelProperty: \"id\",\n      mouseCursor: \"pointer\",\n      opacity: 1,\n      renderLabel: true,\n      size: 200,\n      strokeColor: \"none\",\n      strokeWidth: 1.5,\n      svg: \"\",\n      symbolType: \"circle\"\n    },\n    link: {\n      color: \"#d3d3d3\",\n      fontColor: \"black\",\n      fontSize: 8,\n      fontWeight: \"normal\",\n      highlightColor: \"SAME\",\n      highlightFontSize: 8,\n      highlightFontWeight: \"normal\",\n      labelProperty: \"label\",\n      mouseCursor: \"pointer\",\n      opacity: 1,\n      renderLabel: false,\n      semanticStrokeWidth: false,\n      strokeWidth: 1.5,\n      markerHeight: 6,\n      markerWidth: 6,\n      strokeDasharray: 0,\n      strokeDashoffset: 0,\n      strokeLinecap: \"butt\"\n    }\n  };\n  useEffect(() => {\n    // Log lineageData to ensure it has the expected structure\n    console.log(\"Lineage data:\", lineageData);\n  }, [lineageData]);\n\n  // Check if lineageData is in the correct format\n  if (!lineageData || !lineageData.nodes || !lineageData.links) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error: Invalid lineage data format.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n  class ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        hasError: false\n      };\n    }\n    static getDerivedStateFromError(error) {\n      return {\n        hasError: true\n      };\n    }\n    componentDidCatch(error, errorInfo) {\n      console.error(\"Error occurred:\", error, errorInfo);\n    }\n    render() {\n      if (this.state.hasError) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Something went wrong while rendering the graph.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 20\n        }, this);\n      }\n      return this.props.children;\n    }\n  }\n  const handleNodeClick = (nodeId, event) => {\n    if (!nodeId) {\n      console.error(\"Invalid node clicked:\", nodeId);\n      return; // Prevent further actions if nodeId is invalid\n    }\n    console.log(\"Node clicked:\", nodeId);\n    alert(`You clicked on node: ${nodeId}`); // Example of a simple action\n\n    console.log(\"Event:\", event);\n    console.log(nodeId || \"Unknown node clicked\");\n  };\n  const handleGraphClick = event => {\n    if (event.target.tagName === \"svg\") {\n      console.log(\"Clicked on empty space.\");\n      return;\n    }\n    if (!event.target) {\n      console.log(\"White space clicked.\");\n      return;\n    }\n    console.log(\"Graph element clicked:\", event.target);\n    console.log(\"Graph whitespace clicked.\");\n    alert(\"Clicked on empty graph area.\");\n  };\n  const handleNodeDrag = (nodeId, x, y) => {\n    console.log(`Node ${nodeId} dragged to position (${x}, ${y})`);\n    // Ensure the data is being correctly updated\n    // For example, update the node's position in your lineageData\n  };\n  const handleNodeDrop = nodeId => {\n    console.log(`Dropped node: ${nodeId}`);\n  };\n  const handleNodeDragEnd = nodeId => {\n    console.log(`Finished dragging node: ${nodeId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"600px\",\n      width: \"100%\",\n      border: \"2px solid black\",\n      // Adds a solid black border\n      borderRadius: \"8px\",\n      // Optional: Makes the edges rounded\n      padding: \"10px\",\n      // Optional: Adds spacing inside the border\n      boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" // Optional: Adds a shadow for a nice effect\n    },\n    children: lineageData ? /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n      children: /*#__PURE__*/_jsxDEV(Graph, {\n        id: \"lineage-graph\",\n        data: lineageData,\n        config: graphConfig,\n        onClickNode: handleNodeClick,\n        onClickGraph: handleGraphClick,\n        onNodeDrag: handleNodeDrag,\n        onNodeDrop: handleNodeDrop,\n        onNodeDragEnd: handleNodeDragEnd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading lineage graph...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n_s(LineageGraph, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LineageGraph;\nexport default LineageGraph;\nvar _c;\n$RefreshReg$(_c, \"LineageGraph\");","map":{"version":3,"names":["React","useEffect","Graph","jsxDEV","_jsxDEV","LineageGraph","lineageData","_s","graphConfig","automaticRearrangeAfterDropNode","collapsible","directed","focusAnimationDuration","focusZoom","freezeAllDragEvents","height","highlightDegree","highlightOpacity","linkHighlightBehavior","maxZoom","minZoom","nodeHighlightBehavior","panAndZoom","staticGraph","staticGraphWithDragAndDrop","width","d3","alphaTarget","gravity","linkLength","linkStrength","disableLinkForce","node","color","fontColor","fontSize","fontWeight","highlightColor","highlightFontSize","highlightFontWeight","highlightStrokeColor","highlightStrokeWidth","labelProperty","mouseCursor","opacity","renderLabel","size","strokeColor","strokeWidth","svg","symbolType","link","semanticStrokeWidth","markerHeight","markerWidth","strokeDasharray","strokeDashoffset","strokeLinecap","console","log","nodes","links","children","fileName","_jsxFileName","lineNumber","columnNumber","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","render","handleNodeClick","nodeId","event","alert","handleGraphClick","target","tagName","handleNodeDrag","x","y","handleNodeDrop","handleNodeDragEnd","style","border","borderRadius","padding","boxShadow","id","data","config","onClickNode","onClickGraph","onNodeDrag","onNodeDrop","onNodeDragEnd","_c","$RefreshReg$"],"sources":["/Users/aidancorrell/repos/data_catalog/frontend/src/components/LineageGraph.jsx"],"sourcesContent":["// import React from \"react\";\nimport React, { useEffect } from \"react\";\nimport { Graph } from \"react-d3-graph\";\n\nconst LineageGraph = ({ lineageData }) => {\n    const graphConfig = {\n        automaticRearrangeAfterDropNode: false,\n        collapsible: false,\n        directed: false,\n        focusAnimationDuration: 0.75,\n        focusZoom: 1,\n        freezeAllDragEvents: false,\n        height: 400,\n        highlightDegree: 1,\n        highlightOpacity: 1,\n        linkHighlightBehavior: false,\n        maxZoom: 8,\n        minZoom: 0.1,\n        nodeHighlightBehavior: true,\n        panAndZoom: true,\n        staticGraph: false,\n        staticGraphWithDragAndDrop: false,\n        width: 800,\n        d3: {\n          alphaTarget: 0.05,\n          gravity: -100,\n          linkLength: 100,\n          linkStrength: 1,\n          disableLinkForce: false\n        },\n        node: {\n          color: \"#d3d3d3\",\n          fontColor: \"black\",\n          fontSize: 8,\n          fontWeight: \"normal\",\n          highlightColor: \"SAME\",\n          highlightFontSize: 8,\n          highlightFontWeight: \"normal\",\n          highlightStrokeColor: \"SAME\",\n          highlightStrokeWidth: \"SAME\",\n          labelProperty: \"id\",\n          mouseCursor: \"pointer\",\n          opacity: 1,\n          renderLabel: true,\n          size: 200,\n          strokeColor: \"none\",\n          strokeWidth: 1.5,\n          svg: \"\",\n          symbolType: \"circle\"\n        },\n        link: {\n          color: \"#d3d3d3\",\n          fontColor: \"black\",\n          fontSize: 8,\n          fontWeight: \"normal\",\n          highlightColor: \"SAME\",\n          highlightFontSize: 8,\n          highlightFontWeight: \"normal\",\n          labelProperty: \"label\",\n          mouseCursor: \"pointer\",\n          opacity: 1,\n          renderLabel: false,\n          semanticStrokeWidth: false,\n          strokeWidth: 1.5,\n          markerHeight: 6,\n          markerWidth: 6,\n          strokeDasharray: 0,\n          strokeDashoffset: 0,\n          strokeLinecap: \"butt\"\n        }\n      };\n\n  useEffect(() => {\n    // Log lineageData to ensure it has the expected structure\n    console.log(\"Lineage data:\", lineageData);\n  }, [lineageData]);\n\n  // Check if lineageData is in the correct format\n  if (!lineageData || !lineageData.nodes || !lineageData.links) {\n    return <div>Error: Invalid lineage data format.</div>;\n  }\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.error(\"Error occurred:\", error, errorInfo);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <p>Something went wrong while rendering the graph.</p>;\n        }\n        return this.props.children;\n    }\n}\n\n    \n    \n\nconst handleNodeClick = (nodeId,event) => {\n    if (!nodeId) {\n        console.error(\"Invalid node clicked:\", nodeId);\n        return; // Prevent further actions if nodeId is invalid\n    }\n    console.log(\"Node clicked:\", nodeId);\n    alert(`You clicked on node: ${nodeId}`);  // Example of a simple action\n\n    console.log(\"Event:\", event); \n\n    console.log(nodeId || \"Unknown node clicked\");\n\n};\n\n\nconst handleGraphClick = (event) => {\n    if (event.target.tagName === \"svg\") {\n        console.log(\"Clicked on empty space.\");\n        return;\n    }\n\n    if (!event.target) {\n        console.log(\"White space clicked.\");\n        return;\n    }\n\n    console.log(\"Graph element clicked:\", event.target);\n    console.log(\"Graph whitespace clicked.\");\n    alert(\"Clicked on empty graph area.\");\n};\n\nconst handleNodeDrag = (nodeId, x, y) => {\n    console.log(`Node ${nodeId} dragged to position (${x}, ${y})`);\n    // Ensure the data is being correctly updated\n    // For example, update the node's position in your lineageData\n};\n\nconst handleNodeDrop = (nodeId) => {\n    console.log(`Dropped node: ${nodeId}`);\n};\n\nconst handleNodeDragEnd = (nodeId) => {\n    console.log(`Finished dragging node: ${nodeId}`);\n};\n\n\n\n    return (\n        <div \n        style={{\n            height: \"600px\",\n            width: \"100%\",\n            border: \"2px solid black\", // Adds a solid black border\n            borderRadius: \"8px\", // Optional: Makes the edges rounded\n            padding: \"10px\", // Optional: Adds spacing inside the border\n            boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\", // Optional: Adds a shadow for a nice effect\n        }}\n        >\n            {lineageData ? (\n            <ErrorBoundary>\n                <Graph\n                    id=\"lineage-graph\"\n                    data={lineageData}\n                    config={graphConfig}\n                    onClickNode={handleNodeClick}\n                    onClickGraph={handleGraphClick}\n                    onNodeDrag={handleNodeDrag}\n                    onNodeDrop={handleNodeDrop}\n                    onNodeDragEnd={handleNodeDragEnd}\n                />\n            </ErrorBoundary>\n            ) : (\n                <p>Loading lineage graph...</p>\n            )}\n        </div>\n    );\n};\n\nexport default LineageGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}